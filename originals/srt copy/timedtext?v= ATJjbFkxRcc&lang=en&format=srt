1
00:00:00,000 --> 00:00:07,000
>> MUCHNICK: Aviary is a company that creates
multimedia online editing software. Whether

2
00:00:09,110 --> 00:00:13,280
you want do image editing, vector editing,
audio editing, or more right in your browser,

3
00:00:13,280 --> 00:00:19,430
we provide the software to do it. Originally,
Aviary started with a company called worth1000.com

4
00:00:19,430 --> 00:00:23,610
which is a competition site where artists
can compete in fun image editing contests.

5
00:00:23,610 --> 00:00:27,619
And we created software to help serve the
needs of that community and realized it could

6
00:00:27,619 --> 00:00:30,070
expand from there so that anyone can do image
editing online.

7
00:00:30,070 --> 00:00:34,680
>> What is your extension about?
>> MUCHNICK: Aviary's Chrome extension allows

8
00:00:34,680 --> 00:00:39,190
anyone to capture a screenshot of any web
page your are on, quickly and easily right

9
00:00:39,190 --> 00:00:44,970
from within Chrome. You can then mark it up
using Aviary's editor--let say add arrows,

10
00:00:44,970 --> 00:00:48,220
any kind of text mark up, and you can crop
it, rotate it around, do anything you want

11
00:00:48,220 --> 00:00:51,910
with it, and then quickly share it with your
friends. We're hoping to extend the usefulness

12
00:00:51,910 --> 00:00:55,710
of the extension, so that it can capture full
page content not just what's on the screen

13
00:00:55,710 --> 00:01:00,550
natively. Additionally, we have a few other
plans to make it easier to edit images directly

14
00:01:00,550 --> 00:01:04,769
off of any web page you're on.
>> How did you create the screenshot functionality

15
00:01:04,769 --> 00:01:07,960
of your extension?
>> MUCHNICK: Our extension takes a screenshot

16
00:01:07,960 --> 00:01:13,290
of the page and makes it editable on aviary.com.
To capture the screenshot, we use Chrome's

17
00:01:13,290 --> 00:01:18,630
capture visible tab method. To make it available
to most of the Flash base Aviary tools, we

18
00:01:18,630 --> 00:01:25,180
upload the image data to aviary.com via XML
HTTP request. For one of the tools, we create

19
00:01:25,180 --> 00:01:29,540
a local conduit to make the image data directly
available to the Flash application without

20
00:01:29,540 --> 00:01:34,070
uploading it to aviary.com at all.
>> What got you interested in Google Chrome

21
00:01:34,070 --> 00:01:35,830
extensions?
>> MUCHNICK: What got us interested in Chrome

22
00:01:35,830 --> 00:01:41,290
extensions was really how--first of all, how
quickly Chrome works and how smoothly all

23
00:01:41,290 --> 00:01:45,970
of Aviary's tools operate on it. We've been
using Chrome since day one because it really

24
00:01:45,970 --> 00:01:50,119
enables our development to go so smoothly.
We work with web pages all the time and we

25
00:01:50,119 --> 00:01:55,390
really do a lot of screen capture and mark
up internally in our office. So for us to

26
00:01:55,390 --> 00:02:00,330
now take that Chrome extension and provide
it to our user base was a no-brainer. And

27
00:02:00,330 --> 00:02:03,920
additionally, if it encourages Aviary's users
to get a better experience because they're

28
00:02:03,920 --> 00:02:06,660
using the Chrome browser, well that's a--that's
a huge win for us.

29
00:02:06,660 --> 00:02:09,539
>> What was your experience developing Google
Chrome extensions?

30
00:02:09,539 --> 00:02:13,560
>> MUCHNICK: Our experience developing Chrome
extensions was--was great, it was extremely

31
00:02:13,560 --> 00:02:18,980
simple to develop and deploy. And we love
the fact that once you developed it, there's

32
00:02:18,980 --> 00:02:23,920
no sandbox to hold you back. You simply put
it up on Google's website and it is immediately

33
00:02:23,920 --> 00:02:27,680
updated and deployed for all your users. When
you're stuck in a sandbox it can really cripple

34
00:02:27,680 --> 00:02:31,680
your development and rapid innovation. And
we're super happy that Google recognizes that.

35
00:02:31,680 --> 00:02:35,680
>> How did your vision evolve as you were
working on your extension?

36
00:02:35,680 --> 00:02:39,349
>> MUCHNICK: The product evolved the entire
time we were working on the extension. We

37
00:02:39,349 --> 00:02:43,230
had to resign ourselves to the fact that certain
elements weren't necessarily complete in the

38
00:02:43,230 --> 00:02:47,569
API. But we were able to find workarounds.
>> What were some challenges you faced when

39
00:02:47,569 --> 00:02:50,360
writing your extension?
>> MUCHNICK: There were some issues that we

40
00:02:50,360 --> 00:02:54,810
had to cope with when developing our extension
and I think we came up with some innovative

41
00:02:54,810 --> 00:02:59,629
solutions. For example, trying to build out
a menu for--when someone clicks on that browser

42
00:02:59,629 --> 00:03:05,349
action icon, we had to come up with that ourselves
and actually simulate a menu pop-up. Additionally,

43
00:03:05,349 --> 00:03:11,599
we had two things; we really had to simulate
full page screen capture, so we came up with

44
00:03:11,599 --> 00:03:15,540
a way of rolling down the page and taking
snapshots as we went using JavaScript and

45
00:03:15,540 --> 00:03:20,060
then reassembling it. And lastly, we had to
do some filter clean up on some of the JPEG

46
00:03:20,060 --> 00:03:23,849
full page screen capture.
>> What do you think about Google Chrome's

47
00:03:23,849 --> 00:03:28,569
decision to use CSS, HTML, and JavaScript
as the basis of its extension framework?

48
00:03:28,569 --> 00:03:32,920
>> MUCHNICK: We love Chrome's decision to
use HTML, JavaScript, and CSS in creating

49
00:03:32,920 --> 00:03:37,159
extensions. It makes it so much simpler for
everyone on our development team to pick up

50
00:03:37,159 --> 00:03:41,489
and run with. Additionally, it seems like
this method means the browser is free to operate

51
00:03:41,489 --> 00:03:44,200
without additional bloat prior to the extension
being invoked.

52
00:03:44,200 --> 00:03:48,930
>> How many times have you updated your extension?
>> MUCHNICK: We've updated our extension twice

53
00:03:48,930 --> 00:03:53,310
so far and the experience was fantastic. Once
we figured out how to get the manifest correctly

54
00:03:53,310 --> 00:03:56,950
uploaded it was a snap and it was instantly
deployed and available for our users.

55
00:03:56,950 --> 00:04:01,810
>> How did you promote your extension?
>> MUCHNICK: To promote our extension we updated

56
00:04:01,810 --> 00:04:06,069
our user base on our own blog and newsletter
and shared it with relevant tech blogs. We

57
00:04:06,069 --> 00:04:08,940
also plan to promote it in context within
our existing product set.

58
00:04:08,940 --> 00:04:13,920
>> What advice can you give someone before
starting to work on a Google Chrome extension?

59
00:04:13,920 --> 00:04:17,329
>> MUCHNICK: If you're working on a Chrome
extension, consider the overall architecture

60
00:04:17,329 --> 00:04:21,389
of your extension before you begin. Especially
how you will divide up responsibilities and

61
00:04:21,389 --> 00:04:24,280
communicate between the background page, content
scripts, and more.

62
00:04:24,280 --> 00:04:28,069
>> Come meet the Aviary Team at the Google
IO conference.

