1
00:00:03,634 --> 00:00:05,133
Mazzoni: We're here
to talk to you today

2
00:00:05,133 --> 00:00:07,734
about how to create accessible
interactive web apps

3
00:00:07,734 --> 00:00:10,634
using HTML5.

4
00:00:10,634 --> 00:00:12,968
[female computer voice
speaking indistinctly]

5
00:00:12,968 --> 00:00:14,300
And you can hear
that this talk

6
00:00:14,300 --> 00:00:15,467
is going to be accessible.

7
00:00:15,467 --> 00:00:17,033
We've got some speech
turned on.

8
00:00:17,033 --> 00:00:19,767
If you have any feedback,
here's the link for feedback

9
00:00:19,767 --> 00:00:23,934
and for hashtags if you'd
like to blog about this.

10
00:00:23,934 --> 00:00:25,734
So to start things off,

11
00:00:25,734 --> 00:00:28,701
one way that you can
make your web app accessible

12
00:00:28,701 --> 00:00:30,234
is to keep things
really simple.

13
00:00:30,234 --> 00:00:31,634
Use basic HTML.

14
00:00:31,634 --> 00:00:34,367
Very simple,
easy-to-understand layouts.

15
00:00:34,367 --> 00:00:36,267
And every time that
the user wants to make a change,

16
00:00:36,267 --> 00:00:39,400
you can reload the page
by submitting a form.

17
00:00:39,400 --> 00:00:42,400
Shearer: But, I mean,
that sounds kinda boring.

18
00:00:42,400 --> 00:00:43,901
We want to build web apps

19
00:00:43,901 --> 00:00:45,667
that are interactive
and dynamic

20
00:00:45,667 --> 00:00:47,701
and fun for our users
to use.

21
00:00:47,701 --> 00:00:51,067
We want to build web apps
that feel just like native apps.

22
00:00:51,067 --> 00:00:52,267
And there's no reason

23
00:00:52,267 --> 00:00:54,000
why these interactive
dynamic web apps

24
00:00:54,000 --> 00:00:57,701
can't be accessible to users
with disabilities.

25
00:00:57,701 --> 00:00:59,901
So who are the users
that we're talking about

26
00:00:59,901 --> 00:01:01,434
during this talk?

27
00:01:01,434 --> 00:01:03,501
We're gonna be addressing
three broad groups of users

28
00:01:03,501 --> 00:01:04,934
during this talk.

29
00:01:04,934 --> 00:01:07,367
Blind users,
users with low vision,

30
00:01:07,367 --> 00:01:09,801
and users
who are motor-impaired

31
00:01:09,801 --> 00:01:11,501
and can't use a mouse.

32
00:01:11,501 --> 00:01:13,968
We're gonna be talking about
these three groups of users

33
00:01:13,968 --> 00:01:15,968
even though there are
lots of other users

34
00:01:15,968 --> 00:01:17,267
with different disabilities

35
00:01:17,267 --> 00:01:19,234
that also affect
how they'll use our apps

36
00:01:19,234 --> 00:01:21,234
because at least
for these three groups

37
00:01:21,234 --> 00:01:23,033
we know something
very valuable.

38
00:01:23,033 --> 00:01:26,467
And that's exactly how they're
going to access our page.

39
00:01:26,467 --> 00:01:29,701
Users who are blind would use
a screen-reading software

40
00:01:29,701 --> 00:01:31,767
that describes the page
using synthesized speech

41
00:01:31,767 --> 00:01:33,334
or Braille output.

42
00:01:33,334 --> 00:01:35,567
Users with low vision
will use large fonts

43
00:01:35,567 --> 00:01:37,100
or a screen magnifier,

44
00:01:37,100 --> 00:01:39,234
which increases the size
of the currently focused area

45
00:01:39,234 --> 00:01:40,901
of the page.

46
00:01:40,901 --> 00:01:42,167
And users
who are motor-impaired

47
00:01:42,167 --> 00:01:43,834
will generally use
a special keyboard

48
00:01:43,834 --> 00:01:47,100
or some kind of voice-control
interface.

49
00:01:47,100 --> 00:01:48,601
And these
three groups of users

50
00:01:48,601 --> 00:01:50,200
have one big thing in common,

51
00:01:50,200 --> 00:01:52,901
and that's that none of them
are gonna be using a mouse

52
00:01:52,901 --> 00:01:54,334
to access your page.

53
00:01:54,334 --> 00:01:56,534
So it's really important
when we're building our apps

54
00:01:56,534 --> 00:01:58,067
that we don't make
that assumption,

55
00:01:58,067 --> 00:02:00,434
that we don't assume that
our users are using a mouse.

56
00:02:00,434 --> 00:02:02,100
Because for these three
groups of users,

57
00:02:02,100 --> 00:02:03,667
that's just not the case.

58
00:02:03,667 --> 00:02:05,901
And for these three
groups of users

59
00:02:05,901 --> 00:02:08,367
there really are
no work-arounds.

60
00:02:08,367 --> 00:02:10,133
If our web app doesn't work

61
00:02:10,133 --> 00:02:11,767
with their
assistive technology,

62
00:02:11,767 --> 00:02:14,234
there's really not a whole lot
of recourse for them.

63
00:02:14,234 --> 00:02:16,067
So that's why it's important
for us to get this right

64
00:02:16,067 --> 00:02:17,400
the first time.

65
00:02:17,400 --> 00:02:18,901
And in this talk
we're gonna tell you

66
00:02:18,901 --> 00:02:22,000
how you can do just that.

67
00:02:22,000 --> 00:02:23,834
Mazzoni: So let me
give you an overview

68
00:02:23,834 --> 00:02:26,334
of what we're gonna be talking
about during this session.

69
00:02:26,334 --> 00:02:28,067
First we want to show you
what we think

70
00:02:28,067 --> 00:02:30,000
is a great accessible
experience.

71
00:02:30,000 --> 00:02:31,667
First of all,
how it can go wrong,

72
00:02:31,667 --> 00:02:35,334
and then how we think that
experience can be really good.

73
00:02:35,334 --> 00:02:37,534
Next we're gonna talk about
the actual code,

74
00:02:37,534 --> 00:02:40,133
how you can write your HTML
and your JavaScript

75
00:02:40,133 --> 00:02:43,000
to make things accessible
like in our example.

76
00:02:43,000 --> 00:02:44,567
And finally we're gonna be
talking about

77
00:02:44,567 --> 00:02:46,868
browser extensions
and other tools and resources

78
00:02:46,868 --> 00:02:48,767
that you as developers
can use

79
00:02:48,767 --> 00:02:51,534
to make accessible web apps.

80
00:02:51,534 --> 00:02:53,601
So let's start off
by talking about:

81
00:02:53,601 --> 00:02:56,601
What is a great
accessible experience?

82
00:02:56,601 --> 00:02:57,934
Shearer: So I'm gonna
jump in for a minute

83
00:02:57,934 --> 00:03:00,267
and talk to you exactly
how we're gonna be demoing

84
00:03:00,267 --> 00:03:02,434
our apps and our code
to you today.

85
00:03:02,434 --> 00:03:03,868
Some of you might have noticed,

86
00:03:03,868 --> 00:03:05,434
although this podium's
hiding it,

87
00:03:05,434 --> 00:03:08,801
I'm running this presentation
on a Cr-48 Chrome notebook.

88
00:03:08,801 --> 00:03:11,200
And one of the really great
things about Chrome OS

89
00:03:11,200 --> 00:03:13,234
and something that
we announced at I/O

90
00:03:13,234 --> 00:03:15,133
is that it includes
a built-in screen reader

91
00:03:15,133 --> 00:03:16,968
called ChromeVox
that was developed

92
00:03:16,968 --> 00:03:18,968
by Dominic and my team
at Google.

93
00:03:18,968 --> 00:03:21,200
ChromeVox is implemented
as a Chrome extension,

94
00:03:21,200 --> 00:03:23,267
which means that we wrote it
in just JavaScript,

95
00:03:23,267 --> 00:03:25,167
CSS, and HTML.

96
00:03:25,167 --> 00:03:27,300
And as you can imagine,
it was built for the web.

97
00:03:27,300 --> 00:03:28,601
So we're gonna be using it

98
00:03:28,601 --> 00:03:31,634
to do our demos
for you today.

99
00:03:31,634 --> 00:03:33,300
For those of you
who aren't familiar

100
00:03:33,300 --> 00:03:34,901
with how a screen reader works,

101
00:03:34,901 --> 00:03:36,868
essentially I'm gonna be using
keyboard commands

102
00:03:36,868 --> 00:03:38,701
to move focus
around the page

103
00:03:38,701 --> 00:03:41,434
and explore both static text
and interactive elements

104
00:03:41,434 --> 00:03:42,767
with ChromeVox.

105
00:03:42,767 --> 00:03:44,534
ChromeVox and other
screen readers

106
00:03:44,534 --> 00:03:46,534
work really well
with web forms,

107
00:03:46,534 --> 00:03:49,033
with static text and native
HTML elements.

108
00:03:49,033 --> 00:03:50,400
So I'm gonna
demonstrate ChromeVox

109
00:03:50,400 --> 00:03:51,934
on this embedded web form

110
00:03:51,934 --> 00:03:53,434
in this slide
for you right now.

111
00:03:53,434 --> 00:03:55,801
The first thing I'm gonna do
is unmute ChromeVox

112
00:03:55,801 --> 00:03:57,968
'cause it's been running
this entire time.

113
00:03:57,968 --> 00:04:00,667
[female computerized voice
reading screen]

114
00:04:00,667 --> 00:04:03,167
So what I'm doing
is I'm just using

115
00:04:03,167 --> 00:04:05,834
the ChromeVox modifier keys
shift and search

116
00:04:05,834 --> 00:04:08,367
and using the arrow keys
to move ChromeVox down

117
00:04:08,367 --> 00:04:09,767
through the page.

118
00:04:09,767 --> 00:04:11,400
I'm actually gonna
activate the lens

119
00:04:11,400 --> 00:04:13,100
to show you what
ChromeVox is speaking

120
00:04:13,100 --> 00:04:14,868
in case you can't hear it.

121
00:04:14,868 --> 00:04:16,634
Mazzoni: 'Cause it's very
hard to understand,

122
00:04:16,634 --> 00:04:19,167
especially over speakers here.

123
00:04:19,167 --> 00:04:20,501
female voice: Screen readers
and magnifiers

124
00:04:20,501 --> 00:04:21,934
allow the user to explore
both static--

125
00:04:21,934 --> 00:04:23,901
Here's an example
web form to demonstrate.

126
00:04:23,901 --> 00:04:25,033
Shearer: So I'm gonna
enter the form,

127
00:04:25,033 --> 00:04:26,367
and you can see
how ChromeVox interacts

128
00:04:26,367 --> 00:04:28,634
with interactive elements.

129
00:04:28,634 --> 00:04:31,634
female voice: Enter your name.
Editable text.

130
00:04:31,634 --> 00:04:34,267
Red. Choose your favorite color.
Combo box with ten.

131
00:04:34,267 --> 00:04:35,767
Shearer: So I'm gonna choose
my favorite color

132
00:04:35,767 --> 00:04:37,234
using the arrow keys.

133
00:04:37,234 --> 00:04:38,367
female voice: Orange,
two of ten.

134
00:04:38,367 --> 00:04:39,434
Yellow, three of ten.

135
00:04:39,434 --> 00:04:40,767
Green, four of ten.

136
00:04:40,767 --> 00:04:42,868
Submit button.

137
00:04:42,868 --> 00:04:46,167
Having trouble?
Click here for help, link.

138
00:04:46,167 --> 00:04:48,000
Shearer: So that was great.
ChromeVox jumped through--

139
00:04:48,000 --> 00:04:49,501
It read to me
the static text,

140
00:04:49,501 --> 00:04:51,567
and it jumped into each
of the focusable controls,

141
00:04:51,567 --> 00:04:53,133
told me what the control was,

142
00:04:53,133 --> 00:04:55,267
and told me how I could
interact with it.

143
00:04:55,267 --> 00:04:57,067
Mazzoni: I'm gonna jump in
and say one more thing here,

144
00:04:57,067 --> 00:04:59,033
which is that, for that people
who have low-vision,

145
00:04:59,033 --> 00:05:01,033
they might be using a tool
called a magnifier,

146
00:05:01,033 --> 00:05:03,067
which works in a very
similar way.

147
00:05:03,067 --> 00:05:05,300
Instead of listening
to the speech

148
00:05:05,300 --> 00:05:07,267
and the sound effects
that you heard,

149
00:05:07,267 --> 00:05:08,667
they're simply
going to be looking

150
00:05:08,667 --> 00:05:11,667
at a magnified version
of one part of the page.

151
00:05:11,667 --> 00:05:13,567
Kinda like the lens
you see at the top.

152
00:05:13,567 --> 00:05:15,400
So the experience
is very similar.

153
00:05:15,400 --> 00:05:16,434
The idea is you're focusing

154
00:05:16,434 --> 00:05:18,000
on one part of the page
at a time

155
00:05:18,000 --> 00:05:19,501
and having it
described to you

156
00:05:19,501 --> 00:05:21,767
or magnified or enhanced
in some way.

157
00:05:21,767 --> 00:05:23,267
Shearer: And the great
news here is that

158
00:05:23,267 --> 00:05:25,734
if the web app you're building
looks just like this form

159
00:05:25,734 --> 00:05:29,234
then congratulations,
your website will be accessible

160
00:05:29,234 --> 00:05:30,834
and a user can use
a screen reader

161
00:05:30,834 --> 00:05:34,300
to go through all of your
editable text and buttons.

162
00:05:34,300 --> 00:05:37,000
But if your web app is maybe
a little bit more exciting,

163
00:05:37,000 --> 00:05:38,734
if it has a little bit
more going on

164
00:05:38,734 --> 00:05:40,467
and it's a little bit
more complex,

165
00:05:40,467 --> 00:05:42,667
then we do have to do
some extra work

166
00:05:42,667 --> 00:05:44,968
in order to give our users
a good experience.

167
00:05:44,968 --> 00:05:48,601
And that's what we're gonna
talk to you about.

168
00:05:48,601 --> 00:05:51,801
Mazzoni: So let's start by
talking about a bad experience.

169
00:05:51,801 --> 00:05:53,501
So in contrast to that form,

170
00:05:53,501 --> 00:05:55,901
here's--this is certainly
not a complex app,

171
00:05:55,901 --> 00:05:57,267
but this is an app that uses

172
00:05:57,267 --> 00:05:59,467
a few more interactive
capabilities

173
00:05:59,467 --> 00:06:02,133
that you find in just about
every interactive

174
00:06:02,133 --> 00:06:04,133
Web 2.0 app today.

175
00:06:04,133 --> 00:06:06,601
So this is a little app
we built called Snack Attack,

176
00:06:06,601 --> 00:06:08,634
and the idea is simply
you're gonna scroll through

177
00:06:08,634 --> 00:06:11,267
these list of choices
and vote on the ones

178
00:06:11,267 --> 00:06:14,100
that are your favorite
for hacking all night long.

179
00:06:14,100 --> 00:06:16,033
So I'm gonna first
demonstrate this

180
00:06:16,033 --> 00:06:18,100
from the perspective that
most web developers

181
00:06:18,100 --> 00:06:19,467
would be thinking about,

182
00:06:19,467 --> 00:06:20,868
which is someone
who's using a mouse

183
00:06:20,868 --> 00:06:23,801
and who is fully-sighted,
able to see this page.

184
00:06:23,801 --> 00:06:25,734
So I'm going to look
at this page

185
00:06:25,734 --> 00:06:27,067
and look through these choices.

186
00:06:27,067 --> 00:06:28,534
And some coffee sounds
really good right now

187
00:06:28,534 --> 00:06:30,701
so I'm going to click
on coffee.

188
00:06:30,701 --> 00:06:32,734
And now a dialog box
appeared.

189
00:06:32,734 --> 00:06:34,400
Now as web developers,

190
00:06:34,400 --> 00:06:36,467
we all know this isn't
a native dialog box.

191
00:06:36,467 --> 00:06:38,400
But it feels like
a dialog box

192
00:06:38,400 --> 00:06:40,734
because it appeared
over top of the page.

193
00:06:40,734 --> 00:06:42,701
Everything else
was sort of dimmed.

194
00:06:42,701 --> 00:06:45,067
And there's some controls for
me to interact with.

195
00:06:45,067 --> 00:06:47,868
So this is good. It wants me--
I see some stars.

196
00:06:47,868 --> 00:06:49,200
And it looks like
this is an opportunity

197
00:06:49,200 --> 00:06:50,801
for me to rate this.

198
00:06:50,801 --> 00:06:52,701
I'll give this four stars.

199
00:06:52,701 --> 00:06:54,300
And there's a "vote"
and a "cancel" button.

200
00:06:54,300 --> 00:06:56,067
I click "vote."

201
00:06:56,067 --> 00:06:58,934
Now it says "saving,"
and the dialog box disappears.

202
00:06:58,934 --> 00:07:02,300
So so far this sounds like
a great experience.

203
00:07:02,300 --> 00:07:06,267
Now let's suppose that
the only limitation I have

204
00:07:06,267 --> 00:07:08,200
is that I'm unable
to use a mouse.

205
00:07:08,200 --> 00:07:11,234
Millions of people out there
do all of their computer use

206
00:07:11,234 --> 00:07:12,767
using only a keyboard.

207
00:07:12,767 --> 00:07:14,834
They might even have some type
of special assistive device

208
00:07:14,834 --> 00:07:16,868
that simulates a keyboard.

209
00:07:16,868 --> 00:07:19,200
So I'm just gonna press tab.

210
00:07:19,200 --> 00:07:21,200
And as I press tab,
you'll notice

211
00:07:21,200 --> 00:07:23,067
that various
focusable controls

212
00:07:23,067 --> 00:07:24,901
on the page
are being highlighted.

213
00:07:24,901 --> 00:07:26,968
So let's try the exact
same experience.

214
00:07:26,968 --> 00:07:29,534
I go here to coffee,
and I hit enter,

215
00:07:29,534 --> 00:07:31,200
and the dialog box
appears.

216
00:07:31,200 --> 00:07:32,400
So far, so good.

217
00:07:32,400 --> 00:07:33,868
Now let's say
I wanna actually interact

218
00:07:33,868 --> 00:07:34,868
with the dialog.

219
00:07:34,868 --> 00:07:36,100
I'm gonna press tab again.

220
00:07:36,100 --> 00:07:37,968
Hmm, nothing happened.

221
00:07:37,968 --> 00:07:40,033
I'm gonna hit it again.
Oh, this is terrible.

222
00:07:40,033 --> 00:07:42,834
The focus is behind
the dialog,

223
00:07:42,834 --> 00:07:45,601
so this is a poor experience
for me as a keyboard user.

224
00:07:45,601 --> 00:07:48,567
But maybe if I'm clever
and I keep pressing tab

225
00:07:48,567 --> 00:07:50,234
or shift-tab in this case

226
00:07:50,234 --> 00:07:52,767
I eventually find myself
inside the dialog.

227
00:07:52,767 --> 00:07:56,133
You'll notice now "vote"
is focused.

228
00:07:56,133 --> 00:07:57,634
So I'm inside the dialog,

229
00:07:57,634 --> 00:07:59,634
but it's not a great
experience for me.

230
00:07:59,634 --> 00:08:02,133
But how 'bout
the star rating gadget?

231
00:08:02,133 --> 00:08:03,534
Can I interact with that?

232
00:08:03,534 --> 00:08:05,234
Well, no, it just
skips right past it.

233
00:08:05,234 --> 00:08:07,667
So this page is basically
inaccessible to me

234
00:08:07,667 --> 00:08:09,434
as someone where
my only limitation

235
00:08:09,434 --> 00:08:11,667
is that I can't use
a mouse.

236
00:08:11,667 --> 00:08:13,934
Unfortunately it can be
even worse than that.

237
00:08:13,934 --> 00:08:16,968
So let's turn ChromeVox
back on again.

238
00:08:16,968 --> 00:08:18,968
And now I'm gonna interact
with the same page

239
00:08:18,968 --> 00:08:20,968
as a blind user.

240
00:08:20,968 --> 00:08:22,234
female voice: Sign up, link.

241
00:08:22,234 --> 00:08:23,934
About, link.

242
00:08:23,934 --> 00:08:25,200
Contact us, link.

243
00:08:25,200 --> 00:08:26,367
Mazzoni:
We can turn on the lens

244
00:08:26,367 --> 00:08:28,200
to see exactly
what it's saying.

245
00:08:28,200 --> 00:08:29,968
female voice:
Pizza delivery, link.

246
00:08:29,968 --> 00:08:31,501
Caffeinated soda, link.

247
00:08:31,501 --> 00:08:32,934
Mazzoni: So let's suppose
that I want to click

248
00:08:32,934 --> 00:08:34,234
on one of these.

249
00:08:34,234 --> 00:08:35,501
female voice:
Click.

250
00:08:35,501 --> 00:08:37,133
Mazzoni: So I just clicked
on one of those links,

251
00:08:37,133 --> 00:08:38,834
and the dialog box appeared.

252
00:08:38,834 --> 00:08:41,868
But unfortunately nothing
else was spoken,

253
00:08:41,868 --> 00:08:43,501
nothing else was said.

254
00:08:43,501 --> 00:08:45,734
So I don't have any idea,
as a blind user,

255
00:08:45,734 --> 00:08:47,400
what just happened.

256
00:08:47,400 --> 00:08:48,834
A dialog box
might have appeared.

257
00:08:48,834 --> 00:08:50,334
Something could have
happened.

258
00:08:50,334 --> 00:08:52,767
It could have done something,
but I don't know what happened.

259
00:08:52,767 --> 00:08:55,634
If I were to continue
to explore the page,

260
00:08:55,634 --> 00:08:59,167
I might discover that there's
some things on the page.

261
00:08:59,167 --> 00:09:00,534
female voice: Cancel, button.

262
00:09:00,534 --> 00:09:02,267
Mazzoni: I might discover
that this cancel button

263
00:09:02,267 --> 00:09:04,367
and this vote button
weren't there before.

264
00:09:04,367 --> 00:09:07,834
And I notice
there's something here

265
00:09:07,834 --> 00:09:09,267
that says "no rating."

266
00:09:09,267 --> 00:09:10,734
So I might be able to infer

267
00:09:10,734 --> 00:09:12,501
that there's some sort
of ratings gadget.

268
00:09:12,501 --> 00:09:14,200
But if I were to press
a bunch of keys,

269
00:09:14,200 --> 00:09:17,200
there would be no way for me
to actually interact with it,

270
00:09:17,200 --> 00:09:21,834
and I don't even know what
type of gadget that is.

271
00:09:21,834 --> 00:09:24,334
And one last thing--Oops.

272
00:09:24,334 --> 00:09:26,901
Ha ha. Hit the wrong key.
I'm sorry about that.

273
00:09:26,901 --> 00:09:29,167
[female voice
speaking rapidly]

274
00:09:29,167 --> 00:09:32,000
One last thing is if I hit
the "vote" button,

275
00:09:32,000 --> 00:09:34,634
it doesn't say that it's
been saving anything.

276
00:09:34,634 --> 00:09:37,300
So this is the last problem
with this experience.

277
00:09:37,300 --> 00:09:38,968
So as you can see we have
a lot of work to do

278
00:09:38,968 --> 00:09:42,300
in order to make this
experience accessible.

279
00:09:42,300 --> 00:09:48,133
Let's mute everything here.

280
00:09:48,133 --> 00:09:50,968
So what went wrong?

281
00:09:50,968 --> 00:09:53,000
We had poor focus management.

282
00:09:53,000 --> 00:09:56,000
We had an unusable
custom control

283
00:09:56,000 --> 00:09:57,534
that didn't have
keyboard commands

284
00:09:57,534 --> 00:09:59,100
for me to interact with.

285
00:09:59,100 --> 00:10:01,467
And there was no
explanation to the user

286
00:10:01,467 --> 00:10:03,400
when things changed
on the page,

287
00:10:03,400 --> 00:10:04,801
like a dialog box appearing

288
00:10:04,801 --> 00:10:06,367
or a saving message appearing.

289
00:10:06,367 --> 00:10:08,100
Shearer: So what should
have happened?

290
00:10:08,100 --> 00:10:09,968
First of all,
we should have been managing

291
00:10:09,968 --> 00:10:11,434
our focus better.

292
00:10:11,434 --> 00:10:13,334
We want the user to fill out
the dialog.

293
00:10:13,334 --> 00:10:15,267
So when the user
clicks the button,

294
00:10:15,267 --> 00:10:17,534
we should have thrown focus
inside of that dialog

295
00:10:17,534 --> 00:10:20,033
so that the user could then
interact with it.

296
00:10:20,033 --> 00:10:21,534
We should also have made sure

297
00:10:21,534 --> 00:10:23,501
that focus stayed
inside the dialog

298
00:10:23,501 --> 00:10:24,868
so the user
wouldn't accidentally

299
00:10:24,868 --> 00:10:27,767
fall out of the dialog
as they're exploring.

300
00:10:27,767 --> 00:10:29,434
The second thing we need to do

301
00:10:29,434 --> 00:10:31,300
is make sure that
we could use the keyboard

302
00:10:31,300 --> 00:10:33,200
to interact with
our custom controls.

303
00:10:33,200 --> 00:10:34,801
You saw that that
star rating widget

304
00:10:34,801 --> 00:10:36,868
didn't accept any keyboard
input at all.

305
00:10:36,868 --> 00:10:39,067
And so that's really bad
for these users

306
00:10:39,067 --> 00:10:40,901
that aren't using a mouse.

307
00:10:40,901 --> 00:10:42,667
They're using the keyboard.

308
00:10:42,667 --> 00:10:44,934
Controls need to be labeled
for screen readers.

309
00:10:44,934 --> 00:10:47,033
You saw that ChromeVox
didn't even recognize

310
00:10:47,033 --> 00:10:49,334
that that gadget
was interactive at all.

311
00:10:49,334 --> 00:10:51,300
So someone who's
using ChromeVox

312
00:10:51,300 --> 00:10:53,634
doesn't un--wouldn't be able
to figure out

313
00:10:53,634 --> 00:10:56,033
how to vote
for a particular snack.

314
00:10:56,033 --> 00:10:59,067
And the way that we can actually
label our custom controls

315
00:10:59,067 --> 00:11:00,834
is by using special markup,

316
00:11:00,834 --> 00:11:02,634
and we'll go more into
that later.

317
00:11:02,634 --> 00:11:04,501
And finally,
the user needs to be informed

318
00:11:04,501 --> 00:11:06,167
when things change
on the page.

319
00:11:06,167 --> 00:11:07,701
There were two instances--

320
00:11:07,701 --> 00:11:09,467
the first one,
the dialog opened,

321
00:11:09,467 --> 00:11:11,434
and the second when
the word "saving" appeared--

322
00:11:11,434 --> 00:11:13,834
that nothing was spoken
by ChromeVox at all.

323
00:11:13,834 --> 00:11:15,400
Those changes
were happening outside

324
00:11:15,400 --> 00:11:17,033
of the currently
focused area.

325
00:11:17,033 --> 00:11:18,734
And we can also add
special markup

326
00:11:18,734 --> 00:11:20,067
to let the user know

327
00:11:20,067 --> 00:11:23,400
when those kinds
of changes are happening.

328
00:11:23,400 --> 00:11:25,267
Mazzoni: So let's take
another look this time

329
00:11:25,267 --> 00:11:27,000
with all those problems fixed

330
00:11:27,000 --> 00:11:28,601
and see what
the experience can look like

331
00:11:28,601 --> 00:11:30,133
when we've made it accessible

332
00:11:30,133 --> 00:11:32,501
to users with this type
of assistive technology.

333
00:11:32,501 --> 00:11:35,701
I'm gonna skip past the case
of the keyboard-only user

334
00:11:35,701 --> 00:11:38,100
because you can
sort of imagine the experience

335
00:11:38,100 --> 00:11:40,033
once you've seen the experience
with the screen reader.

336
00:11:40,033 --> 00:11:41,434
So let's turn--

337
00:11:41,434 --> 00:11:43,567
female voice:
HTML5. Sign up, link.

338
00:11:43,567 --> 00:11:45,267
Mazzoni: So let's turn
ChromeVox back on.

339
00:11:45,267 --> 00:11:47,167
And I'm going to go through
the exact same experience

340
00:11:47,167 --> 00:11:48,467
and let's see
what happens here.

341
00:11:48,467 --> 00:11:49,601
female voice: About.
Contact us.

342
00:11:49,601 --> 00:11:51,167
Pizza--
Caffeinated soda, button.

343
00:11:51,167 --> 00:11:53,033
Mazzoni: Okay, so now
I've got something--

344
00:11:53,033 --> 00:11:55,734
I've chosen the item I want
to click on.

345
00:11:55,734 --> 00:11:57,601
Let's see what happens
when I click on this.

346
00:11:57,601 --> 00:12:00,100
Actually I'll turn on
the lens again

347
00:12:00,100 --> 00:12:06,801
so you can see it
hopefully.

348
00:12:06,801 --> 00:12:08,467
Let's just listen this time
what happens

349
00:12:08,467 --> 00:12:11,567
when I click on something
and enter dialog.

350
00:12:11,567 --> 00:12:13,367
female voice:
Please rate this snack.

351
00:12:13,367 --> 00:12:15,701
The rating from zero,
max five, slider.

352
00:12:15,701 --> 00:12:17,300
Mazzoni: So what
it said there was,

353
00:12:17,300 --> 00:12:19,367
first of all it said
"entering dialog."

354
00:12:19,367 --> 00:12:21,601
And then it told us
that we're on a slider.

355
00:12:21,601 --> 00:12:23,000
Well, this is great.

356
00:12:23,000 --> 00:12:24,367
So a slider is a control

357
00:12:24,367 --> 00:12:26,567
that I'm already familiar with
working with.

358
00:12:26,567 --> 00:12:29,868
And so if I were on
any slider normally,

359
00:12:29,868 --> 00:12:31,734
I might use the arrow keys
to interact with it.

360
00:12:31,734 --> 00:12:33,467
And in fact
this is gonna work great.

361
00:12:33,467 --> 00:12:35,200
female voice: One star,
eww gross.

362
00:12:35,200 --> 00:12:36,367
Two stars--

363
00:12:36,367 --> 00:12:38,200
Mazzoni: So just by
pressing the arrows,

364
00:12:38,200 --> 00:12:40,701
it's changing
the value of the slider

365
00:12:40,701 --> 00:12:42,634
and reading
the new value to me,

366
00:12:42,634 --> 00:12:44,334
and in addition
to the value

367
00:12:44,334 --> 00:12:46,400
also some sort of
description for it.

368
00:12:46,400 --> 00:12:47,601
So this is great.

369
00:12:47,601 --> 00:12:49,100
Now let's hit
the vote button

370
00:12:49,100 --> 00:12:50,667
and see what happens here.

371
00:12:50,667 --> 00:12:53,100
female voice: Click.
Saving.

372
00:12:53,100 --> 00:12:55,000
Mazzoni: So notice that
it said "saving,"

373
00:12:55,000 --> 00:12:56,334
which is great.

374
00:12:56,334 --> 00:12:58,734
So basically everything
that happened on this page

375
00:12:58,734 --> 00:13:00,834
was--also had a great
accessible experience

376
00:13:00,834 --> 00:13:02,501
to go along with it.

377
00:13:02,501 --> 00:13:05,734
And again this is nothing
super fancy or complicated.

378
00:13:05,734 --> 00:13:07,300
We want to show
that this is something

379
00:13:07,300 --> 00:13:09,067
that's not very mysterious

380
00:13:09,067 --> 00:13:10,934
and it's not that hard
to imagine.

381
00:13:10,934 --> 00:13:13,000
With some simple changes,
you can make sure

382
00:13:13,000 --> 00:13:14,968
that all users can get
the same great

383
00:13:14,968 --> 00:13:17,100
interactive experience
with your site.

384
00:13:17,100 --> 00:13:20,634
female voice:
[indistinct] HTML5.

385
00:13:20,634 --> 00:13:23,133
Mazzoni: So let's go on
to the second part here,

386
00:13:23,133 --> 00:13:28,601
which is how to code
accessible HTML5.

387
00:13:28,601 --> 00:13:30,601
So as an overview,

388
00:13:30,601 --> 00:13:32,467
there are four basic areas
we wanna talk about

389
00:13:32,467 --> 00:13:34,567
in order to create
accessible HTML5.

390
00:13:34,567 --> 00:13:36,300
First of all,
we just want you to use

391
00:13:36,300 --> 00:13:38,467
clean HTML and standard tags
whenever possible.

392
00:13:38,467 --> 00:13:41,367
This is just a good, solid
foundation to build on.

393
00:13:41,367 --> 00:13:44,133
Then the next step
is to manage focus.

394
00:13:44,133 --> 00:13:45,634
And then add keyboard handlers

395
00:13:45,634 --> 00:13:47,434
for custom controls
that need it.

396
00:13:47,434 --> 00:13:50,133
And then finally once you have
that experience as a baseline,

397
00:13:50,133 --> 00:13:51,567
you can add ARIA,

398
00:13:51,567 --> 00:13:55,901
which is a new HTML5
markup for screen readers.

399
00:13:55,901 --> 00:13:58,968
We've found it works really
well if you do it in that order.

400
00:13:58,968 --> 00:14:00,634
Shearer: So the first step
that you wanna think about

401
00:14:00,634 --> 00:14:02,033
when you're developing an app

402
00:14:02,033 --> 00:14:04,667
is clean HTML
and standard tags.

403
00:14:04,667 --> 00:14:06,734
And this might seem
like really basic advice,

404
00:14:06,734 --> 00:14:08,901
but it's really important
for these users

405
00:14:08,901 --> 00:14:10,534
who are basically
navigating the page

406
00:14:10,534 --> 00:14:12,400
by moving focus around.

407
00:14:12,400 --> 00:14:13,968
Using CSS for layout,

408
00:14:13,968 --> 00:14:16,567
making sure that your content
and layout are separated,

409
00:14:16,567 --> 00:14:18,834
and making sure
that your DOM order is logical

410
00:14:18,834 --> 00:14:20,801
means that you're writing
cleaner HTML.

411
00:14:20,801 --> 00:14:24,133
And cleaner HTML is actually
more accessible HTML.

412
00:14:24,133 --> 00:14:26,200
And so that's something that's
important to remember.

413
00:14:26,200 --> 00:14:28,267
The second thing that
we wanna think about

414
00:14:28,267 --> 00:14:30,534
is don't reinvent the wheel.

415
00:14:30,534 --> 00:14:32,667
Don't use a generic
div or span tag

416
00:14:32,667 --> 00:14:34,734
when there's
a native HTML tag

417
00:14:34,734 --> 00:14:36,767
that's more appropriate.

418
00:14:36,767 --> 00:14:39,834
There's a lot of benefits
to using native HTML tags

419
00:14:39,834 --> 00:14:42,400
that you don't get with
generic divs or spans.

420
00:14:42,400 --> 00:14:43,834
Mazzoni: And I think a lot
of web developers

421
00:14:43,834 --> 00:14:45,534
were in a habit--
a few years ago,

422
00:14:45,534 --> 00:14:47,200
there were a lot of tags
that weren't possible

423
00:14:47,200 --> 00:14:48,868
to style fully with CSS.

424
00:14:48,868 --> 00:14:51,267
But today you can style
everything with CSS,

425
00:14:51,267 --> 00:14:54,300
so there's no reason not to use
the appropriate semantic tag.

426
00:14:54,300 --> 00:14:56,267
Shearer: And native HTML tags
have focus

427
00:14:56,267 --> 00:14:58,067
and keyboard handling
built in,

428
00:14:58,067 --> 00:14:59,334
so it means that
you don't have to go back

429
00:14:59,334 --> 00:15:00,734
and add those later.

430
00:15:00,734 --> 00:15:02,567
And screen readers are really
good at identifying

431
00:15:02,567 --> 00:15:04,234
native tags to users.

432
00:15:04,234 --> 00:15:06,701
And users are very good
at interacting with those tags.

433
00:15:06,701 --> 00:15:09,801
So instead of doing extra work
on a generic div or span,

434
00:15:09,801 --> 00:15:11,300
using a native tag
at the beginning

435
00:15:11,300 --> 00:15:13,434
will save you
down the road.

436
00:15:13,434 --> 00:15:15,033
And the final thing
you wanna think about

437
00:15:15,033 --> 00:15:17,534
is labeling your images
and form controls.

438
00:15:17,534 --> 00:15:19,734
For an image, this means
using an alt tag

439
00:15:19,734 --> 00:15:21,767
with a text description
of the image.

440
00:15:21,767 --> 00:15:24,634
And for a form control,
using the label tag.

441
00:15:24,634 --> 00:15:27,067
This is really basic advice,
as I said before.

442
00:15:27,067 --> 00:15:29,601
But at the beginning of
your app development process

443
00:15:29,601 --> 00:15:30,868
is the time to do this.

444
00:15:30,868 --> 00:15:33,133
Going back later after you
have a fully mature app

445
00:15:33,133 --> 00:15:34,868
is really a huge pain.

446
00:15:34,868 --> 00:15:38,033
So it's better to do this
as step one.

447
00:15:38,033 --> 00:15:40,100
Once you've got
your clean HTML,

448
00:15:40,100 --> 00:15:41,968
you want to start thinking
about focus.

449
00:15:41,968 --> 00:15:44,834
Focus management is really
important for these users.

450
00:15:44,834 --> 00:15:47,000
And as I said before,

451
00:15:47,000 --> 00:15:48,868
it's better to use
a native HTML tag,

452
00:15:48,868 --> 00:15:51,033
but often we do want to do
more complex things

453
00:15:51,033 --> 00:15:53,567
that you can get with
a bunch of divs and spans

454
00:15:53,567 --> 00:15:55,667
and onclick handlers,
and that's fine.

455
00:15:55,667 --> 00:15:57,267
But we really
need to make sure

456
00:15:57,267 --> 00:15:59,701
that those custom interactive
controls that we're creating

457
00:15:59,701 --> 00:16:01,267
are focusable.

458
00:16:01,267 --> 00:16:04,501
Only link tags
and native HTML tags

459
00:16:04,501 --> 00:16:06,200
receive focus by default.

460
00:16:06,200 --> 00:16:08,033
So any time we're
creating a control

461
00:16:08,033 --> 00:16:09,734
with a pile
of divs and spans,

462
00:16:09,734 --> 00:16:11,901
we need to make sure
that we're making it focusable.

463
00:16:11,901 --> 00:16:14,767
And the way that we do that
is with tabindex.

464
00:16:14,767 --> 00:16:17,434
I'm sure many of you already
know how tabindex works.

465
00:16:17,434 --> 00:16:19,968
We have a refresher for you
up on the slide.

466
00:16:19,968 --> 00:16:21,667
But the really important
thing to remember

467
00:16:21,667 --> 00:16:23,801
is just, if you're
using a custom control,

468
00:16:23,801 --> 00:16:25,567
make sure it's focusable.

469
00:16:25,567 --> 00:16:27,334
Once you've done that,
you want to start thinking

470
00:16:27,334 --> 00:16:29,067
about how you can
manage your focus.

471
00:16:29,067 --> 00:16:30,367
And the way
that you do that

472
00:16:30,367 --> 00:16:32,300
is with the JavaScript
focus method.

473
00:16:32,300 --> 00:16:34,167
And you can also
listen for focus events

474
00:16:34,167 --> 00:16:36,334
to make sure that you're
managing focus

475
00:16:36,334 --> 00:16:39,100
after the user has started
moving focus around the page.

476
00:16:39,100 --> 00:16:41,267
We did that in the demo
by placing focus

477
00:16:41,267 --> 00:16:43,367
inside the dialog
after it opened

478
00:16:43,367 --> 00:16:45,400
and trapping focus
inside the dialog

479
00:16:45,400 --> 00:16:48,901
after the user
was interacting with it.

480
00:16:48,901 --> 00:16:50,734
Mazzoni: So once
a control has focus,

481
00:16:50,734 --> 00:16:52,567
you want to make sure
that someone can interact

482
00:16:52,567 --> 00:16:54,334
with that control
using the keyboard

483
00:16:54,334 --> 00:16:56,334
just as easily as someone
can interact with it

484
00:16:56,334 --> 00:16:58,300
using the mouse.

485
00:16:58,300 --> 00:17:00,400
If you're not sure
what keys to use,

486
00:17:00,400 --> 00:17:02,100
sometimes the easiest
thing to do

487
00:17:02,100 --> 00:17:05,100
is just to try out
the native control

488
00:17:05,100 --> 00:17:06,534
that's most similar
to the control

489
00:17:06,534 --> 00:17:07,934
that you're simulating

490
00:17:07,934 --> 00:17:09,501
and try a bunch of keys
on your keyboard--

491
00:17:09,501 --> 00:17:11,534
the arrow keys,
page up, page down,

492
00:17:11,534 --> 00:17:14,033
escape, enter, space--
and see what they do.

493
00:17:14,033 --> 00:17:15,400
But there's plenty
of resources online

494
00:17:15,400 --> 00:17:16,634
on how to do this.

495
00:17:16,634 --> 00:17:17,701
The important thing is that,

496
00:17:17,701 --> 00:17:19,200
when you're testing out
your app,

497
00:17:19,200 --> 00:17:20,667
you should try
unplugging your mouse

498
00:17:20,667 --> 00:17:22,467
and see what happens
as you interact with things

499
00:17:22,467 --> 00:17:24,367
and make sure that
a keyboard user

500
00:17:24,367 --> 00:17:25,767
has the same experience.

501
00:17:25,767 --> 00:17:27,234
And luckily this is
very easy to do.

502
00:17:27,234 --> 00:17:28,501
We've given an example here

503
00:17:28,501 --> 00:17:29,834
where something
that's clickable

504
00:17:29,834 --> 00:17:31,701
can also be activated
using the space bar

505
00:17:31,701 --> 00:17:33,934
or the enter key.

506
00:17:33,934 --> 00:17:35,534
Shearer: The important thing
to remember there

507
00:17:35,534 --> 00:17:37,334
is that, if you're listening
for a click event,

508
00:17:37,334 --> 00:17:39,067
it's a good idea
to try and think about

509
00:17:39,067 --> 00:17:42,200
listening for an enter event
or a space event also.

510
00:17:42,200 --> 00:17:43,868
Once you've gotten
your clean HTML,

511
00:17:43,868 --> 00:17:45,601
your focus,
and your keyboard handling,

512
00:17:45,601 --> 00:17:47,634
it's time to start thinking
about ARIA.

513
00:17:47,634 --> 00:17:50,234
And ARIA is markup
that you add to your page

514
00:17:50,234 --> 00:17:53,100
to identify those fancy
custom controls you created

515
00:17:53,100 --> 00:17:55,634
with divs and spans
to a screen reader.

516
00:17:55,634 --> 00:17:56,934
As I said before,

517
00:17:56,934 --> 00:17:59,100
screen readers are really
great with native tags,

518
00:17:59,100 --> 00:18:00,300
like button,

519
00:18:00,300 --> 00:18:02,367
but when you have a bunch
of generic tags,

520
00:18:02,367 --> 00:18:04,167
it's impossible
for a screen reader

521
00:18:04,167 --> 00:18:07,901
to figure out what you mean
by that pile of divs.

522
00:18:07,901 --> 00:18:10,100
You could be trying
to build a button,

523
00:18:10,100 --> 00:18:11,634
or you could be trying
to build something

524
00:18:11,634 --> 00:18:14,467
as complicated as
a full menu interface.

525
00:18:14,467 --> 00:18:18,567
So ARIA markup is the tags
that you add to your HTML

526
00:18:18,567 --> 00:18:20,334
in order to indicate
to the screen reader

527
00:18:20,334 --> 00:18:24,033
how they should identify
that control to the user.

528
00:18:24,033 --> 00:18:26,000
And there's two types
of ARIA tags.

529
00:18:26,000 --> 00:18:28,601
The first one is called
the ARIA role attribute,

530
00:18:28,601 --> 00:18:30,200
and you put that
in your HTML

531
00:18:30,200 --> 00:18:33,033
to indicate what the
generic tag that you're using

532
00:18:33,033 --> 00:18:34,334
is trying to be.

533
00:18:34,334 --> 00:18:36,033
So in this example,
we've got a div

534
00:18:36,033 --> 00:18:37,367
that's acting as a button.

535
00:18:37,367 --> 00:18:39,567
So we have the ARIA
role equals button.

536
00:18:39,567 --> 00:18:41,200
When a screen reader
gets to that div,

537
00:18:41,200 --> 00:18:43,601
it will say that this
is a send button.

538
00:18:43,601 --> 00:18:46,067
Roles are static, and you'd
set these in your HTML

539
00:18:46,067 --> 00:18:47,834
like you see here.

540
00:18:47,834 --> 00:18:49,567
The other kind of
ARIA property

541
00:18:49,567 --> 00:18:52,501
is called an ARIA state
or property.

542
00:18:52,501 --> 00:18:55,501
ARIA states and properties
add dynamic information

543
00:18:55,501 --> 00:18:57,334
about the current state
of an element.

544
00:18:57,334 --> 00:18:59,200
So you see in this example
we have a div

545
00:18:59,200 --> 00:19:01,767
that we're using
as a check box.

546
00:19:01,767 --> 00:19:04,601
So we have the ARIA role equals
check box on that div,

547
00:19:04,601 --> 00:19:06,267
but we also have
an ARIA state

548
00:19:06,267 --> 00:19:07,767
called "aria-checked."

549
00:19:07,767 --> 00:19:09,334
And this tells
the screen reader

550
00:19:09,334 --> 00:19:11,834
that not only is this div
acting as a check box,

551
00:19:11,834 --> 00:19:13,734
but this div
is currently checked.

552
00:19:13,734 --> 00:19:15,234
And so when
the screen reader gets there,

553
00:19:15,234 --> 00:19:17,467
it will say that this
is a checked check box.

554
00:19:17,467 --> 00:19:20,334
As you can imagine, ARIA states
and properties are dynamic,

555
00:19:20,334 --> 00:19:22,467
and so you'd want to update
these in your JavaScript

556
00:19:22,467 --> 00:19:26,934
as the control
is being updated.

557
00:19:26,934 --> 00:19:28,701
In this slide,
I want to talk about

558
00:19:28,701 --> 00:19:30,367
a more specific
kind of ARIA tag,

559
00:19:30,367 --> 00:19:32,801
and that's
the ARIA Live Region tag.

560
00:19:32,801 --> 00:19:34,667
We mentioned earlier
that it's important

561
00:19:34,667 --> 00:19:36,567
to identify to users

562
00:19:36,567 --> 00:19:38,434
when things are changing
on the page

563
00:19:38,434 --> 00:19:40,934
maybe outside of
the currently focused area.

564
00:19:40,934 --> 00:19:42,601
When you have changes
on a page

565
00:19:42,601 --> 00:19:44,467
that are happening
without a page refresh,

566
00:19:44,467 --> 00:19:46,234
you can identify them
to a screen reader

567
00:19:46,234 --> 00:19:48,133
using Live Regions.

568
00:19:48,133 --> 00:19:49,968
In this example you see
that we have a span.

569
00:19:49,968 --> 00:19:51,434
And this is actually
taken from the example

570
00:19:51,434 --> 00:19:52,767
that Dominic showed you

571
00:19:52,767 --> 00:19:54,300
where you clicked
the "vote" button

572
00:19:54,300 --> 00:19:56,334
and it wrote the text
"saving."

573
00:19:56,334 --> 00:19:59,133
And we have an aria-live tag
on this span.

574
00:19:59,133 --> 00:20:01,200
And that tells
the screen reader that,

575
00:20:01,200 --> 00:20:02,501
when the screen reader
gets to the span,

576
00:20:02,501 --> 00:20:05,100
"Hey, this span is gonna
receive updates.

577
00:20:05,100 --> 00:20:06,834
"So you should keep an eye
on this span

578
00:20:06,834 --> 00:20:08,934
and speak any updates
that happen to it."

579
00:20:08,934 --> 00:20:10,434
And you saw
that ChromeVox did that.

580
00:20:10,434 --> 00:20:11,634
When he clicked "vote,"

581
00:20:11,634 --> 00:20:13,367
ChromeVox actually said,
"saving."

582
00:20:13,367 --> 00:20:15,467
And so that tells the user
extra information

583
00:20:15,467 --> 00:20:16,734
that they wouldn't have known

584
00:20:16,734 --> 00:20:19,834
if the ARIA Live tag
wasn't there.

585
00:20:19,834 --> 00:20:21,667
The value of
the ARIA Live tag

586
00:20:21,667 --> 00:20:24,033
is any number of
different politeness levels.

587
00:20:24,033 --> 00:20:25,834
And I'm not gonna go into
too much detail

588
00:20:25,834 --> 00:20:27,234
on politeness levels,

589
00:20:27,234 --> 00:20:28,601
but the important thing
to remember

590
00:20:28,601 --> 00:20:30,934
is it actually is a way
of controlling

591
00:20:30,934 --> 00:20:33,400
how quickly the screen reader
interrupts someone.

592
00:20:33,400 --> 00:20:35,167
So we've set it here
to be polite,

593
00:20:35,167 --> 00:20:37,234
which means that ChromeVox
is gonna wait

594
00:20:37,234 --> 00:20:39,734
until it's finished speaking
what it's currently speaking

595
00:20:39,734 --> 00:20:42,701
before it interrupts the user
and says "saving."

596
00:20:42,701 --> 00:20:44,501
There are also
certain ARIA roles

597
00:20:44,501 --> 00:20:46,133
that are considered live
by default.

598
00:20:46,133 --> 00:20:49,367
Like in this example
the ARIA role equals alert.

599
00:20:49,367 --> 00:20:51,400
So it's just really important
to kind of manage

600
00:20:51,400 --> 00:20:53,000
the different regions
on your page

601
00:20:53,000 --> 00:20:54,834
that are changing
without a page refresh,

602
00:20:54,834 --> 00:20:58,667
and ARIA Live
will help you do that.

603
00:20:58,667 --> 00:21:02,133
Mazzoni: Okay, so we've
given you a lot of ideas

604
00:21:02,133 --> 00:21:04,901
and talked about a lot
of technical details,

605
00:21:04,901 --> 00:21:07,601
but there's nothing better
than an actual example

606
00:21:07,601 --> 00:21:09,367
to see how this works

607
00:21:09,367 --> 00:21:11,033
and how--in many cases,
how easy it is

608
00:21:11,033 --> 00:21:13,300
to make things
fully accessible.

609
00:21:13,300 --> 00:21:15,267
So we've got a few examples
we've prepared here,

610
00:21:15,267 --> 00:21:17,133
and we're gonna start with
a really simple one here.

611
00:21:17,133 --> 00:21:18,634
We've got a custom button.

612
00:21:18,634 --> 00:21:20,234
There are a lot of reasons
why you might have

613
00:21:20,234 --> 00:21:22,634
something on the page that
doesn't look like a button

614
00:21:22,634 --> 00:21:25,501
but it essentially
acts like a button.

615
00:21:25,501 --> 00:21:27,133
And just as
a quick reminder,

616
00:21:27,133 --> 00:21:28,501
what's going to happen

617
00:21:28,501 --> 00:21:30,901
when we haven't had
any accessible markup here,

618
00:21:30,901 --> 00:21:34,501
I'm gonna turn
ChromeVox back on here.

619
00:21:34,501 --> 00:21:35,734
female voice: Send refresh.

620
00:21:35,734 --> 00:21:37,534
Example one.
Click on this button.

621
00:21:37,534 --> 00:21:38,801
Send.

622
00:21:38,801 --> 00:21:40,434
Mazzoni: So you notice when
I got to the send button

623
00:21:40,434 --> 00:21:42,100
with ChromeVox
it just said "send."

624
00:21:42,100 --> 00:21:43,667
It didn't say it was
a button.

625
00:21:43,667 --> 00:21:45,133
And in fact if I tried
to click on it,

626
00:21:45,133 --> 00:21:47,834
nothing would happen
because it doesn't appear

627
00:21:47,834 --> 00:21:49,567
to be any type
of focusable control.

628
00:21:49,567 --> 00:21:51,567
So let's make
some changes here.

629
00:21:51,567 --> 00:21:53,033
The first change
we wanna make

630
00:21:53,033 --> 00:21:58,033
is we want to add
tabindex equals zero.

631
00:21:58,033 --> 00:21:59,601
And just by making
that change,

632
00:21:59,601 --> 00:22:02,567
when I hit tab, now I can
reach the send button.

633
00:22:02,567 --> 00:22:04,400
Now you notice
that screen readers

634
00:22:04,400 --> 00:22:06,767
will be able to reach things
even if they aren't focusable.

635
00:22:06,767 --> 00:22:08,634
They just won't be able
to interact with them.

636
00:22:08,634 --> 00:22:11,534
Now someone can reach
and interact with it.

637
00:22:11,534 --> 00:22:13,067
But we're not quite
done here,

638
00:22:13,067 --> 00:22:14,934
because we haven't
described this as a button.

639
00:22:14,934 --> 00:22:16,734
So I'm gonna add
the ARIA tag

640
00:22:16,734 --> 00:22:19,968
role equals button.

641
00:22:19,968 --> 00:22:22,334
Now let's turn
ChromeVox back on.

642
00:22:22,334 --> 00:22:23,634
female voice: Send, button.

643
00:22:23,634 --> 00:22:25,534
Mazzoni: So now it describes
it as a send button.

644
00:22:25,534 --> 00:22:29,334
And in fact it's something
that I can click on

645
00:22:29,334 --> 00:22:32,300
and interact with
using ChromeVox keys.

646
00:22:32,300 --> 00:22:33,868
So really simple example.

647
00:22:33,868 --> 00:22:35,868
What I haven't done here
is a keyboard handler.

648
00:22:35,868 --> 00:22:38,868
So that would be
the last step you'd need to do,

649
00:22:38,868 --> 00:22:40,467
is to handle
the keyboard handler

650
00:22:40,467 --> 00:22:42,367
for someone who's not
using a screen reader

651
00:22:42,367 --> 00:22:45,300
but can't use a mouse.

652
00:22:45,300 --> 00:22:47,067
Shearer: So I'm gonna take
the second example.

653
00:22:47,067 --> 00:22:48,567
This is another button.

654
00:22:48,567 --> 00:22:50,133
It's similar to the one
Dominic just showed you.

655
00:22:50,133 --> 00:22:52,934
We've made it using a div
and some CSS styling.

656
00:22:52,934 --> 00:22:56,601
And probably the first thing
that we're gonna want to do

657
00:22:56,601 --> 00:22:59,234
is also add tabindex
and the ARIA role.

658
00:22:59,234 --> 00:23:02,033
So I'm gonna do that now.

659
00:23:02,033 --> 00:23:05,033
Tabindex is, as I said before,
really important.

660
00:23:05,033 --> 00:23:06,934
Anytime you're using a div
or a span

661
00:23:06,934 --> 00:23:08,367
to make a custom control,

662
00:23:08,367 --> 00:23:10,701
you want to make sure
you're setting tabindex.

663
00:23:10,701 --> 00:23:12,667
And now I'm adding
role equals button.

664
00:23:12,667 --> 00:23:14,400
And let's see
what ChromeVox does.

665
00:23:14,400 --> 00:23:16,000
This button is a little bit
more complicated,

666
00:23:16,000 --> 00:23:19,467
so I'm gonna have to do
some extra work here.

667
00:23:19,467 --> 00:23:21,067
female voice: Example two,
toggle button.

668
00:23:21,067 --> 00:23:22,467
Toggle, button.

669
00:23:22,467 --> 00:23:23,968
Shearer: So that's great.
It said "toggle, button."

670
00:23:23,968 --> 00:23:25,300
I'm gonna click on it.

671
00:23:25,300 --> 00:23:26,300
female voice: Clicked.

672
00:23:26,300 --> 00:23:27,300
Shearer: So it said "clicked."

673
00:23:27,300 --> 00:23:28,434
That's awesome.

674
00:23:28,434 --> 00:23:29,901
But you'll notice
that the button

675
00:23:29,901 --> 00:23:31,200
actually turned
a different color,

676
00:23:31,200 --> 00:23:32,767
and that's because,
as you might have guessed,

677
00:23:32,767 --> 00:23:34,400
this slide is called
"Toggle button"

678
00:23:34,400 --> 00:23:36,000
and this is
a toggle button.

679
00:23:36,000 --> 00:23:37,501
So when I move away from it,

680
00:23:37,501 --> 00:23:40,400
it's gonna stay on.

681
00:23:40,400 --> 00:23:42,100
female voice: Toggle, button.

682
00:23:42,100 --> 00:23:43,767
Shearer: And when I moved
ChromeVox back to it,

683
00:23:43,767 --> 00:23:45,801
you'll notice that it just said
"toggle, button."

684
00:23:45,801 --> 00:23:47,367
There was no indication to me

685
00:23:47,367 --> 00:23:49,234
that this button
is currently pressed

686
00:23:49,234 --> 00:23:51,334
and that it's
gonna stay pressed.

687
00:23:51,334 --> 00:23:53,934
So this is an example
of a place

688
00:23:53,934 --> 00:23:55,501
where you'd want to add
an ARIA state,

689
00:23:55,501 --> 00:23:57,167
a dynamic property
that changes

690
00:23:57,167 --> 00:23:59,300
based on whether the button
is on or off.

691
00:23:59,300 --> 00:24:00,968
And when I add that,

692
00:24:00,968 --> 00:24:02,667
hopefully ChromeVox
will start telling me

693
00:24:02,667 --> 00:24:05,400
whether or not this button
is on or off.

694
00:24:05,400 --> 00:24:06,868
And so,
as I said before,

695
00:24:06,868 --> 00:24:08,267
we're gonna want
to set these states

696
00:24:08,267 --> 00:24:09,968
inside our JavaScript.

697
00:24:09,968 --> 00:24:12,334
I have this function here
called toggle,

698
00:24:12,334 --> 00:24:15,234
and inside this first half
of the if statement

699
00:24:15,234 --> 00:24:19,000
I'm gonna set the attribute
aria-pressed,

700
00:24:19,000 --> 00:24:21,033
and I'm gonna
set it to false

701
00:24:21,033 --> 00:24:22,968
in this half.

702
00:24:22,968 --> 00:24:25,501
And in the other half,
I'm gonna set the attribute

703
00:24:25,501 --> 00:24:28,934
to be true.

704
00:24:28,934 --> 00:24:30,868
True.

705
00:24:30,868 --> 00:24:34,200
And I'm also gonna
initialize it inside the HTML

706
00:24:34,200 --> 00:24:36,667
so that we can say that
the default state of this button

707
00:24:36,667 --> 00:24:41,267
is off.

708
00:24:41,267 --> 00:24:43,067
False.

709
00:24:43,067 --> 00:24:44,367
Okay, so let's try it out.

710
00:24:44,367 --> 00:24:47,634
Hopefully things have
improved a little bit.

711
00:24:47,634 --> 00:24:48,868
Turning ChromeVox on.

712
00:24:48,868 --> 00:24:50,400
Oops.

713
00:24:50,400 --> 00:24:52,934
That is the next example.

714
00:24:52,934 --> 00:24:54,801
Spoiler alert, okay.

715
00:24:54,801 --> 00:24:56,534
female voice: Example two,
toggle button.

716
00:24:56,534 --> 00:24:58,234
Toggle.
Button not pressed.

717
00:24:58,234 --> 00:24:59,701
Shearer: Okay, so you heard
that ChromeVox

718
00:24:59,701 --> 00:25:01,133
actually gave me a little bit
more information.

719
00:25:01,133 --> 00:25:02,901
It said, "button not pressed."

720
00:25:02,901 --> 00:25:04,834
So when I click the button,
let's see what happens.

721
00:25:04,834 --> 00:25:06,167
female voice: Pressed.

722
00:25:06,167 --> 00:25:07,467
Shearer: So it says--
Instead of "clicked,"

723
00:25:07,467 --> 00:25:08,667
it says "pressed."

724
00:25:08,667 --> 00:25:10,000
So I'm pressing the button.

725
00:25:10,000 --> 00:25:12,200
I'm gonna move away from it
to the next link.

726
00:25:12,200 --> 00:25:13,467
female voice: Refresh button.

727
00:25:13,467 --> 00:25:14,601
Shearer: And now
I'm gonna move back,

728
00:25:14,601 --> 00:25:15,734
and let's see
what happens.

729
00:25:15,734 --> 00:25:17,000
female voice: Toggle,
button pressed.

730
00:25:17,000 --> 00:25:18,267
Shearer: So that's great.

731
00:25:18,267 --> 00:25:19,968
It told me that the button
was actually pressed.

732
00:25:19,968 --> 00:25:21,601
So this means that
now we have a button

733
00:25:21,601 --> 00:25:24,300
that has a state that
the screen reader will tell me

734
00:25:24,300 --> 00:25:26,067
what the current state
of this button is.

735
00:25:26,067 --> 00:25:27,734
So it's building on
a little bit

736
00:25:27,734 --> 00:25:29,367
Dominic's first example.

737
00:25:29,367 --> 00:25:32,067
Mazzoni: Let's do
a couple more examples here.

738
00:25:32,067 --> 00:25:33,400
Actually,
the next one's yours.

739
00:25:33,400 --> 00:25:35,033
Shearer: Oh, right.
Oops.

740
00:25:35,033 --> 00:25:37,334
This next example
is also mine.

741
00:25:37,334 --> 00:25:38,901
This is another button,

742
00:25:38,901 --> 00:25:41,434
but you'll notice
that we've used

743
00:25:41,434 --> 00:25:43,100
a native button tag,

744
00:25:43,100 --> 00:25:44,868
so I don't have to go through
and add tabindex

745
00:25:44,868 --> 00:25:47,767
and role again
for the third time.

746
00:25:47,767 --> 00:25:49,567
That would be
a little bit overkill.

747
00:25:49,567 --> 00:25:50,901
So we have this button.

748
00:25:50,901 --> 00:25:52,434
And let's just see what happens

749
00:25:52,434 --> 00:25:53,767
when I run ChromeVox on it.

750
00:25:53,767 --> 00:25:56,868
female voice: Example three,
status indicator.

751
00:25:56,868 --> 00:25:58,634
Click to begin
calculation.

752
00:25:58,634 --> 00:26:00,100
Calculate, button.

753
00:26:00,100 --> 00:26:01,601
Shearer: All right,
I'm gonna press the button.

754
00:26:01,601 --> 00:26:03,400
female voice: Clicked.

755
00:26:03,400 --> 00:26:05,868
Shearer: So--and silence
from ChromeVox.

756
00:26:05,868 --> 00:26:07,667
So clearly this button
is setting off

757
00:26:07,667 --> 00:26:09,501
some kind of complicated
calculation.

758
00:26:09,501 --> 00:26:12,567
The text box below the button
says that it's calculating,

759
00:26:12,567 --> 00:26:14,868
and then about a second later
it says that it's finished.

760
00:26:14,868 --> 00:26:17,634
But ChromeVox was totally
silent that entire time.

761
00:26:17,634 --> 00:26:19,300
So I as a user
have no idea

762
00:26:19,300 --> 00:26:21,133
that anything
happened at all.

763
00:26:21,133 --> 00:26:22,868
And some of you
might be guessing

764
00:26:22,868 --> 00:26:25,868
that the way to fix this
is by using ARIA Live Regions,

765
00:26:25,868 --> 00:26:28,801
because this div with with
the ID of status down there

766
00:26:28,801 --> 00:26:30,934
is what's receiving
these text updates.

767
00:26:30,934 --> 00:26:34,400
So I'm gonna add
the aria-live attribute.

768
00:26:34,400 --> 00:26:35,801
I'm gonna set it
to be polite,

769
00:26:35,801 --> 00:26:37,434
because we don't want
to be rude.

770
00:26:37,434 --> 00:26:40,400
And let's see
how ChromeVox does.

771
00:26:40,400 --> 00:26:41,501
female voice:
Click to begin--

772
00:26:41,501 --> 00:26:42,601
Calculate, button.

773
00:26:42,601 --> 00:26:43,868
Shearer: Okay,
I'll click "calculate."

774
00:26:43,868 --> 00:26:46,300
female voice: Clicked.
Calculating.

775
00:26:46,300 --> 00:26:47,534
Finished.

776
00:26:47,534 --> 00:26:48,767
Shearer: Great,
so this is awesome.

777
00:26:48,767 --> 00:26:49,968
ChromeVox said that
it was calculating,

778
00:26:49,968 --> 00:26:51,467
and then it said
it was finished.

779
00:26:51,467 --> 00:26:53,334
So I as the user
now have a better idea

780
00:26:53,334 --> 00:26:55,734
of what's actually going on
on this page.

781
00:26:55,734 --> 00:26:58,534
Mazzoni: So you can see that
with just a few simple changes

782
00:26:58,534 --> 00:27:00,534
based on HTML standards

783
00:27:00,534 --> 00:27:03,634
you can make some big changes
to the user experience

784
00:27:03,634 --> 00:27:06,701
that people get when they're
using assistive technology.

785
00:27:06,701 --> 00:27:08,601
Let's take a couple
of other examples.

786
00:27:08,601 --> 00:27:10,367
This one's a little bit
more complicated,

787
00:27:10,367 --> 00:27:12,701
but let's talk about how
we made the star rating gadget

788
00:27:12,701 --> 00:27:15,501
from the dialog earlier
accessible.

789
00:27:15,501 --> 00:27:17,033
You might recall
that we decided

790
00:27:17,033 --> 00:27:18,434
to make it into a slider

791
00:27:18,434 --> 00:27:21,100
because that was sort of
the closest control

792
00:27:21,100 --> 00:27:22,767
that's already part of ARIA

793
00:27:22,767 --> 00:27:24,434
that users are already
familiar with

794
00:27:24,434 --> 00:27:26,501
that sort of simulates
what the experience

795
00:27:26,501 --> 00:27:28,734
of working with
this custom widget is like.

796
00:27:28,734 --> 00:27:31,801
So I'm not even gonna show you
the inaccessible experience

797
00:27:31,801 --> 00:27:33,601
because without making
any changes,

798
00:27:33,601 --> 00:27:35,334
as you can imagine,
this would be

799
00:27:35,334 --> 00:27:37,267
completely inaccessible
to a screen reader

800
00:27:37,267 --> 00:27:38,734
or to a keyboard user.

801
00:27:38,734 --> 00:27:41,067
So let's start making
some changes here.

802
00:27:41,067 --> 00:27:45,334
You know the first one
is tabindex equals zero.

803
00:27:45,334 --> 00:27:49,467
The second one here is
role equals slider.

804
00:27:49,467 --> 00:27:51,868
And just that change alone
is gonna be enough

805
00:27:51,868 --> 00:27:54,634
for ChromeVox to announce
that it's a slider,

806
00:27:54,634 --> 00:27:56,334
but that's not enough
in order to describe

807
00:27:56,334 --> 00:27:58,200
the current state
of the control.

808
00:27:58,200 --> 00:28:00,200
So the slider role in ARIA

809
00:28:00,200 --> 00:28:02,033
comes with a bunch
of extra attributes,

810
00:28:02,033 --> 00:28:03,634
which I'm gonna add now.

811
00:28:03,634 --> 00:28:07,601
ARIA value min equals zero.

812
00:28:07,601 --> 00:28:12,701
ARIA value max equals five.

813
00:28:12,701 --> 00:28:17,067
ARIA value now equals three.

814
00:28:17,067 --> 00:28:20,000
And just to be
a little bit more clear,

815
00:28:20,000 --> 00:28:23,801
aria-valuetext equals
three stars.

816
00:28:23,801 --> 00:28:25,133
So instead of just saying

817
00:28:25,133 --> 00:28:27,100
the value is three
out of five,

818
00:28:27,100 --> 00:28:28,834
we can give it
a special label

819
00:28:28,834 --> 00:28:30,501
and say three stars.

820
00:28:30,501 --> 00:28:32,868
So we haven't made this
interactive yet,

821
00:28:32,868 --> 00:28:35,734
but let's go ahead and see
exactly what happens.

822
00:28:35,734 --> 00:28:37,300
female voice: Rate from
one to five stars.

823
00:28:37,300 --> 00:28:39,067
Three stars.
Min zero, max five.

824
00:28:39,067 --> 00:28:40,400
Slider.

825
00:28:40,400 --> 00:28:41,734
Mazzoni: That came
a little fast,

826
00:28:41,734 --> 00:28:42,968
and if you didn't
quite hear it,

827
00:28:42,968 --> 00:28:45,534
it said that
it was a slider.

828
00:28:45,534 --> 00:28:48,434
It said there was
a min zero, max five,

829
00:28:48,434 --> 00:28:50,267
and that the current value
is three.

830
00:28:50,267 --> 00:28:51,701
Three stars.

831
00:28:51,701 --> 00:28:53,033
So this is great.

832
00:28:53,033 --> 00:28:54,334
Now the only other thing
we need to do

833
00:28:54,334 --> 00:28:56,501
is make this
actually interactive

834
00:28:56,501 --> 00:28:58,167
with the keyboard.

835
00:28:58,167 --> 00:29:01,234
I went ahead and built
the key handler earlier.

836
00:29:01,234 --> 00:29:05,300
So I can just write
return star key.

837
00:29:05,300 --> 00:29:06,734
Shearer: You're outside
of the tag.

838
00:29:06,734 --> 00:29:12,801
Mazzoni: Oh, thanks.
I'll fix that in a second.

839
00:29:12,801 --> 00:29:16,200
And if I did this right...

840
00:29:16,200 --> 00:29:18,200
Cool, now it's interactive.

841
00:29:18,200 --> 00:29:20,200
female voice: Four stars.
Min zero, max five.

842
00:29:20,200 --> 00:29:21,834
Three stars.
Min zero, max five.

843
00:29:21,834 --> 00:29:23,367
Mazzoni: So notice
that simply by adding

844
00:29:23,367 --> 00:29:25,067
the keyboard handler support--

845
00:29:25,067 --> 00:29:27,467
because this is properly
marked up with ARIA

846
00:29:27,467 --> 00:29:29,534
and because
my keyboard handler modifies

847
00:29:29,534 --> 00:29:31,601
the ARIA attributes
dynamically,

848
00:29:31,601 --> 00:29:34,000
the screen reader automatically
does the right thing.

849
00:29:34,000 --> 00:29:37,067
It speaks the new value
when the control changes.

850
00:29:37,067 --> 00:29:40,634
So that's the star rating
gadget example.

851
00:29:40,634 --> 00:29:44,067
And let's do one more,
which is the pop-up dialog.

852
00:29:44,067 --> 00:29:46,234
So you saw earlier
that we had a dialog.

853
00:29:46,234 --> 00:29:48,033
And the accessibility problem
with the dialog--

854
00:29:48,033 --> 00:29:50,133
I don't even need a screen
reader to demonstrate this.

855
00:29:50,133 --> 00:29:51,634
You start with a button,

856
00:29:51,634 --> 00:29:54,000
and you click on the button
and it opens a dialog,

857
00:29:54,000 --> 00:29:56,033
but focus isn't
inside the dialog.

858
00:29:56,033 --> 00:29:58,000
So you saw how this
is a bad experience

859
00:29:58,000 --> 00:30:01,267
for just about all the users
that we're considering here.

860
00:30:01,267 --> 00:30:07,367
So the first change
I'd like to make

861
00:30:07,367 --> 00:30:09,167
is just to focus
the "OK" button

862
00:30:09,167 --> 00:30:10,501
when we enter the dialog.

863
00:30:10,501 --> 00:30:11,767
A simple change like this

864
00:30:11,767 --> 00:30:13,868
is gonna create
a much better experience

865
00:30:13,868 --> 00:30:15,634
for a keyboard-only user.

866
00:30:15,634 --> 00:30:19,767
Now the initial focus
is inside the dialog.

867
00:30:19,767 --> 00:30:21,901
Now let's focus on
the screen reader user.

868
00:30:21,901 --> 00:30:25,968
And I'm gonna say
role equals dialog

869
00:30:25,968 --> 00:30:27,701
on the outer dialog
element there.

870
00:30:27,701 --> 00:30:29,434
And I'm gonna do
one more thing here,

871
00:30:29,434 --> 00:30:32,100
which is add aria-label.

872
00:30:32,100 --> 00:30:33,567
This is optional,

873
00:30:33,567 --> 00:30:35,501
but it'll create
an even better experience.

874
00:30:35,501 --> 00:30:38,767
We can call this
a confirmation dialog.

875
00:30:38,767 --> 00:30:44,767
So now let's turn on ChromeVox
and see what happens.

876
00:30:44,767 --> 00:30:46,801
female voice: Buy more
printer ink, button.

877
00:30:46,801 --> 00:30:48,534
Mazzoni: Okay, so "buy more
printer ink, button."

878
00:30:48,534 --> 00:30:50,934
Now I'm gonna click this
and see what happens.

879
00:30:50,934 --> 00:30:52,701
female voice: Entering
dialog confirmation.

880
00:30:52,701 --> 00:30:54,434
OK, button.

881
00:30:54,434 --> 00:30:57,100
Mazzoni: Great, so this said,
"entering dialog confirmation."

882
00:30:57,100 --> 00:30:59,234
So now I know that
I'm inside the dialog

883
00:30:59,234 --> 00:31:01,000
and that I'm
in an "OK" button.

884
00:31:01,000 --> 00:31:03,300
So this is already a much
better experience before.

885
00:31:03,300 --> 00:31:04,968
There's only one more problem,

886
00:31:04,968 --> 00:31:07,100
which is that it's possible
for me to escape

887
00:31:07,100 --> 00:31:08,400
outside the dialog.

888
00:31:08,400 --> 00:31:09,801
female voice:
Cancel, button.

889
00:31:09,801 --> 00:31:11,334
Refresh, button.

890
00:31:11,334 --> 00:31:12,734
Exiting dialog.

891
00:31:12,734 --> 00:31:14,701
Mazzoni: So this isn't
a terrible experience.

892
00:31:14,701 --> 00:31:16,901
At least it told me that
I exited the dialog.

893
00:31:16,901 --> 00:31:18,901
But that isn't exactly
the experience

894
00:31:18,901 --> 00:31:21,501
that I would like to deliver
for users as a developer.

895
00:31:21,501 --> 00:31:24,300
I'd like to actually keep focus
trapped inside the dialog

896
00:31:24,300 --> 00:31:26,834
because I want the user
to either press the "OK" button

897
00:31:26,834 --> 00:31:28,234
or the "Cancel" button.

898
00:31:28,234 --> 00:31:30,467
And so we can do that with just
a little bit of JavaScript,

899
00:31:30,467 --> 00:31:31,701
but it's a little more
JavaScript

900
00:31:31,701 --> 00:31:32,801
than I wanna type live,

901
00:31:32,801 --> 00:31:34,100
and so I typed it
ahead of time,

902
00:31:34,100 --> 00:31:35,701
and I'm gonna
paste it in here.

903
00:31:35,701 --> 00:31:38,234
But essentially
all it's doing

904
00:31:38,234 --> 00:31:43,601
is adding some
event listeners.

905
00:31:43,601 --> 00:31:48,067
And if I pasted that
in the right place...

906
00:31:48,067 --> 00:31:49,234
great.

907
00:31:49,234 --> 00:31:50,234
So what's happening now

908
00:31:50,234 --> 00:31:51,701
is that even as
I keep pressing tab,

909
00:31:51,701 --> 00:31:53,868
it's keeping me
inside the dialog.

910
00:31:53,868 --> 00:31:56,167
And if I press shift-tab,
it's going to keep me there.

911
00:31:56,167 --> 00:31:57,601
You can see it
flicker a little bit,

912
00:31:57,601 --> 00:31:59,167
'cause what's happening
is the browser's

913
00:31:59,167 --> 00:32:01,167
allowing the focus to move
outside the dialog.

914
00:32:01,167 --> 00:32:02,901
I'm listening
on the focus event

915
00:32:02,901 --> 00:32:04,667
and just moving it
right back inside.

916
00:32:04,667 --> 00:32:06,734
And this is something that
works for screen readers.

917
00:32:06,734 --> 00:32:08,734
It works for people
who are using the keyboard,

918
00:32:08,734 --> 00:32:14,000
and this creates
a much better experience.

919
00:32:14,000 --> 00:32:16,601
One last--Whoo.

920
00:32:16,601 --> 00:32:20,501
It really wants to keep things
trapped inside the dialog.

921
00:32:20,501 --> 00:32:22,834
Okay, one less
compatibility note.

922
00:32:22,834 --> 00:32:24,400
We've designed
all of these examples

923
00:32:24,400 --> 00:32:27,367
to work with not just
ChromeVox and Chrome OS,

924
00:32:27,367 --> 00:32:28,968
but all the examples
we showed you

925
00:32:28,968 --> 00:32:30,467
is standard HTML5.

926
00:32:30,467 --> 00:32:32,467
It's part of the ARIA standard,

927
00:32:32,467 --> 00:32:34,334
and it's part of
just standard HTML5

928
00:32:34,334 --> 00:32:36,434
and JavaScript that you've
been using for a while.

929
00:32:36,434 --> 00:32:39,400
And all these examples work
across a variety of browsers

930
00:32:39,400 --> 00:32:41,400
and popular screen readers
and magnifiers.

931
00:32:41,400 --> 00:32:43,334
We've listed some of them
here on the page.

932
00:32:43,334 --> 00:32:45,501
There are some platform
differences,

933
00:32:45,501 --> 00:32:48,868
but the good news is that
a couple of years ago

934
00:32:48,868 --> 00:32:50,434
this would have been
difficult to deliver

935
00:32:50,434 --> 00:32:51,667
to very many users.

936
00:32:51,667 --> 00:32:53,934
And today the latest
versions of browsers

937
00:32:53,934 --> 00:32:56,367
and the latest versions
of mini screen readers

938
00:32:56,367 --> 00:32:58,267
already support
everything you saw here,

939
00:32:58,267 --> 00:33:00,067
and so you can deliver
this great, accessible,

940
00:33:00,067 --> 00:33:04,133
interactive experience
from a single code base.

941
00:33:04,133 --> 00:33:06,200
Shearer: So now that you've seen
all of our different examples

942
00:33:06,200 --> 00:33:07,901
and seen how we're using

943
00:33:07,901 --> 00:33:09,634
the advice that
we're giving today,

944
00:33:09,634 --> 00:33:11,033
I just wanted to do
a quick recap

945
00:33:11,033 --> 00:33:14,000
of what we've said.

946
00:33:14,000 --> 00:33:16,667
Number one, use clean
HTML and standard tags.

947
00:33:16,667 --> 00:33:18,467
Remember that clean HTML

948
00:33:18,467 --> 00:33:20,701
is generally
more accessible HTML.

949
00:33:20,701 --> 00:33:23,701
And this is important
to do first as opposed to later.

950
00:33:23,701 --> 00:33:25,534
Number two, manage focus.

951
00:33:25,534 --> 00:33:27,834
Make sure that your custom
interactive elements,

952
00:33:27,834 --> 00:33:30,701
your fancy divs and spans
with onclick handlers

953
00:33:30,701 --> 00:33:32,534
have tabindex on them

954
00:33:32,534 --> 00:33:35,534
and that they can receive
keyboard focus.

955
00:33:35,534 --> 00:33:39,267
And this is--you can also then
proactively manage your focus

956
00:33:39,267 --> 00:33:41,167
by using the JavaScript
focus method

957
00:33:41,167 --> 00:33:43,734
and by listening
to how the user

958
00:33:43,734 --> 00:33:45,901
is trying to move focus
around the page.

959
00:33:45,901 --> 00:33:47,567
The third thing
is making sure

960
00:33:47,567 --> 00:33:49,868
that your controls
are usable with the keyboard.

961
00:33:49,868 --> 00:33:51,434
Add key handlers.

962
00:33:51,434 --> 00:33:53,367
Make sure that a user
doesn't have to have a mouse

963
00:33:53,367 --> 00:33:56,767
in order to use your
fancy slider widgets.

964
00:33:56,767 --> 00:33:59,334
And finally add ARIA
for screen readers.

965
00:33:59,334 --> 00:34:01,033
And the good thing here

966
00:34:01,033 --> 00:34:03,267
is that if you've already
done the first three steps,

967
00:34:03,267 --> 00:34:05,734
it should be easy
to find the correct ARIA role

968
00:34:05,734 --> 00:34:07,767
for the control
that you're trying to build.

969
00:34:07,767 --> 00:34:09,934
And if you can't find one
that matches exactly,

970
00:34:09,934 --> 00:34:12,434
find one that approximates
the interaction style

971
00:34:12,434 --> 00:34:13,968
that you want.

972
00:34:13,968 --> 00:34:15,767
And make sure that
you're updating your dynamic

973
00:34:15,767 --> 00:34:17,234
states and properties.

974
00:34:17,234 --> 00:34:19,734
And make sure that you're
identifying your live regions

975
00:34:19,734 --> 00:34:22,033
to the user.

976
00:34:22,033 --> 00:34:24,133
Mazzoni: I have one more note
that I'd like to make here,

977
00:34:24,133 --> 00:34:25,634
which is that
this is something

978
00:34:25,634 --> 00:34:27,501
that didn't come up
with ChromeVox

979
00:34:27,501 --> 00:34:29,434
but is an issue
with a few screen readers,

980
00:34:29,434 --> 00:34:31,634
which is that some
screen readers are modal.

981
00:34:31,634 --> 00:34:33,934
And by modal all I mean
is that the screen readers

982
00:34:33,934 --> 00:34:36,167
have a mode where
all of the keys the user press

983
00:34:36,167 --> 00:34:37,801
go directly
to the screen reader

984
00:34:37,801 --> 00:34:40,701
and not to the web page
or any other app.

985
00:34:40,701 --> 00:34:42,601
This can be convenient
because it means

986
00:34:42,601 --> 00:34:44,334
you don't have to hold down
modifier keys

987
00:34:44,334 --> 00:34:46,267
while you're interacting
with the screen reader.

988
00:34:46,267 --> 00:34:47,701
But the problem is,

989
00:34:47,701 --> 00:34:49,467
is that you can't,
as a web developer,

990
00:34:49,467 --> 00:34:51,701
assume that someone
who's using a screen reader

991
00:34:51,701 --> 00:34:53,934
is able to always press keys

992
00:34:53,934 --> 00:34:55,701
that your application
can listen to.

993
00:34:55,701 --> 00:34:57,767
But luckily, there's
a very easy solution,

994
00:34:57,767 --> 00:35:00,934
which is that whenever the user
has focused a control,

995
00:35:00,934 --> 00:35:03,567
then any keys they press

996
00:35:03,567 --> 00:35:05,634
are going to be sent
to that focused control.

997
00:35:05,634 --> 00:35:07,567
So if you just
keep that in mind

998
00:35:07,567 --> 00:35:09,734
and just remember that
global key handlers

999
00:35:09,734 --> 00:35:11,501
may not always work,

1000
00:35:11,501 --> 00:35:15,467
but that keys on specific
focus controls will work,

1001
00:35:15,467 --> 00:35:17,300
then you can build something
that'll be compatible

1002
00:35:17,300 --> 00:35:19,501
with the majority
of screen readers out there.

1003
00:35:19,501 --> 00:35:22,067
There's one alternative
for more advanced developers,

1004
00:35:22,067 --> 00:35:24,901
which is
the ARIA role application.

1005
00:35:24,901 --> 00:35:26,634
You can set a certain
port of the page

1006
00:35:26,634 --> 00:35:29,200
or the entire page
to be a web application

1007
00:35:29,200 --> 00:35:31,100
which listens
to all keyboard events

1008
00:35:31,100 --> 00:35:33,100
and sends nothing
to the screen reader.

1009
00:35:33,100 --> 00:35:34,834
There's some caveats
in working with this,

1010
00:35:34,834 --> 00:35:36,267
but this can be
a great way

1011
00:35:36,267 --> 00:35:38,167
that you can build
a very custom experience

1012
00:35:38,167 --> 00:35:40,868
if you want to do that.

1013
00:35:40,868 --> 00:35:42,567
Shearer: So in the last
part of our talk,

1014
00:35:42,567 --> 00:35:44,501
we want to talk about
some of the opportunities

1015
00:35:44,501 --> 00:35:45,901
that are available out there

1016
00:35:45,901 --> 00:35:48,100
if you're a developer
interested in accessibility,

1017
00:35:48,100 --> 00:35:50,133
which I'm sure
all of you are.

1018
00:35:50,133 --> 00:35:52,667
But first,
before I start talking

1019
00:35:52,667 --> 00:35:54,601
about the cool things
that you can do,

1020
00:35:54,601 --> 00:35:56,167
I want to talk about
some of the limitations

1021
00:35:56,167 --> 00:35:58,534
that are out there,
unfortunately.

1022
00:35:58,534 --> 00:36:01,167
Specifically with some of
the advice that we gave you

1023
00:36:01,167 --> 00:36:04,133
like ARIA, there are wide
implementation differences

1024
00:36:04,133 --> 00:36:07,501
at this time between browsers,
platforms, and screen readers.

1025
00:36:07,501 --> 00:36:10,834
And what is implemented
can be buggy and quirky.

1026
00:36:10,834 --> 00:36:13,467
If your user base is customers

1027
00:36:13,467 --> 00:36:16,267
who are using older browsers
and older screen readers,

1028
00:36:16,267 --> 00:36:18,434
at this time the best way
to reach those customers

1029
00:36:18,434 --> 00:36:21,133
is still writing
a static HTML page.

1030
00:36:21,133 --> 00:36:23,000
So if that's
your customer base,

1031
00:36:23,000 --> 00:36:25,901
a static HTML page
is the best way to reach them.

1032
00:36:25,901 --> 00:36:27,701
But you guys are here
at Google I/O.

1033
00:36:27,701 --> 00:36:29,767
You want to learn
about cool, emerging tech,

1034
00:36:29,767 --> 00:36:31,767
and the great thing
about ARIA

1035
00:36:31,767 --> 00:36:33,334
is that it's kind of
in the same place

1036
00:36:33,334 --> 00:36:35,133
as HTML5 generally.

1037
00:36:35,133 --> 00:36:37,267
The spec is really ambitious.

1038
00:36:37,267 --> 00:36:39,300
And it's implemented
in some places better

1039
00:36:39,300 --> 00:36:41,167
than it's implemented
in other places.

1040
00:36:41,167 --> 00:36:43,167
But at the same time,
there's a lot of stuff

1041
00:36:43,167 --> 00:36:45,067
that works really well
everywhere.

1042
00:36:45,067 --> 00:36:47,834
And we showed you
a few of those today.

1043
00:36:47,834 --> 00:36:50,801
So there's no reason to wait
until things settle down

1044
00:36:50,801 --> 00:36:53,567
to start hacking
and building cool tools

1045
00:36:53,567 --> 00:36:57,234
with the stuff
that is available.

1046
00:36:57,234 --> 00:36:58,934
Mazzoni: So we want
to talk a little bit

1047
00:36:58,934 --> 00:37:01,133
about the power
of browser extensions.

1048
00:37:01,133 --> 00:37:04,167
You know that we've been demoing
these things using ChromeVox,

1049
00:37:04,167 --> 00:37:06,167
which is built
as a browser extension.

1050
00:37:06,167 --> 00:37:09,634
And browser extensions
in the last couple of years

1051
00:37:09,634 --> 00:37:11,934
have really become
a lot more powerful

1052
00:37:11,934 --> 00:37:14,567
because you don't have
to restart your browser anymore

1053
00:37:14,567 --> 00:37:16,467
when you want
to install an extension.

1054
00:37:16,467 --> 00:37:18,067
You don't have
to worry as much

1055
00:37:18,067 --> 00:37:20,000
about what types
of privileges

1056
00:37:20,000 --> 00:37:21,367
that extension might have.

1057
00:37:21,367 --> 00:37:23,601
You know exactly
what sites and what things

1058
00:37:23,601 --> 00:37:25,133
it has access to.

1059
00:37:25,133 --> 00:37:27,234
And because of all this,

1060
00:37:27,234 --> 00:37:29,100
we think that
browser extensions

1061
00:37:29,100 --> 00:37:30,667
are a perfect platform

1062
00:37:30,667 --> 00:37:33,501
not only for accessibility
solutions for end users,

1063
00:37:33,501 --> 00:37:35,634
like we've been demonstrating
with ChromeVox,

1064
00:37:35,634 --> 00:37:37,501
but also for developers

1065
00:37:37,501 --> 00:37:39,601
who want to test things out
for accessibility

1066
00:37:39,601 --> 00:37:41,000
and who want
additional tools

1067
00:37:41,000 --> 00:37:43,467
to help make their websites
more accessible.

1068
00:37:43,467 --> 00:37:46,000
So we'd like to talk about
three of Google's extensions

1069
00:37:46,000 --> 00:37:48,501
that we've developed
that you might find useful

1070
00:37:48,501 --> 00:37:51,267
or inspirational
for other ideas or extensions

1071
00:37:51,267 --> 00:37:53,167
that you might
be interested in building.

1072
00:37:53,167 --> 00:37:54,501
Shearer: The first one
we want to talk about

1073
00:37:54,501 --> 00:37:56,334
of course is ChromeVox.

1074
00:37:56,334 --> 00:37:58,100
It's built into Chrome OS.

1075
00:37:58,100 --> 00:37:59,601
But because
it's a Chrome extension,

1076
00:37:59,601 --> 00:38:02,167
you can install it on Chrome
on any platform

1077
00:38:02,167 --> 00:38:06,100
and use it as a screen reader
inside the browser.

1078
00:38:06,100 --> 00:38:08,133
It's implemented
as JavaScript,

1079
00:38:08,133 --> 00:38:11,601
which means that it's
basically built for the web.

1080
00:38:11,601 --> 00:38:14,868
It uses the new Chrome
experimental TTS API

1081
00:38:14,868 --> 00:38:16,667
to do text-to-speech.

1082
00:38:16,667 --> 00:38:19,167
And it also uses
some special Chrome OS APIs

1083
00:38:19,167 --> 00:38:22,801
to listen for user interface
events in the Chrome of Chrome.

1084
00:38:22,801 --> 00:38:24,534
Which means that
when you have your Chrome OS,

1085
00:38:24,534 --> 00:38:27,167
your Chromebook that some
of you are gonna be getting,

1086
00:38:27,167 --> 00:38:28,868
it actually will speak
the sign in dialog.

1087
00:38:28,868 --> 00:38:30,734
It will speak the menus
that you open

1088
00:38:30,734 --> 00:38:32,200
in order to change
the settings.

1089
00:38:32,200 --> 00:38:33,501
And so that's
really great too.

1090
00:38:33,501 --> 00:38:36,400
It's speaking the Chrome
of Chrome for you.

1091
00:38:36,400 --> 00:38:39,634
And for ChromeVox
the goal is really

1092
00:38:39,634 --> 00:38:42,367
to have the best support
for HTML5 and ARIA,

1093
00:38:42,367 --> 00:38:44,634
because this is
a screen reader for the web.

1094
00:38:44,634 --> 00:38:46,300
And if you want
to go beyond that,

1095
00:38:46,300 --> 00:38:48,200
we also support
custom scripts

1096
00:38:48,200 --> 00:38:51,067
that you as a developer
can add to your site

1097
00:38:51,067 --> 00:38:52,601
if you want to add
the extra level

1098
00:38:52,601 --> 00:38:54,601
of interactive accessibility

1099
00:38:54,601 --> 00:38:59,400
beyond what ARIA and HTML5
allow you to offer.

1100
00:38:59,400 --> 00:39:01,300
The second extension
that we've done

1101
00:39:01,300 --> 00:39:02,634
is called ChromeVis.

1102
00:39:02,634 --> 00:39:04,200
And this is an extension
that we made

1103
00:39:04,200 --> 00:39:05,501
for low-vision users.

1104
00:39:05,501 --> 00:39:07,834
It's basically a type
of screen magnifier.

1105
00:39:07,834 --> 00:39:09,567
We released it last summer,

1106
00:39:09,567 --> 00:39:11,400
and the goal with ChromeVis

1107
00:39:11,400 --> 00:39:14,100
was to kind of take advantage
of the power of extensions

1108
00:39:14,100 --> 00:39:17,868
to allow users to customize
their entire web experience.

1109
00:39:17,868 --> 00:39:20,334
There's a lot of different
types of low-vision users.

1110
00:39:20,334 --> 00:39:21,968
They all have different needs.

1111
00:39:21,968 --> 00:39:24,567
And ChromeVis allows them
to modify almost everything

1112
00:39:24,567 --> 00:39:26,667
about this magnified lens.

1113
00:39:26,667 --> 00:39:29,067
Basically users will select
text on the page,

1114
00:39:29,067 --> 00:39:30,934
and ChromeVis will display
that selected text

1115
00:39:30,934 --> 00:39:32,567
in this special lens.

1116
00:39:32,567 --> 00:39:34,234
And users can change
the color.

1117
00:39:34,234 --> 00:39:35,801
They can change
the size of the text.

1118
00:39:35,801 --> 00:39:37,934
They can even change
the position of the lens.

1119
00:39:37,934 --> 00:39:39,834
And so we really
see extensions

1120
00:39:39,834 --> 00:39:41,767
as a really powerful way
to allow users

1121
00:39:41,767 --> 00:39:43,901
to customize their
entire world on the web.

1122
00:39:43,901 --> 00:39:46,667
And ChromeVis
was an example of that.

1123
00:39:46,667 --> 00:39:48,200
Mazzoni: The last extension
I want to talk about

1124
00:39:48,200 --> 00:39:50,701
is called ChromeShades,
which we just released.

1125
00:39:50,701 --> 00:39:52,100
And this is different.

1126
00:39:52,100 --> 00:39:54,801
This is an accessibility tool
entirely for developers.

1127
00:39:54,801 --> 00:39:57,801
And in fact, it's entirely
for sighted developers.

1128
00:39:57,801 --> 00:40:00,400
Because I found myself
as a sighted developer

1129
00:40:00,400 --> 00:40:03,501
who is interested in building
more web applications

1130
00:40:03,501 --> 00:40:05,701
that are accessible
to people with screen readers

1131
00:40:05,701 --> 00:40:08,367
and magnifiers and other
assistive technology.

1132
00:40:08,367 --> 00:40:12,167
The problem I found
is that as a--

1133
00:40:12,167 --> 00:40:14,634
Because I'm not
a screen reader user,

1134
00:40:14,634 --> 00:40:16,300
it was a little bit
cumbersome for me

1135
00:40:16,300 --> 00:40:17,667
to keep turning on
a screen reader,

1136
00:40:17,667 --> 00:40:19,167
testing out my application,

1137
00:40:19,167 --> 00:40:21,167
then turning it off,
going back to coding,

1138
00:40:21,167 --> 00:40:23,000
because keeping it on
all the time and jabbering

1139
00:40:23,000 --> 00:40:24,767
is not the experience
I'm used to.

1140
00:40:24,767 --> 00:40:28,701
So I wanted a tool that would
help me find and identify

1141
00:40:28,701 --> 00:40:30,400
accessibility
problems quickly

1142
00:40:30,400 --> 00:40:32,000
without going through
the same experience.

1143
00:40:32,000 --> 00:40:35,367
And so ChromeShades
transforms your web page

1144
00:40:35,367 --> 00:40:38,167
into a visual experience

1145
00:40:38,167 --> 00:40:40,934
that helps highlight potential
accessibility problems.

1146
00:40:40,934 --> 00:40:44,234
It highlights which controls
are focusable and interactive

1147
00:40:44,234 --> 00:40:46,534
and different roles,
whether you're using ARIA

1148
00:40:46,534 --> 00:40:47,968
or whether you're
using native controls.

1149
00:40:47,968 --> 00:40:51,200
You can continue to interact
with your application

1150
00:40:51,200 --> 00:40:52,834
just as you would normally.

1151
00:40:52,834 --> 00:40:55,067
So you can test you
your whole application

1152
00:40:55,067 --> 00:40:57,934
and visually see at a glance
if there are any problems,

1153
00:40:57,934 --> 00:41:02,501
which can be a lot faster
for development.

1154
00:41:02,501 --> 00:41:05,000
So the source code
to all of these extensions

1155
00:41:05,000 --> 00:41:06,667
is available on Google code.

1156
00:41:06,667 --> 00:41:09,033
Of course everything here
is open-source.

1157
00:41:09,033 --> 00:41:12,300
And if you're interested in
how any of these things work

1158
00:41:12,300 --> 00:41:14,501
or if you have ideas
on how you can build

1159
00:41:14,501 --> 00:41:16,901
on any of these extensions
or the ideas behind them

1160
00:41:16,901 --> 00:41:19,100
to make things accessible
to different users

1161
00:41:19,100 --> 00:41:20,634
or just to get an idea
of how to make

1162
00:41:20,634 --> 00:41:22,133
your own web app accessible,

1163
00:41:22,133 --> 00:41:23,634
you can check out
the source code

1164
00:41:23,634 --> 00:41:26,133
or interact with us
by taking a look at that.

1165
00:41:26,133 --> 00:41:28,234
Shearer: And we're also
at the Developer Sandbox.

1166
00:41:28,234 --> 00:41:29,901
So if you want to talk
to us in person

1167
00:41:29,901 --> 00:41:31,400
and maybe try out
some of these extensions,

1168
00:41:31,400 --> 00:41:34,000
we'd be more than happy
to demo those for you.

1169
00:41:34,000 --> 00:41:36,534
But we've reached the end
of our presentation.

1170
00:41:36,534 --> 00:41:39,567
So I wanted to leave you
with a few final thoughts.

1171
00:41:39,567 --> 00:41:41,000
First of which is that,

1172
00:41:41,000 --> 00:41:43,300
as we said at the beginning
of the presentation,

1173
00:41:43,300 --> 00:41:45,501
an accessible website
does not have to be

1174
00:41:45,501 --> 00:41:47,901
a static, slow, HTML site.

1175
00:41:47,901 --> 00:41:49,367
With just a little bit
more work,

1176
00:41:49,367 --> 00:41:50,834
you can deliver
to your users

1177
00:41:50,834 --> 00:41:52,968
an interactive,
dynamic experience

1178
00:41:52,968 --> 00:41:55,234
that's gonna be
fun for them to use.

1179
00:41:55,234 --> 00:41:57,467
And the first step
down this road,

1180
00:41:57,467 --> 00:41:59,400
as I said as I was
stalling for time,

1181
00:41:59,400 --> 00:42:01,133
is just unplug your mouse.

1182
00:42:01,133 --> 00:42:02,701
All you have to do
is unplug your mouse

1183
00:42:02,701 --> 00:42:05,067
and try out your app
or your favorite web app

1184
00:42:05,067 --> 00:42:08,434
and you really might be
surprised at what you find.

1185
00:42:08,434 --> 00:42:10,033
It's the quickest way
to figure out

1186
00:42:10,033 --> 00:42:11,501
what the problems are

1187
00:42:11,501 --> 00:42:13,133
for users that aren't
gonna be using a mouse

1188
00:42:13,133 --> 00:42:14,701
to access your site.

1189
00:42:14,701 --> 00:42:17,100
And finally,
HTML5 and ARIA

1190
00:42:17,100 --> 00:42:18,901
are gonna get you
the rest of the way there.

1191
00:42:18,901 --> 00:42:20,334
With just a little bit
of extra work,

1192
00:42:20,334 --> 00:42:23,767
you can really give users
of assistive technology

1193
00:42:23,767 --> 00:42:26,667
an experience that rivals
the experience of any other user

1194
00:42:26,667 --> 00:42:28,434
without building
a separate page.

1195
00:42:28,434 --> 00:42:30,400
So it can be the same page
for everybody,

1196
00:42:30,400 --> 00:42:32,968
and that's really
the goal here.

1197
00:42:32,968 --> 00:42:34,801
So we hope you enjoyed
the presentation.

1198
00:42:34,801 --> 00:42:36,400
We hope that
you learned something.

1199
00:42:36,400 --> 00:42:38,968
We have a feedback
link at the top.

1200
00:42:38,968 --> 00:42:46,234
It's goo.gl/eWAqj
if you wrote that down.

1201
00:42:46,234 --> 00:42:47,534
We also have hashtags

1202
00:42:47,534 --> 00:42:49,701
if you can tweet
about the presentation.

1203
00:42:49,701 --> 00:42:51,200
And of course
the presentation code

1204
00:42:51,200 --> 00:42:52,667
is on our Google Code site.

1205
00:42:52,667 --> 00:42:54,434
And feel free to stop
by the Sandbox

1206
00:42:54,434 --> 00:42:56,267
and talk to us in person.

1207
00:42:56,267 --> 00:43:00,968
Mazzoni: Any questions
while we're right here?

1208
00:43:00,968 --> 00:43:03,634
Yeah, someone's coming up.

1209
00:43:03,634 --> 00:43:08,133
man: The--I looked on
the web store

1210
00:43:08,133 --> 00:43:10,701
for those extensions
you were just talking about.

1211
00:43:10,701 --> 00:43:12,501
I found ChromeShades
and ChromeVis,

1212
00:43:12,501 --> 00:43:14,334
but ChromeVox
was not listed.

1213
00:43:14,334 --> 00:43:15,767
Shearer: The reason--
Oh, sorry.

1214
00:43:15,767 --> 00:43:16,801
man: No, go ahead.

1215
00:43:16,801 --> 00:43:18,000
Shearer:
The reason why ChromeVox

1216
00:43:18,000 --> 00:43:19,434
is not on the web store
is because it uses

1217
00:43:19,434 --> 00:43:21,133
the experimental TTS API.

1218
00:43:21,133 --> 00:43:22,767
And because that's
still experimental,

1219
00:43:22,767 --> 00:43:24,300
we can't put it
on the gallery.

1220
00:43:24,300 --> 00:43:26,300
man: So how do you
install it then?

1221
00:43:26,300 --> 00:43:27,567
Shearer: On our
Google Code site,

1222
00:43:27,567 --> 00:43:29,367
you can actually get
the package CRX

1223
00:43:29,367 --> 00:43:30,934
and you can actually
also build it from source.

1224
00:43:30,934 --> 00:43:33,667
man: Thank you.

1225
00:43:33,667 --> 00:43:36,534
Mazzoni: So yeah, as soon as
the TTS extension

1226
00:43:36,534 --> 00:43:38,801
becomes a part
of stable Chrome,

1227
00:43:38,801 --> 00:43:41,167
we'll definitely put this
on the web store.

1228
00:43:41,167 --> 00:43:43,067
And we're planning also
a separate launch

1229
00:43:43,067 --> 00:43:46,167
with more features
to integrate with Chrome

1230
00:43:46,167 --> 00:43:48,033
on platforms other
than Chrome OS.

1231
00:43:48,033 --> 00:43:49,534
Today we're
essentially launching

1232
00:43:49,534 --> 00:43:51,267
for all users on Chrome OS

1233
00:43:51,267 --> 00:43:53,834
and essentially for developers
who are more comfortable

1234
00:43:53,834 --> 00:43:55,367
doing things
like building from source

1235
00:43:55,367 --> 00:43:57,901
or downloading and installing
the extensions separately.

1236
00:43:57,901 --> 00:43:59,801
So essentially this launch
of ChromeVox

1237
00:43:59,801 --> 00:44:03,834
on other platforms is for
the audience here, developers.

1238
00:44:09,968 --> 00:44:11,634
man: Hello.
Oh, okay.

1239
00:44:11,634 --> 00:44:15,801
So about managing the focus
on dialogs,

1240
00:44:15,801 --> 00:44:18,434
is there any other way
to keep the focus

1241
00:44:18,434 --> 00:44:20,367
from escaping that dialog,

1242
00:44:20,367 --> 00:44:23,367
instead of using JavaScript,
like using ARIA role

1243
00:44:23,367 --> 00:44:26,000
or a property
or something like that?

1244
00:44:26,000 --> 00:44:27,734
Mazzoni: So that's
a really good question.

1245
00:44:27,734 --> 00:44:29,334
The question is,
is there any other way

1246
00:44:29,334 --> 00:44:34,033
to keep focus inside of
something like a dialog?

1247
00:44:34,033 --> 00:44:36,934
I've experimented with this
a bit in different browsers

1248
00:44:36,934 --> 00:44:38,367
and screen readers.

1249
00:44:38,367 --> 00:44:39,767
There is no one solution

1250
00:44:39,767 --> 00:44:41,801
that works across all
browsers and screen readers

1251
00:44:41,801 --> 00:44:44,400
other than listening
for focus events,

1252
00:44:44,400 --> 00:44:47,367
because focus is not
a cancelable event

1253
00:44:47,367 --> 00:44:48,834
as part of the HTML standard.

1254
00:44:48,834 --> 00:44:50,167
So this is by design.

1255
00:44:50,167 --> 00:44:51,767
You can listen
to the focus event

1256
00:44:51,767 --> 00:44:53,234
and move it back.

1257
00:44:53,234 --> 00:44:54,534
There's one exception,

1258
00:44:54,534 --> 00:44:58,067
which is that if you're
using Safari on Mac OS X,

1259
00:44:58,067 --> 00:45:01,501
it implements the dialog
role slightly differently

1260
00:45:01,501 --> 00:45:03,501
so that it actually
treats the dialog

1261
00:45:03,501 --> 00:45:06,534
as essentially a separate
region of the page.

1262
00:45:06,534 --> 00:45:09,200
And by default,
all of the control

1263
00:45:09,200 --> 00:45:11,000
will be trapped
within the dialog

1264
00:45:11,000 --> 00:45:13,868
in Safari with
the Mac screen reader.

1265
00:45:13,868 --> 00:45:16,100
So users get a slightly
better experience there,

1266
00:45:16,100 --> 00:45:19,467
and they can choose to escape
the dialog with one extra step.

1267
00:45:19,467 --> 00:45:21,100
But across other browsers

1268
00:45:21,100 --> 00:45:22,734
right now there isn't
a solution for that.

1269
00:45:22,734 --> 00:45:24,300
That's something we're
definitely considering

1270
00:45:24,300 --> 00:45:26,200
for ChromeVox,
so it's a good question.

1271
00:45:26,200 --> 00:45:30,968
man: Okay, thanks.

1272
00:45:30,968 --> 00:45:32,467
Mazzoni:
Another question here.

1273
00:45:32,467 --> 00:45:36,634
man: Yeah, does ARIA validates
on W3C validator,

1274
00:45:36,634 --> 00:45:39,634
HTML5 validator,
or those kind of tools?

1275
00:45:39,634 --> 00:45:41,300
Mazzoni: The question was,

1276
00:45:41,300 --> 00:45:45,501
does ARIA validate
with W3C validators?

1277
00:45:45,501 --> 00:45:48,234
There might be
some ARIA tags that do,

1278
00:45:48,234 --> 00:45:50,634
but the experience we've had

1279
00:45:50,634 --> 00:45:54,200
is that validators work
great for static web pages.

1280
00:45:54,200 --> 00:45:58,267
And they're not going to help
in order to determine

1281
00:45:58,267 --> 00:46:00,434
whether something
really is accessible.

1282
00:46:00,434 --> 00:46:03,334
Validators should be
recognizing ARIA tags

1283
00:46:03,334 --> 00:46:05,667
as valid syntax
so they should tell you

1284
00:46:05,667 --> 00:46:07,501
that the syntax is correct,

1285
00:46:07,501 --> 00:46:08,834
but they're not
going to tell you

1286
00:46:08,834 --> 00:46:10,434
whether you've actually
semantically implemented

1287
00:46:10,434 --> 00:46:11,767
things correctly.

1288
00:46:11,767 --> 00:46:14,100
It's a little bit beyond
what a validator can do.

1289
00:46:14,100 --> 00:46:16,367
But this--since this is part
of the HTML5 standard,

1290
00:46:16,367 --> 00:46:18,801
there's no reason
it shouldn't validate.

1291
00:46:22,701 --> 00:46:24,767
man: Beyond what you'd
already talked about,

1292
00:46:24,767 --> 00:46:26,968
making an accessible website
that's also dynamic

1293
00:46:26,968 --> 00:46:29,200
and interesting,
do you foresee any issues

1294
00:46:29,200 --> 00:46:33,300
of being Section 508 compliant?

1295
00:46:33,300 --> 00:46:35,200
Mazzoni: Can you elaborate
on the question?

1296
00:46:35,200 --> 00:46:37,901
You're asking, like,
what other issues

1297
00:46:37,901 --> 00:46:40,033
do you see in being
Section 508 compliant?

1298
00:46:40,033 --> 00:46:42,300
Do you mean from the
perspective of a web developer

1299
00:46:42,300 --> 00:46:43,634
what else they need to do?

1300
00:46:43,634 --> 00:46:46,300
man: I was thinking more like

1301
00:46:46,300 --> 00:46:48,000
making an HTML5 website,

1302
00:46:48,000 --> 00:46:49,801
are there particular
complications

1303
00:46:49,801 --> 00:46:51,534
to being Section 508 compliant

1304
00:46:51,534 --> 00:46:53,100
that go beyond just,
you know,

1305
00:46:53,100 --> 00:46:55,367
what you've recommended
in this session?

1306
00:46:55,367 --> 00:46:56,868
Mazzoni: So what I would
say there is,

1307
00:46:56,868 --> 00:46:59,834
that Section 508 compliance--
for people who don't know,

1308
00:46:59,834 --> 00:47:03,801
it's a compliance standard
that essentially

1309
00:47:03,801 --> 00:47:06,033
gives a checklist of a bunch
of different ways

1310
00:47:06,033 --> 00:47:09,434
in which a website or lots
of other types of products

1311
00:47:09,434 --> 00:47:11,968
should be accessible
to people

1312
00:47:11,968 --> 00:47:14,834
with a wide range
of disabilities.

1313
00:47:14,834 --> 00:47:17,000
Section 508 compliant
is mostly,

1314
00:47:17,000 --> 00:47:18,567
at least for the web,

1315
00:47:18,567 --> 00:47:20,968
focused on things that are
a little bit more static

1316
00:47:20,968 --> 00:47:22,534
or just things like
whether something

1317
00:47:22,534 --> 00:47:23,968
can be interacted with
at all.

1318
00:47:23,968 --> 00:47:25,501
There are a lot of things
that we didn't cover

1319
00:47:25,501 --> 00:47:26,834
in this presentation

1320
00:47:26,834 --> 00:47:28,801
because there's a lot
of resources on it.

1321
00:47:28,801 --> 00:47:31,167
For example, a lot
of people are color-blind

1322
00:47:31,167 --> 00:47:33,634
or have partial low-vision,

1323
00:47:33,634 --> 00:47:35,334
so they might need
larger fonts.

1324
00:47:35,334 --> 00:47:37,000
We didn't talk
about those issues

1325
00:47:37,000 --> 00:47:38,901
because they don't relate
to interactivity.

1326
00:47:38,901 --> 00:47:41,267
We've been just talking about
the issue of interactivity.

1327
00:47:41,267 --> 00:47:44,300
And for interactivity,
the things we've talked about

1328
00:47:44,300 --> 00:47:45,767
in working with ARIA,

1329
00:47:45,767 --> 00:47:49,067
specifically the ARIA roles to
deal with interactive controls

1330
00:47:49,067 --> 00:47:52,601
and managing focus
and keyboard handlers,

1331
00:47:52,601 --> 00:47:53,934
those are the things
you need to do

1332
00:47:53,934 --> 00:47:55,534
in order to make
something work

1333
00:47:55,534 --> 00:47:57,801
when you've got
an interactive website.

1334
00:47:57,801 --> 00:47:59,300
But there are tons
of other aspects

1335
00:47:59,300 --> 00:48:01,067
to accessibility.

1336
00:48:01,067 --> 00:48:03,868
Most of those are not
necessarily affected

1337
00:48:03,868 --> 00:48:06,300
just because you have
an interactive Web 2.0 app

1338
00:48:06,300 --> 00:48:11,067
as opposed to, like,
a more static web page.

1339
00:48:11,067 --> 00:48:12,567
So there's tons of resources

1340
00:48:12,567 --> 00:48:14,334
on all the other types
of accessibility,

1341
00:48:14,334 --> 00:48:20,033
and if you want we can talk
about some of those offline.

1342
00:48:20,033 --> 00:48:22,701
And--Oh, another question
coming up.

1343
00:48:22,701 --> 00:48:27,534
man: HTML5 is also
about mobile applications.

1344
00:48:27,534 --> 00:48:31,534
Is there any supportive ARIA
in mobile browsers?

1345
00:48:31,534 --> 00:48:33,434
And how do you deal with
focus issues

1346
00:48:33,434 --> 00:48:36,501
on multi-touch devices
for instance?

1347
00:48:36,501 --> 00:48:38,033
Mazzoni: That's a really
good question.

1348
00:48:38,033 --> 00:48:41,234
There is some ARIA support
in mobile browsers already

1349
00:48:41,234 --> 00:48:45,467
on, like, right now
there's a great support

1350
00:48:45,467 --> 00:48:48,067
on the iPhone and iOS devices.

1351
00:48:48,067 --> 00:48:50,167
And you'll see
some cool things

1352
00:48:50,167 --> 00:48:51,767
coming to Android
at some point.

1353
00:48:51,767 --> 00:48:54,968
But yeah, focus
is definitely something

1354
00:48:54,968 --> 00:48:56,634
that can be different.

1355
00:48:56,634 --> 00:48:58,467
Right now I guess
I'll just say that

1356
00:48:58,467 --> 00:49:02,167
that on iOS there is
a concept of focus

1357
00:49:02,167 --> 00:49:05,901
when people are using
the voiceover on iOS.

1358
00:49:05,901 --> 00:49:07,901
And so a lot of these
things do apply.

1359
00:49:07,901 --> 00:49:09,567
But we could probably
do a whole talk

1360
00:49:09,567 --> 00:49:11,067
on accessibility
for mobile,

1361
00:49:11,067 --> 00:49:13,067
which is definitely
a different experience.

1362
00:49:13,067 --> 00:49:14,934
Shearer: It's definitely
something that's defin--

1363
00:49:14,934 --> 00:49:16,234
really an emerging field.

1364
00:49:16,234 --> 00:49:18,100
I mean, if you think back
even a few years ago,

1365
00:49:18,100 --> 00:49:20,100
it was only static,
you know, websites

1366
00:49:20,100 --> 00:49:21,267
that you could
see on mobile.

1367
00:49:21,267 --> 00:49:22,634
So this is
definitely something

1368
00:49:22,634 --> 00:49:25,067
where there's a lot of changes
happening very fast.

1369
00:49:25,067 --> 00:49:26,534
Mazzoni: That's a very good
question though.

1370
00:49:26,534 --> 00:49:28,434
man: Thanks.

1371
00:49:28,434 --> 00:49:29,934
Mazzoni: Okay, I don't see
any other questions,

1372
00:49:29,934 --> 00:49:32,133
but we'll be up here
if anyone wants to talk to us

1373
00:49:32,133 --> 00:49:33,400
about anything else.

1374
00:49:33,400 --> 00:49:34,734
And thank you very much.

1375
00:49:34,734 --> 00:49:36,334
Shearer: Thank you.

