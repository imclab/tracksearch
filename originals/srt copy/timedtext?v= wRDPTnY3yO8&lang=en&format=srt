1
00:00:00,000 --> 00:00:07,000
>> TENG: Hi there, my name is Karen Teng,
and I lead the development effort over at

2
00:00:08,540 --> 00:00:13,680
Adaptive Blue. Adaptive Blue is a New York-based
startup, focused on using semantic technologies

3
00:00:13,680 --> 00:00:17,689
to create a better web browsing experience.
>> What is your extension about?

4
00:00:17,689 --> 00:00:21,770
>> TENG: Get Glue is an innovative social
recommendation network from movies, books,

5
00:00:21,770 --> 00:00:27,140
and music. The Get Glue browser extension
brings filtered friend reviews, personal recommendations,

6
00:00:27,140 --> 00:00:33,270
and contextual content to popular sites around
the web, such as Wikipedia, Amazon, IMDB,

7
00:00:33,270 --> 00:00:37,720
and hundreds more. Get Glue can understand
that you're on a page about a recognized object,

8
00:00:37,720 --> 00:00:43,390
like a movie, book, or album. When that happens,
it calls the Get Glue API, which then determines

9
00:00:43,390 --> 00:00:48,680
which object it is. The Get Glue API also
returns information about that object, like

10
00:00:48,680 --> 00:00:54,000
core information, recent visitors, and similar
things. The output from these calls are then

11
00:00:54,000 --> 00:00:57,390
transformed via XSL to create the HTML of
the Get Glue bar.

12
00:00:57,390 --> 00:01:00,770
>> How does Glue determine what is currently
being viewed by the user?

13
00:01:00,770 --> 00:01:05,710
>> TENG: Each object on Get Glue has its own
identifier that is generated from its primary

14
00:01:05,710 --> 00:01:10,799
key attributes. These key attributes are category
specific. For example, books can be identified

15
00:01:10,799 --> 00:01:15,950
by title and author, and movies by title and
director. When somebody visits a book on a

16
00:01:15,950 --> 00:01:20,920
recognized site, we extract the title and
author from the page, and query a semantic

17
00:01:20,920 --> 00:01:26,170
database to find a match. Querying a centralized
and authoritative source helps us normalize

18
00:01:26,170 --> 00:01:31,090
across different spellings and editions to
ensure that the same book across sites is

19
00:01:31,090 --> 00:01:37,479
recognized. Semantic DBs are also category
specific. For example, we use Amazon for books

20
00:01:37,479 --> 00:01:38,369
and Netflix for movies.
>> Why do Glue's social features belong in

21
00:01:38,369 --> 00:01:44,149
the browser?
>> TENG: The browser acts as a lens as the

22
00:01:44,149 --> 00:01:49,840
user surfs around the web. And this lens is
an ideal layer to introduce contextually correct,

23
00:01:49,840 --> 00:01:54,579
highly relevant information for the user.
Social connections happen to be a specific

24
00:01:54,579 --> 00:01:59,270
type of contextual information that can be
surfaced by the browser. Get Glue is capable

25
00:01:59,270 --> 00:02:03,529
of understanding the context of a page, and
is then able to pull in the right contextual

26
00:02:03,529 --> 00:02:09,229
information from across the web automatically
onto the page. The extension pulls information

27
00:02:09,229 --> 00:02:13,640
that provides the best experience for the
user, regardless of what the website operator

28
00:02:13,640 --> 00:02:18,640
wants to surface on their page. For example,
when a user looks at a movie on Amazon, they

29
00:02:18,640 --> 00:02:22,680
cannot only see filtered friend reviews for
that movie, via the Get Glue extension, but

30
00:02:22,680 --> 00:02:26,540
they can also watch the trailer, or add it
directly to their Netflix queue.

31
00:02:26,540 --> 00:02:29,530
>> What was your experience like developing
a Google Chrome extension?

32
00:02:29,530 --> 00:02:33,350
>> TENG: We found that developing an extension
for Chrome was a different experience than

33
00:02:33,350 --> 00:02:38,420
doing it for Firefox and Internet Explorer.
The main difference is in the philosophy and

34
00:02:38,420 --> 00:02:42,660
the architecture of Chrome add-ons, which
in turn guided us to a different kind of implementation.

35
00:02:42,660 --> 00:02:46,790
Get Glue is a sophisticated add-on, which
includes semantic analysis of information

36
00:02:46,790 --> 00:02:52,500
on the pages, focuses on the content of hundreds
of popular sites, and surfaces friends' recommendations.

37
00:02:52,500 --> 00:02:58,350
Basically, it wasn't exactly trivial, and
the port to Chrome required substantial effort.

38
00:02:58,350 --> 00:03:02,300
Our main focus was on preserving a common
code base between the browsers while fitting

39
00:03:02,300 --> 00:03:07,020
into Chrome's model of background pages and
content scripts. Once we've figured out the

40
00:03:07,020 --> 00:03:10,810
best way to re-factor our code to make the
two sides communicate, the process became

41
00:03:10,810 --> 00:03:15,820
straightforward. Overall, we found the Chrome
platform to be very flexible easy to code

42
00:03:15,820 --> 00:03:22,100
on. The documentation forms were excellent.
>> How did your vision evolve as you were

43
00:03:22,100 --> 00:03:22,670
working on your extension?
>> TENG: Since we already had a working extension

44
00:03:22,670 --> 00:03:26,760
for Firefox and Internet Explorer, our main
focus was on building the Chrome extension

45
00:03:26,760 --> 00:03:31,510
in a way that fit our architecture, and reuse
most of the code. Throughout the process,

46
00:03:31,510 --> 00:03:35,530
we've focused on optimizing our code, ensuring
that the extension worked quickly and did

47
00:03:35,530 --> 00:03:38,230
not degrade the user's main experience, which
is surfing the web.

48
00:03:38,230 --> 00:03:41,230
>> What were some challenges you faced when
writing your extension?

49
00:03:41,230 --> 00:03:45,100
>> TENG: One area that gave us trouble when
porting the extension was that there was an

50
00:03:45,100 --> 00:03:49,930
architectural mismatch. Our code was relying
on synchronous calls which were impossible

51
00:03:49,930 --> 00:03:54,290
within Chrome. So, we mimicked the behavior
of synchronous requests by creating a cache

52
00:03:54,290 --> 00:03:58,400
facade within the content script. This is
done based on the suggestion from the Chrome

53
00:03:58,400 --> 00:04:02,280
team, who was very helpful throughout the
entire process of the port.

54
00:04:02,280 --> 00:04:07,250
>> How did you promote your extension?
>> TENG: It's important for an extension developer

55
00:04:07,250 --> 00:04:11,390
to find additional promotional opportunities
beyond the great value that the extension

56
00:04:11,390 --> 00:04:15,260
gallery provides. Promoting the extension
on the Get Glue website has definitely helped

57
00:04:15,260 --> 00:04:19,079
with adoption. We show a specific "add to
your browser button" for Chrome users that

58
00:04:19,079 --> 00:04:24,190
includes a Chrome logo, and we've heard that
the familiarity helps them convert. The Get

59
00:04:24,190 --> 00:04:29,510
Glue service rewards users for specific achievements
by awarding them with stickers. Individuals

60
00:04:29,510 --> 00:04:34,510
are prompted to add the extension in order
to earn a unique sticker called "add-on adhesive".

61
00:04:34,510 --> 00:04:39,639
>> What advice can you give someone before
starting to work on a Google Chrome extension?

62
00:04:39,639 --> 00:04:43,780
>> TENG: The advice is to think about whether
they're building a cross-browser solution,

63
00:04:43,780 --> 00:04:47,910
or just for Chrome. If the extension is for
Chrome only, then it should be designed to

64
00:04:47,910 --> 00:04:53,910
take maximum advantage of Chrome's infrastructure,
and native UI. If the goal is to build a cross-browser

65
00:04:53,910 --> 00:04:58,190
solution, then a lot more time needs to be
spent in the architectural phase and making

66
00:04:58,190 --> 00:05:02,340
sure that mismatches between the platforms
are understood and accounted for.

67
00:05:02,340 --> 00:05:06,889
>> What are the next steps for your extension
and your involvement with the platform?

68
00:05:06,889 --> 00:05:10,919
>> TENG: We're solely focused on a single
Get Glue extension. We follow an aggressive

69
00:05:10,919 --> 00:05:15,020
release schedule and are routinely shipping
updates for the extension. It's great that

70
00:05:15,020 --> 00:05:19,490
Chrome makes the upgrade process so seamless
for us, so that we can be confident that everybody

71
00:05:19,490 --> 00:05:24,590
is on the most recent version. We've upgraded
twice already and both times, it's been seamless

72
00:05:24,590 --> 00:05:28,380
and awesome.
>> Come meet the Adaptive Blue team at the

73
00:05:28,380 --> 00:05:29,750
Google IO conference.

