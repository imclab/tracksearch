1
00:00:03,189 --> 00:00:04,600
>>Jeff Chang: All right. Can everybody hear
me? Cool. Well, good morning and welcome to

2
00:00:04,600 --> 00:00:10,360
the third day of Google I/O. Thank you everybody
for coming to this. And I'm excited to see

3
00:00:10,360 --> 00:00:15,589
so many bright faces here.
And this is the Chrome fireside chat. We try

4
00:00:15,589 --> 00:00:19,950
to do this every year as an opportunity for
you guys, the developer community, to engage

5
00:00:19,950 --> 00:00:25,290
with us, the Chrome team. So today we have
a few product managers and a few engineering

6
00:00:25,290 --> 00:00:31,880
managers here today to take your questions.
If you look over on that screen, there is

7
00:00:31,880 --> 00:00:35,239
a URL there that you can go to which will
bring you to that page that you see on the

8
00:00:35,239 --> 00:00:40,239
left over there where you can submit questions
and vote on questions. So that will automatically

9
00:00:40,239 --> 00:00:46,199
refresh throughout the session, and I'll take
questions from there and I'll alternate with

10
00:00:46,199 --> 00:00:49,589
questions from the audience.
And so there's two standing microphones, one's

11
00:00:49,589 --> 00:00:54,339
over there and one's over there. I would recommend
actually moving close to the edges so that

12
00:00:54,339 --> 00:00:59,109
you have easy access to the microphones if
you want to ask any questions.

13
00:00:59,109 --> 00:01:04,629
So that's it. We have an hour. Let's start
with some intros. Each of us will tell you

14
00:01:04,629 --> 00:01:10,500
our name and what we work on, and we will
try to say something about either a recently

15
00:01:10,500 --> 00:01:15,410
launched product or feature that we're excited
about or something that's coming up.

16
00:01:15,410 --> 00:01:21,480
So I'll start. My name is Jeff Chang, and
I'm a product manager on the Chrome browser.

17
00:01:21,480 --> 00:01:28,480
And I'm currently responsible for end user
features and I also help coordinate the releases

18
00:01:28,490 --> 00:01:33,990
that we do every six weeks.
And the recently launched feature which I'm

19
00:01:33,990 --> 00:01:38,980
the most excited about, which hopefully you've
heard about by now, is tab sync, the synchronizing

20
00:01:38,980 --> 00:01:43,860
of tabs across the many devices where you
use Chrome.

21
00:01:43,860 --> 00:01:47,440
We had previously already had the ability
to sync your bookmarks and settings and other

22
00:01:47,440 --> 00:01:51,320
stuff like that, but tab sync in particular
allows you to see all the tabs that you have

23
00:01:51,320 --> 00:01:57,730
open on all of your other devices and open
any of them at any time, which I think is

24
00:01:57,730 --> 00:02:00,590
really useful, especially across mobile and
desktop.

25
00:02:00,590 --> 00:02:07,590
And the tab even includes the navigations
history, so you're right back where you left.

26
00:02:07,770 --> 00:02:11,060
But that's me. And I'll pass it off to Alex
now.

27
00:02:11,060 --> 00:02:15,250
>>Alex Komoroske: Cool. Hi. So my name is
Alex Komoroske. I'm a product manager on Chrome

28
00:02:15,250 --> 00:02:19,340
as well. I focus on the open Web platform,
so all the technologies that Web developers

29
00:02:19,340 --> 00:02:24,060
use to build cool apps.
My favorite stuff -- and if you saw my talk

30
00:02:24,060 --> 00:02:29,310
on Wednesday this won't surprise you -- is
Web components. So Web components is a new

31
00:02:29,310 --> 00:02:35,170
technology, a new standard that's being developed.
So relatively early stages, but it promises

32
00:02:35,170 --> 00:02:39,260
to allow people to totally change the way
they architect their Web apps and be much

33
00:02:39,260 --> 00:02:43,670
more productive. So I truly believe this is
one of the technologies that four years from

34
00:02:43,670 --> 00:02:48,340
now we'll look back and say how did we build
stuff without this? I'm really excited about

35
00:02:48,340 --> 00:02:55,340
the Web components in particular.
>>Erik Kay: Hi, my name is Erik Kay. I'm an

36
00:02:55,380 --> 00:03:00,459
engineer on the Chrome team. Actually, I've
been with the Chrome team now for a really

37
00:03:00,459 --> 00:03:07,010
long time, almost since it started, which
is actually getting close to six years ago,

38
00:03:07,010 --> 00:03:12,970
believe it or not. We were secret for almost
two years at the beginning. And so even though

39
00:03:12,970 --> 00:03:18,099
we've only been out for about four years now,
it's been a long road at this point.

40
00:03:18,099 --> 00:03:25,099
Anyway, I've done everything from the auto
update system to Chrome extensions, and our

41
00:03:25,349 --> 00:03:32,349
app system, and I also now help lead the Native
Client effort and a few other things.

42
00:03:32,709 --> 00:03:36,580
The things I'm most excited about -- I'm actually
really excited about Web components too, Alex,

43
00:03:36,580 --> 00:03:42,430
also. I think that's pretty awesome. But selfishly
the new stuff we're doing with apps I think

44
00:03:42,430 --> 00:03:48,380
will really be a big deal for people who want
to use Web technologies to do more advanced

45
00:03:48,380 --> 00:03:52,000
applications going forward. So I'm really
excited to see what people are going to build

46
00:03:52,000 --> 00:03:57,120
with that.
>>Ian Ellison-Taylor: Hi. My name is Ian Ellison-Taylor.

47
00:03:57,120 --> 00:04:01,819
I'm the director of product management for
the Web platform.

48
00:04:01,819 --> 00:04:08,400
And I'm just realizing I probably should have
sat at that end since we already covered a

49
00:04:08,400 --> 00:04:12,980
couple of my favorite features in Web components,
and apps.

50
00:04:12,980 --> 00:04:19,079
I think just to echo Erik's comment, I think
that what is coming with the new generation

51
00:04:19,079 --> 00:04:24,169
of apps is going to be a game changer. We
kind of teased it just a little bit in the

52
00:04:24,169 --> 00:04:31,100
keynote. We tried not to really oversell it
because it's very early days, but there's

53
00:04:31,100 --> 00:04:36,620
a ton of very cool stuff coming there.
But just is to make Pavel's life worse and

54
00:04:36,620 --> 00:04:41,630
not repeat, probably the other thing -- the
other major area I'm really excited about

55
00:04:41,630 --> 00:04:45,570
that's coming up in the next sort of 12 months
is around all the tools work.

56
00:04:45,570 --> 00:04:52,570
We've got -- I think Pavel showed some amazing
stuff with our own dev tools in Chrome, but

57
00:04:53,010 --> 00:04:57,380
if you also saw Adobe did a fantastic talk
on some of the work that they're doing around

58
00:04:57,380 --> 00:05:02,949
Brackets and Shadow. So -- and they're doing
-- have done some great work with Edge and

59
00:05:02,949 --> 00:05:06,729
designer focus tools for the Web platform.
And then there are other lots of companies

60
00:05:06,729 --> 00:05:13,330
as well, Cloud 9 to name but one. So I think
with a big investment in tooling as well as

61
00:05:13,330 --> 00:05:19,490
on top of the platform we can make it much
easier for people like you to build some amazing

62
00:05:19,490 --> 00:05:23,740
experiences. So I think that's really going
to help. So I think that's pretty exciting.

63
00:05:23,740 --> 00:05:30,740
>>Pavel Feldman: Thank you. I'm Pavel Feldman,
software engineer working on the developer

64
00:05:31,050 --> 00:05:34,479
tools.
And the areas we are currently focusing on

65
00:05:34,479 --> 00:05:40,419
are better authoring so that you can develop
Chrome within the tools, its memory. As the

66
00:05:40,419 --> 00:05:44,710
platform matures we see a lot more requests
on the memory. As your apps are running for

67
00:05:44,710 --> 00:05:51,430
days and weeks, you better make sure you have
no memory leaks. So we have a new heap profiler,

68
00:05:51,430 --> 00:05:57,690
we have new tools for native memory measurement,
lots of stuff there.

69
00:05:57,690 --> 00:06:03,040
The other area that is important for us is
support for mobile. We are working on the

70
00:06:03,040 --> 00:06:09,290
remote debugging for the mobile and as well
as emulating mobile handsets on your desktop.

71
00:06:09,290 --> 00:06:16,290
We do support the -- we've created the remote
debugging protocol that we are happy to see

72
00:06:16,530 --> 00:06:23,530
other big players using now around WebKit.
The other area that is important for us is

73
00:06:24,440 --> 00:06:29,800
the rendering smoothness, and you've seen
a couple of sessions on that yesterday. That's

74
00:06:29,800 --> 00:06:34,800
where we make sure your apps are buttery smooth.
And we are happy to see more and more requests

75
00:06:34,800 --> 00:06:41,259
there. And overall we are happy to see the
way the platform matures and the way you have

76
00:06:41,259 --> 00:06:48,080
more and more demand in the tooling. >>Felix
Lin: I'm Felix Lin and I'm on the product

77
00:06:48,080 --> 00:06:53,650
team for Chrome OS. I spend most of my time
working with hardware partners to bring Chrome

78
00:06:53,650 --> 00:07:00,650
devices to markets. I guess I'm most excited
about the recent Samsung Chromebook and Chromebox

79
00:07:00,750 --> 00:07:06,530
that were just released, and the close working
relationship over the past couple of years

80
00:07:06,530 --> 00:07:11,630
we've developed with Intel and Samsung and
Qualcomm and all the other folks in the PC

81
00:07:11,630 --> 00:07:17,759
ecosystem building devices.
I'm a huge fan of Chrome, as you can imagine.

82
00:07:17,759 --> 00:07:22,600
I love all the things these guys have built,
but what we're really trying to do with Chrome

83
00:07:22,600 --> 00:07:28,910
OS is fully integrate Chrome directly with
the hardware and deliver the best possible

84
00:07:28,910 --> 00:07:35,910
experience in a fully integrated package.
And so the benefit of Chromebooks and Chromeboxes

85
00:07:35,919 --> 00:07:40,780
and other devices is that, you know, when
we can control the entire stack all the way

86
00:07:40,780 --> 00:07:46,120
down to the hardware, we can deliver the best
possible experience for Chrome and the Web

87
00:07:46,120 --> 00:07:51,690
on any hardware that people have.
And so it's not about replacing PC's or replacing

88
00:07:51,690 --> 00:07:56,560
other devices, but for the people who are
spending more and more time on the Web, what

89
00:07:56,560 --> 00:08:02,600
we want to do is just deliver an awesome,
magical experience for all the rich, immersive

90
00:08:02,600 --> 00:08:05,690
experiences that you guys are building for
the Web.

91
00:08:05,690 --> 00:08:12,690
>>Jeff Chang: Great. All right. So now we're
open for questions. Feel free to walk up to

92
00:08:13,130 --> 00:08:18,720
any of the microphones and ask or otherwise
we will trade off with the --

93
00:08:18,720 --> 00:08:25,720
>>Erik Kay: We'll take precedent for the people
who actually take some bravery and walk to

94
00:08:27,020 --> 00:08:27,319
the mic.
[Laughter].

95
00:08:27,319 --> 00:08:31,900
>>Erik Kay: We'll just intersperse the ones
from moderator here.

96
00:08:31,900 --> 00:08:35,680
>>Jeff Chang: All right.
>>> Hi. Good morning. I've got a question.

97
00:08:35,680 --> 00:08:42,330
We're seeing yesterday that it's possible
to open tabs on other devices, and sometimes

98
00:08:42,330 --> 00:08:48,070
if you're like left at home or you have the
devices -- the tabs open there and you open

99
00:08:48,070 --> 00:08:55,070
on a mobile device, will it be possible to
close the tabs that are home because I read

100
00:08:55,190 --> 00:08:58,459
it on the mobile device, it's done, the task
is done?

101
00:08:58,459 --> 00:09:02,070
>>Erik Kay: Yeah, I want that, too.
>>Jeff Chang: So the question was it's great

102
00:09:02,070 --> 00:09:06,890
that you can open tabs that are on other devices
from your other devices, but what about closing

103
00:09:06,890 --> 00:09:09,550
them as well?
That's a really interesting feature request.

104
00:09:09,550 --> 00:09:14,200
We'll have to think about that.
It might be possible if Chrome is running

105
00:09:14,200 --> 00:09:18,910
on that device, but if that device has already
been shut down, obviously you couldn't do

106
00:09:18,910 --> 00:09:20,410
it immediately.
>>Erik Kay: I think we could do it.

107
00:09:20,410 --> 00:09:27,050
>>Jeff Chang: Maybe we could -- maybe we could
figure something out there.

108
00:09:27,050 --> 00:09:29,709
But yeah, I imagine that could be useful.
But yeah, when we started designing that feature

109
00:09:29,709 --> 00:09:32,320
we talked about tab sync, I think we realized
pretty quickly on that you wouldn't want the

110
00:09:32,320 --> 00:09:36,260
exact same set of tabs duplicated everywhere.
So that's not the way it works. It's more

111
00:09:36,260 --> 00:09:42,709
or less a dashboard almost. You can see all
of the devices you have, what's open on each

112
00:09:42,709 --> 00:09:49,709
one and you just pick and choose what you
want. But we'll definitely keep that in mind.

113
00:09:51,450 --> 00:09:51,700
>>> Great, thank you.
>>> +1!

114
00:09:51,450 --> 00:09:55,500
>>> Can I make a question on Chrome OS?
>>Jeff Chang: Yes.

115
00:09:55,500 --> 00:10:01,320
>>> What's the road map on Chrome OS and VPN?
Sometimes to configure Chrome OS to VPN's

116
00:10:01,320 --> 00:10:06,720
and getting to the site of a network it's
been a little bit of a hassle. >>Felix Lin:

117
00:10:06,720 --> 00:10:12,490
So Chrome OS today already supports VPN's
and we're doing a ton of work through the

118
00:10:12,490 --> 00:10:19,490
management console to enable I.T. administrators
to centrally manage an entire fleet of devices

119
00:10:20,269 --> 00:10:25,100
quickly and easily to support different authentication
schemes, different access control mechanisms

120
00:10:25,100 --> 00:10:31,190
and all that.
>>Jeff Chang: Looks like we have another megaphone

121
00:10:31,190 --> 00:10:35,170
question over here.
>>> Hi. I'm wondering if anything is in the

122
00:10:35,170 --> 00:10:41,410
works to improve drag and drop interoperability
between Web apps. So A couple of years ago

123
00:10:41,410 --> 00:10:48,250
we had the ability to do file drag and drop
in HTML5 and it was fantastic and I would

124
00:10:48,250 --> 00:10:53,190
love to see sort of the next evolution so
I could, for instance, be in Gmail and just

125
00:10:53,190 --> 00:10:57,930
drag an attachment out of a message over to
another application that can do something

126
00:10:57,930 --> 00:11:02,700
with that file and have that application be
able to sort of interact with Gmail to pull

127
00:11:02,700 --> 00:11:06,750
in the information it needs and do something,
or vice versa, drag out of an application

128
00:11:06,750 --> 00:11:11,620
on to a Gmail, et cetera.
>>Alex Komoroske: So that's a great use case

129
00:11:11,620 --> 00:11:15,709
there.
And there isn't exactly precisely a standard

130
00:11:15,709 --> 00:11:19,080
respect being developed to do precisely what
you're asking for, but something that does

131
00:11:19,080 --> 00:11:23,420
something sort of similar is Web Intents,
which is a spec that we're driving that allows

132
00:11:23,420 --> 00:11:28,100
applications to say I have an attach or whatever
and allow the users to pick which application

133
00:11:28,100 --> 00:11:32,529
they would like to sort of service that request
with. So theoretically you could have a loose

134
00:11:32,529 --> 00:11:36,620
coupling between Gmail and any other Web app
that would want to view those images or what

135
00:11:36,620 --> 00:11:40,360
you have.
But that's a good point that users are familiar

136
00:11:40,360 --> 00:11:43,700
with drag and drop and it makes sense to be
able to drag and drop these things between

137
00:11:43,700 --> 00:11:49,290
tabs, but that's not something that's currently
on the roadmap.

138
00:11:49,290 --> 00:11:52,649
>>Erik Kay: Yeah. I just want to emphasize
that last point, is loose coupling.

139
00:11:52,649 --> 00:11:57,800
So Web Intents is another one of these really
exciting Web technologies that I think is

140
00:11:57,800 --> 00:12:03,079
going to change the Web in a year. That you're
going to look and say, oh, my God, how did

141
00:12:03,079 --> 00:12:09,560
we interact without this? Because the idea
is that now Gmail can interact with a whole

142
00:12:09,560 --> 00:12:13,779
host of Web apps that it knows nothing about.
It didn't have to be performed with the knowledge

143
00:12:13,779 --> 00:12:19,290
that Oh, I want to save this attachment to
Dropbox or G Drive or whatever else or that

144
00:12:19,290 --> 00:12:25,279
I want to share this picture with Twitter
or Google+ or whatever else. That it's up

145
00:12:25,279 --> 00:12:30,620
to you in the apps that are provided. And
just that fact that we can now have these

146
00:12:30,620 --> 00:12:34,260
websites interoperate without having to hard
code relationships between them I think is

147
00:12:34,260 --> 00:12:39,279
going to be a game changer.
>>Jeff Chang: Cool. Any other megaphone questions?

148
00:12:39,279 --> 00:12:45,110
All right. Let's take one from the Google
moderator page.

149
00:12:45,110 --> 00:12:49,209
So offline it's pretty important for the Chrome
OS story. What features are missing from the

150
00:12:49,209 --> 00:12:51,260
Web platform that would help drive offline
application uses?

151
00:12:51,260 --> 00:12:58,180
>>Alex Komoroske: I'll take a stab at this
one. There already are a suite of technologies

152
00:12:58,180 --> 00:13:04,250
in the Web platform that allow you to do offline
things. You've got things like Local Storage,

153
00:13:04,250 --> 00:13:11,250
you have app cache, Index DB and others. They
aren't necessarily a joy to use right now,

154
00:13:11,570 --> 00:13:15,660
but they do exist as alternatives to build
upon. The file API is a great -- another great

155
00:13:15,660 --> 00:13:17,910
example.
But I would argue actually that the way to

156
00:13:17,910 --> 00:13:23,820
think about really driving offline application
usage is the way you develop your applications.

157
00:13:23,820 --> 00:13:28,079
So if you develop your application with an
always on server -- always connected through

158
00:13:28,079 --> 00:13:33,329
a server mindset, you're going to approach
it in certain ways and architect your app

159
00:13:33,329 --> 00:13:37,740
in certain ways. And then when you try to
layer on offline it can be pretty challenging

160
00:13:37,740 --> 00:13:42,320
because you don't have that server connection
all the time. So actually orienting yourself

161
00:13:42,320 --> 00:13:46,519
as a developer and saying I'm going to start
at the beginning working in this world where

162
00:13:46,519 --> 00:13:50,810
I don't know if I have internet connection,
it sort of forces you actually to pivot your

163
00:13:50,810 --> 00:13:53,240
thinking and to design your apps in a different
way.

164
00:13:53,240 --> 00:13:58,339
And that's a great thing about the new -- the
next evolution of Chrome apps is actually

165
00:13:58,339 --> 00:14:03,100
they encourage you as a developer to start
from this world where you are sort of offline

166
00:14:03,100 --> 00:14:08,029
by default, and connecting to the server is
almost an exception. So that really orients

167
00:14:08,029 --> 00:14:12,850
you to sort of the architecture app in the
way that really works for offline.

168
00:14:12,850 --> 00:14:19,500
>>Erik Kay: Right. So thanks for the shout-out
to the Chrome apps, but the -- we really want

169
00:14:19,500 --> 00:14:22,250
to emphasize that this is one of these key
architectural things that we are building

170
00:14:22,250 --> 00:14:26,230
in from the beginning for Chrome apps is to
say that apps should be written to be offline

171
00:14:26,230 --> 00:14:31,130
by default and we're doing a lot of things
built in to them to make it possible to make

172
00:14:31,130 --> 00:14:36,540
it easy for you to not get -- you know, get
your app into a bad state.

173
00:14:36,540 --> 00:14:40,790
One of the interesting things about offline
is people sort of get hung up on, you know,

174
00:14:40,790 --> 00:14:45,120
Oh, well, I've got connectivity everywhere.
Why do we need offline?

175
00:14:45,120 --> 00:14:52,120
And it's because offline isn't such a straightforward
thing. It's not a question of am I on an airplane

176
00:14:52,800 --> 00:14:58,230
with no connectivity? It's, Oh, well, sometimes
I've got spotty connectivity on my cell network

177
00:14:58,230 --> 00:15:05,050
or other times I'm at a trade show with 5,000
people all using the same Wi-Fi, you know,

178
00:15:05,050 --> 00:15:12,050
connection or other times I'm at a hotel with
a captive proxy or, you know -- there's -- offline

179
00:15:14,110 --> 00:15:20,389
is -- has a wide spectrum actually, and making
your apps that is resistant, resilient to

180
00:15:20,389 --> 00:15:25,769
these network conditions takes a little bit
of forethought. You have to build app, assume

181
00:15:25,769 --> 00:15:30,690
that it's offline and basically you're operating
on local data and syncing with the server.

182
00:15:30,690 --> 00:15:37,010
And all these features that Alex was talking
about with local storage, operating on that

183
00:15:37,010 --> 00:15:43,480
local data, having your code running locally
to begin with and then synchronizing the server

184
00:15:43,480 --> 00:15:48,050
and as you get network connectivity is sort
of the key to making offline work.

185
00:15:48,050 --> 00:15:55,050
>>Jeff Chang: All right. The computer that
was projecting the URL for the questions just

186
00:15:55,899 --> 00:16:02,410
died and won't start up. So we're going to
try to replace that, but hopefully we have

187
00:16:02,410 --> 00:16:07,970
a pretty good queue of Google moderator questions
there and audience questions, so let's keep

188
00:16:07,970 --> 00:16:11,130
going.
>>> Morning. So Chrome is a leader of the

189
00:16:11,130 --> 00:16:17,370
HTML5 standard, no doubt. I was curious on
the roadmap for the mobile Android version

190
00:16:17,370 --> 00:16:23,190
of Chrome, when that would kind of catch up
to the current platform. Specifically in my

191
00:16:23,190 --> 00:16:29,550
case for the WebGL implementation, being that
that's super hard in Tegra and Intel chipsets,

192
00:16:29,550 --> 00:16:33,070
but I just wondered if it was on the roadmap
and where that might fall.

193
00:16:33,070 --> 00:16:35,910
>>Ian Ellison-Taylor: Is anyone from that
team here?

194
00:16:35,910 --> 00:16:39,190
[ Laughter ]
>>Ian Ellison-Taylor: Oh, is there someone

195
00:16:39,190 --> 00:16:43,889
in the back? Oh, yes. Oh, Mrs. Smith, good
Lord!

196
00:16:43,889 --> 00:16:48,310
Yes, Grace, come down and maybe answer this
question, otherwise I'll make up something

197
00:16:48,310 --> 00:16:53,260
like it will be there next week, maybe Tuesday.
>>> Yeah. [Indiscernible] is also here.

198
00:16:53,260 --> 00:16:58,829
So WebGL we are under development behind the
flags. There's a performance issue that you

199
00:16:58,829 --> 00:17:05,829
just mentioned and then there's a potential
DOS attack. So we try to work with like OEM

200
00:17:06,490 --> 00:17:11,169
device drivers to try to address these problems.
>>Ian Ellison-Taylor: The high level strategy,

201
00:17:11,169 --> 00:17:16,539
of course, is that all these features end
up on mobile. There's implementation issues,

202
00:17:16,539 --> 00:17:23,539
and also recognizing that the unique power
management requirements make it a little bit

203
00:17:23,689 --> 00:17:28,259
tricky, but generally when we do new features
in the Web platform we're thinking about the

204
00:17:28,259 --> 00:17:33,399
mobile scenarios. Almost -- I would say first
and foremost generally. We worry a little

205
00:17:33,399 --> 00:17:37,669
bit less about the desktop because that's
an easier scenario. So pretty much everything.

206
00:17:37,669 --> 00:17:42,729
I can't think of anything off the top of my
head that we're not thinking about being in

207
00:17:42,729 --> 00:17:49,470
mobile sooner or later.
So hopefully we'll -- that lag between desktop

208
00:17:49,470 --> 00:17:56,470
and mobile will get shorter and shorter.
>>Alex Komoroske: So there's also -- there's

209
00:17:57,720 --> 00:18:01,429
a little bit of this temporary lag, but the
fact that Chrome for Android is relatively

210
00:18:01,429 --> 00:18:05,059
new. So we're still going through and making
sure we get all those pieces that we worked

211
00:18:05,059 --> 00:18:11,019
on to make Chrome for Android work back into
Chrome. So that process takes a little bit

212
00:18:11,019 --> 00:18:16,109
of time, which is why it takes a little bit
for us to catch up to where desktop Chrome

213
00:18:16,109 --> 00:18:19,739
is right now, but that's a temporary problem.
So there's a long-term problem of some of

214
00:18:19,739 --> 00:18:23,869
these features that you have to make sure
you design it in the mobile -- to work well

215
00:18:23,869 --> 00:18:27,330
in mobile use case and other ones that it
just takes awhile for us to catch up to the

216
00:18:27,330 --> 00:18:34,330
desktop.
>>Jeff Chang: Okay. Next question from the

217
00:18:35,100 --> 00:18:40,450
moderator page is, OSX 10.8 has a power nap
feature that keeps various bits of a user's

218
00:18:40,450 --> 00:18:47,009
data synced while the machine is suspended,
email, et cetera. Any plans for such a feature

219
00:18:47,009 --> 00:18:54,009
in Chrome OS?
Felix, do you want to try to take this one?

220
00:18:57,419 --> 00:18:59,840
I guess, you can look at it on that screen,
too.

221
00:18:59,840 --> 00:19:04,519
Since that machine is broken anyway, maybe
we can get that screen mirrored on that screen.

222
00:19:04,519 --> 00:19:10,960
>>Felix Lin: So this is definitely a feature
that we're looking at. I don't know exactly

223
00:19:10,960 --> 00:19:17,960
when we'll have this feature in Chrome OS.
Certainly as we work with Intel and other

224
00:19:18,419 --> 00:19:22,399
hardware partners, these types of capabilities
are much easier for us to implement because

225
00:19:22,399 --> 00:19:26,879
we have full knowledge of the hardware that's
running in these systems and we can actually

226
00:19:26,879 --> 00:19:30,259
design them.
The great thing about Chrome OS, though, is

227
00:19:30,259 --> 00:19:36,419
that you could buy a machine today and if
that machine has the capability at all to

228
00:19:36,419 --> 00:19:41,019
make this possible, we'll roll out that feature
and you will get it automatically.

229
00:19:41,019 --> 00:19:48,019
So a lot of these features, when we spec the
minimum requirements for Chrome OS boxes,

230
00:19:48,159 --> 00:19:52,249
a lot of what we're doing is looking forward
and making sure that we've got the kind of

231
00:19:52,249 --> 00:19:55,999
head room that we need to be able to add new
features, new capabilities, even though what

232
00:19:55,999 --> 00:20:00,519
we release on any given day may not include
this full set of capabilities.

233
00:20:00,519 --> 00:20:06,720
>>Alex Komoroske: I should point out as well,
this basic feature, this basic request, makes

234
00:20:06,720 --> 00:20:10,529
sense in a lot of different scenarios. It
makes sense, especially on mobile as well,

235
00:20:10,529 --> 00:20:15,679
where you don't know, you don't want to constantly
have your radio powered up. There's also been,

236
00:20:15,679 --> 00:20:22,200
with these event pages. Generally we're moving
towards a model where it's possible for Web

237
00:20:22,200 --> 00:20:26,489
apps to sort of allow Chrome to wake them
up, do a little bit of work, put them back

238
00:20:26,489 --> 00:20:31,570
to sleep in response to events. That's really
basically the core of what power nap is doing

239
00:20:31,570 --> 00:20:35,210
as well. So we are looking into this on multiple
fronts.

240
00:20:35,210 --> 00:20:40,739
So while Jeff is figuring that out, I'll move
on to the next one.

241
00:20:40,739 --> 00:20:47,739
Okay. Will I ever be able to run Chrome OS
on a tablet, maybe even a Nexus 7 tablet?

242
00:20:49,779 --> 00:20:56,779
>>Felix Lin: That's a great question.
[ Laughter ]

243
00:20:57,070 --> 00:21:02,989
>>Felix Lin: Um, Chrome OS was really designed
to run on a variety of form factors, so there's

244
00:21:02,989 --> 00:21:08,749
nothing about Chrome OS that says that we
can't run on a tablet or pick your device

245
00:21:08,749 --> 00:21:14,119
form factor. The first device that we focused
on, because of the complexity of use case,

246
00:21:14,119 --> 00:21:21,119
is the calm shell where we just bring full
capabilities of Chrome to bear. You know,

247
00:21:21,359 --> 00:21:27,450
today, Google's OS for tablets is Android
and we are able to bring all of the capabilities

248
00:21:27,450 --> 00:21:34,450
of Chrome to Android for Jelly Bean and Ice
Cream Sandwich. We're working on creating

249
00:21:35,639 --> 00:21:40,769
a completely seamless, coherent experience
across all devices, regardless of whether

250
00:21:40,769 --> 00:21:43,470
the underlying OS happens to be Android or
Chrome OS.

251
00:21:43,470 --> 00:21:49,889
So from the user standpoint, whether you are
buying content from the play store or whether

252
00:21:49,889 --> 00:21:54,749
you are running an app, our goal is to make
it such that you don't have to worry about

253
00:21:54,749 --> 00:22:00,320
whether it's actually Android or Chrome OS
running on that tablet; we want that to work.

254
00:22:00,320 --> 00:22:07,320
>>Jeff Chang: Next. How will the two operating
systems, Android and Chrome OS, eventually

255
00:22:08,809 --> 00:22:14,229
converge? Yeah, we get asked -- we've been
asked about this in the past, you know, one

256
00:22:14,229 --> 00:22:19,970
thing to keep in mind is that Chrome OS has
the goal of designing an end-to-end computing

257
00:22:19,970 --> 00:22:25,519
experience that -- that embodies kind of the
same core principles as Chrome does, the security,

258
00:22:25,519 --> 00:22:30,789
and, you know, over time we've been thinking
about what parts of the technologies between

259
00:22:30,789 --> 00:22:35,359
those two makes sense to integrate, right?
We are very happy to say that Chrome for Android

260
00:22:35,359 --> 00:22:39,399
came out of beta this week, so Chrome for
Android is now stable.

261
00:22:39,399 --> 00:22:42,849
And maybe Felix you have some other comments
on this or --

262
00:22:42,849 --> 00:22:47,479
>>Erik Kay: Well, I can add a few things.
I mean, one thing is that you'll see, I think

263
00:22:47,479 --> 00:22:53,470
you are going to see more and more convergence
over time. You know, we -- first off just

264
00:22:53,470 --> 00:23:00,099
bringing Chrome, you know, to Android was
sort of the first big step. But there are

265
00:23:00,099 --> 00:23:05,769
many places where we -- where we can integrate
more. First off, getting the same set of apps

266
00:23:05,769 --> 00:23:12,369
running, using the same cloud infrastructure.
But I think the opportunities doing some of

267
00:23:12,369 --> 00:23:18,169
the -- I think the Chrome-to-phone stuff that
we had before, we're looking to -- to have

268
00:23:18,169 --> 00:23:21,639
-- to leverage a lot of the same infrastructure
and to have more and more integration over

269
00:23:21,639 --> 00:23:28,149
time.
>>Jeff Chang: All right. Any other microphone

270
00:23:28,149 --> 00:23:33,340
questions? Don't be shy.
Any plans for a messaging platform inside

271
00:23:33,340 --> 00:23:40,200
of Chrome or Chrome OS, similar to C2DM or
iOS notifications, which I believe are coming

272
00:23:40,200 --> 00:23:46,700
to the desktop?
>>Erik Kay: So we actually do have some -- effectively

273
00:23:46,700 --> 00:23:52,349
with the sync we have a notification system
built into Chrome and into Chrome OS and it

274
00:23:52,349 --> 00:23:58,210
turns out that behind the scenes a lot of
the, you know, infrastructure is very similar

275
00:23:58,210 --> 00:24:02,710
and, again, as I said, that we're looking
to unify some of the basic infrastructure

276
00:24:02,710 --> 00:24:07,739
that we share across Android and Chrome. I
would expect to see our messaging systems

277
00:24:07,739 --> 00:24:13,919
converge as well.
>>Alex Komoroske: You can imagine the solution

278
00:24:13,919 --> 00:24:17,159
wouldn't just have to be about messaging,
per se. It could be about notifications, so

279
00:24:17,159 --> 00:24:20,950
different apps could decide different things
that were worthwhile to do. In fact, actually

280
00:24:20,950 --> 00:24:26,580
in the meet the Web platform video series
we showed off a mock of what that could look

281
00:24:26,580 --> 00:24:30,149
like.
>>Jeff Chang: Cool. All right, audience question.

282
00:24:30,149 --> 00:24:35,669
>>> A question about Chrome apps. What's the
plan to get Chrome apps for Chrome on Android,

283
00:24:35,669 --> 00:24:40,989
and how is it going to work? Is it going to
the Chrome Web store, it's going to a (indiscernible)

284
00:24:40,989 --> 00:24:44,879
to play?
>>Erik Kay: Okay. Let's see, how do we start

285
00:24:44,879 --> 00:24:50,269
with this? First off, you know, it's a common
question that we get about what's our plan

286
00:24:50,269 --> 00:24:55,769
for getting, you know, Chrome apps to mobile.
So you heard Sundar say at the keynote, I

287
00:24:55,769 --> 00:25:01,299
said the other day at the apps talk we are
intending to get Chrome apps to mobile, basically

288
00:25:01,299 --> 00:25:06,169
everywhere that we have Chrome.
Now how are we going to do that? The details

289
00:25:06,169 --> 00:25:12,049
of that? The timing of that? You know, it's
too early to say. I can say that we're looking

290
00:25:12,049 --> 00:25:16,690
for your feedback. We want to know from you
what you want. What are the most important

291
00:25:16,690 --> 00:25:23,109
features that you want to see brought to mobile?
And just one last little plug, we are hiring.

292
00:25:23,109 --> 00:25:26,299
[ Laughter ]
>>Erik Kay: So if you want to help make this

293
00:25:26,299 --> 00:25:28,119
happen, you know --
>>> Cool.

294
00:25:28,119 --> 00:25:34,389
>>Erik Kay: Exactly.
>>Jeff Chang: Cool, another audience question.

295
00:25:34,389 --> 00:25:38,599
>>> Also about Chrome apps, you launched them
from within Chrome but with a new version

296
00:25:38,599 --> 00:25:42,619
that will act a lot like they are native to
the platform. Any thoughts about setting them

297
00:25:42,619 --> 00:25:45,409
up so you would be able to launch them as
if they were a native app?

298
00:25:45,409 --> 00:25:50,849
>>Erik Kay: Absolutely. That's one of the
key features of the next evolution of Chrome

299
00:25:50,849 --> 00:25:55,049
apps here is that we are pulling them outside
of the browser. It's not just that they have

300
00:25:55,049 --> 00:25:59,479
standalone Windows; it's that the way that
you launch them will be without even necessarily

301
00:25:59,479 --> 00:26:04,359
having to have Chrome running. So basically
you will just launch them from the native

302
00:26:04,359 --> 00:26:11,359
desktop.
>>> When will we have private key SSH?

303
00:26:12,779 --> 00:26:19,779
>>Erik Kay: Right. So I know that the engineers
working on that pretty -- on the SSH thing

304
00:26:20,849 --> 00:26:26,249
for Chrome OS is a top feature request. So
I know that it's going to come. I don't know

305
00:26:26,249 --> 00:26:33,249
what the timeline is.
>>Jeff Chang: All right. Looks like we've

306
00:26:34,940 --> 00:26:40,789
got someone walking up to the microphone.
Go ahead.

307
00:26:40,789 --> 00:26:45,009
>>> Why was the change to Aura made? I know
when the Chrome was initially announced, the

308
00:26:45,009 --> 00:26:51,659
launch video mentioned that you didn't even
have a desktop background. And the change

309
00:26:51,659 --> 00:26:57,690
on -- to Aura in the newer version of Chrome
OS did make it a lot more like a desktop operating

310
00:26:57,690 --> 00:27:00,759
system. What was the decision, why did that
happen?

311
00:27:00,759 --> 00:27:07,129
>>Ian Ellison-Taylor: It was 99% user feedback.
I mean -- I think when we launched Chrome

312
00:27:07,129 --> 00:27:13,710
OS in the particular UI model, it was something
of an experiment. It was something that no

313
00:27:13,710 --> 00:27:19,940
one had ever done before. We said that we
were going to update it based on user feedback.

314
00:27:19,940 --> 00:27:24,609
And obviously I think Sundar made the point
about performance improvements and feature

315
00:27:24,609 --> 00:27:28,279
improvements, but people just gave us their
feedback that they wanted it to be a little

316
00:27:28,279 --> 00:27:35,279
bit more like a -- you know, a "traditional"
OS and particularly I think that model, I

317
00:27:36,219 --> 00:27:39,989
mean this is just for me personally -- I will
let Felix talk a little bit. For me personally

318
00:27:39,989 --> 00:27:46,989
the tab model I think worked really well on
the smaller screen. But once you get to sort

319
00:27:47,399 --> 00:27:53,789
of Chromebox style and you're on a large monitor,
that's -- that single large window gets a

320
00:27:53,789 --> 00:27:59,059
little weird, you know. It's like you get
a huge crick in your neck going from one side

321
00:27:59,059 --> 00:28:04,019
of the screen to the other. So being able
to like open multiple windows, switch between

322
00:28:04,019 --> 00:28:07,830
-- then multi-tasking, now I've got three
or four things going on at once, I want a

323
00:28:07,830 --> 00:28:14,830
quick way to switch between them. There's
just a use case that seemed pretty important.

324
00:28:14,999 --> 00:28:20,450
And that you can very easily configure it
so it behaves like it used to if you don't

325
00:28:20,450 --> 00:28:24,309
like that. Then you just run everything full
screen, keep everything in a tab. So if you're

326
00:28:24,309 --> 00:28:29,469
in that model, you don't really lose anything,
but if you want something a little bit more

327
00:28:29,469 --> 00:28:32,570
traditional with multiple windows, you can
do that, too.

328
00:28:32,570 --> 00:28:37,749
>>Felix Lin: I think the biggest benefit of
having a windowing system is that people can

329
00:28:37,749 --> 00:28:42,129
do more than one thing at one time, right?
So a very, very common use case is writing

330
00:28:42,129 --> 00:28:45,809
an email and checking your calendar, if you
have to flip between tabs and you only have

331
00:28:45,809 --> 00:28:52,460
one pane, it's a pretty miserable experience.
Also, as -- as Ian was mentioning, you know

332
00:28:52,460 --> 00:28:58,190
with the Chromebox we are now able to deliver
an experience on dual 30-inch monitors, if

333
00:28:58,190 --> 00:29:04,729
you have got a huge desktop having one full-screen
window is not a great use of space.

334
00:29:04,729 --> 00:29:10,009
>>Erik Kay: Also, one other kind of funny
thing that we discovered by having a full

335
00:29:10,009 --> 00:29:16,599
screen browser, which is there's sort of an
interesting psychological effect for users.

336
00:29:16,599 --> 00:29:21,570
So users have sort of preconceived notions
of what a browser can and can't do, it turns

337
00:29:21,570 --> 00:29:27,460
out. And so they see tabs, they see an address
bar, they see a back button and they immediately

338
00:29:27,460 --> 00:29:31,690
assume, oh, well it's, you know, it's only
a Web page, it can't do everything an app

339
00:29:31,690 --> 00:29:37,529
can do. Or it certainly can't run offline,
so there's sort of these interesting things

340
00:29:37,529 --> 00:29:42,700
that sort of get in the way just by having
it there. And as we move to more focus on

341
00:29:42,700 --> 00:29:47,739
apps within Chrome OS and wanting to bring
apps fronts and center, it was important to

342
00:29:47,739 --> 00:29:50,679
pull those out of the browser and really give
them their own windows.

343
00:29:50,679 --> 00:29:53,869
>>Ian Ellison-Taylor: That actually reminds
me since I tease this on Twitter about there

344
00:29:53,869 --> 00:29:59,019
being an Easter egg. It reminds me of one
of them. So Kan, if you saw the keynote yesterday,

345
00:29:59,019 --> 00:30:03,589
Kan did the sort of the spinning window thing,
so that's in Chrome OS. So that wasn't just

346
00:30:03,589 --> 00:30:08,729
something we rigged up for the keynote.
You can -- it shows the power of the window

347
00:30:08,729 --> 00:30:14,059
manager, so one of the keys is very obvious.
>>> Control alt and then refresh button or

348
00:30:14,059 --> 00:30:15,739
something like that?
>>Ian Ellison-Taylor: Sorry, what was that?

349
00:30:15,739 --> 00:30:18,379
>>> Isn't it like control alt and then the
refresh button?

350
00:30:18,379 --> 00:30:20,309
>>Ian Ellison-Taylor: It may or may not be
that.

351
00:30:20,309 --> 00:30:22,499
[ Laughter ]
>>> I have done it before.

352
00:30:22,499 --> 00:30:23,859
>>Ian Ellison-Taylor:.
[ Laughter ]

353
00:30:23,859 --> 00:30:30,639
You give it away. But there's another -- another
Easter egg that was in the keynote as well.

354
00:30:30,639 --> 00:30:35,139
I don't know if anyone spotted that one, but
I'll maybe talk about that later, if the questions

355
00:30:35,139 --> 00:30:37,409
are good enough.
[ Laughter ]

356
00:30:37,409 --> 00:30:44,409
>>Jeff Chang: Go ahead.
>>> Yeah, so the current Chromebook runs on

357
00:30:46,259 --> 00:30:53,259
Intel or Celeron, but all of your Android
devices currently run on ARM, video, Qualcomm,

358
00:30:54,149 --> 00:30:58,269
TI, respectively, if you're ever going to
get to a point in the future where you are

359
00:30:58,269 --> 00:31:02,359
going to be able to dual boot a device, whether
it be a tablet or a laptop, desktop, or even

360
00:31:02,359 --> 00:31:08,070
a smart phone down the road, into either Chrome
OS or Android, you have to get on the same

361
00:31:08,070 --> 00:31:14,709
CPU hardware platform, is there anything inherent
that makes it difficult for Chrome OS to run

362
00:31:14,709 --> 00:31:19,179
on say an ARM chip or is this just a matter
of timing that this is basically something

363
00:31:19,179 --> 00:31:23,349
that you should expect at some undescript
point down the road?

364
00:31:23,349 --> 00:31:29,700
>>Felix Lin: I think -- we can't talk about
any future products obviously. But there's

365
00:31:29,700 --> 00:31:36,109
nothing about Chrome OS that limits it to
a particular processor architecture. Completely

366
00:31:36,109 --> 00:31:43,109
open source. In fact, many of the ARM vendors
have brought Chrome OS up on different ARM

367
00:31:43,459 --> 00:31:50,459
SOCs, and it's really a matter of, you know,
timing and price point and, you know, a variety

368
00:31:50,950 --> 00:31:56,959
of other things with respect to, you know,
packaging a product and bringing it to commercial

369
00:31:56,959 --> 00:32:03,959
release. So I don't -- you know, basically
there's nothing holding anybody back. Other

370
00:32:04,619 --> 00:32:08,820
than, you know, commitment to ship the product.
>>Erik Kay: There is one thing that I will

371
00:32:08,820 --> 00:32:15,820
toss out. Which is it's not a limitation of
Chrome OS. It's more just sort of what our

372
00:32:16,219 --> 00:32:20,279
chip sets have been building -- what the ARM
chip sets and manufacturers have been building,

373
00:32:20,279 --> 00:32:27,099
so their main focus is on phones and now tablets,
and what's interesting is that phones and

374
00:32:27,099 --> 00:32:34,019
tablets have smaller screens. And it turns
out that -- that the thing that you need that's

375
00:32:34,019 --> 00:32:38,559
one of the biggest performance bottlenecks
on computers in general is memory bandwidth

376
00:32:38,559 --> 00:32:42,849
between the CPU and the display architecture.
And the bigger the screen, the more memory

377
00:32:42,849 --> 00:32:47,869
bandwidth that you need. Turns outs the smaller
the screen, the less you need, right, you

378
00:32:47,869 --> 00:32:53,719
know, conversely. So it's an optimization
that you can do to make it use less power,

379
00:32:53,719 --> 00:32:57,519
to be cheaper and that sort of a thing. So
many of the ARM chip sets are designed to

380
00:32:57,519 --> 00:33:01,869
really be only efficient up to a certain screen
size. So it turns out, this is one of the

381
00:33:01,869 --> 00:33:08,440
things that held ARM back getting to the desktop,
bigger monitors, you know, hi-res. But now

382
00:33:08,440 --> 00:33:13,080
as tablets have had -- now get an increased
density, increased size, increased number

383
00:33:13,080 --> 00:33:17,820
of pixels, they've had to solve those same
memory bandwidth problems. So I think we are

384
00:33:17,820 --> 00:33:23,899
right in the cusp of being able to see really
awesome desktop and laptop ARM form factors

385
00:33:23,899 --> 00:33:27,830
coming and you will see it probably for a
variety of systems.

386
00:33:27,830 --> 00:33:34,830
>>Jeff Chang: Thank you, next question. The
moderator page. Speaking of sync, any plan

387
00:33:35,389 --> 00:33:39,659
for app syncing as well, with an API that
would allow apps to sync their data as well?

388
00:33:39,659 --> 00:33:46,659
>>Erik Kay: So, yes. That already exists.
There's an extension API people can start

389
00:33:48,320 --> 00:33:55,320
playing with today, storage API, Chrome.storage.sync,
basically it's a simple key value store so

390
00:33:57,989 --> 00:34:02,639
you can sort of maintain your state and your
preferences and that sort of a thing. It's

391
00:34:02,639 --> 00:34:08,970
an easy way to sort of move app and extension
settings from -- from machine to machine.

392
00:34:08,970 --> 00:34:15,329
We have much more planned for doing more cloud-based
storage and making APIs available to apps.

393
00:34:15,329 --> 00:34:21,409
>>Ian Ellison-Taylor: And obviously there's
a quick plug for our colleagues on drive that

394
00:34:21,409 --> 00:34:26,369
for applications to be able to store their
application, the user data, that's obviously

395
00:34:26,369 --> 00:34:31,659
one of the goals for drive and getting drive
onto lots of devices. So you get sort of both

396
00:34:31,659 --> 00:34:36,579
-- both parts of the equation, your settings
and your data that can travel with you. So

397
00:34:36,579 --> 00:34:40,539
sync is a huge part of the overall strategy
about what we think is really interesting

398
00:34:40,539 --> 00:34:44,260
about having lots of devices, but a Chrome
experience on one of them. So I think it's

399
00:34:44,260 --> 00:34:51,149
pretty key.
>>Jeff Chang: Okay. So regarding Chrome OS

400
00:34:51,149 --> 00:34:54,399
and the enterprise, what plans do you have
for enhancing the management and performance

401
00:34:54,399 --> 00:35:01,399
of Cloud Print, particularly around management
of over 1,000 printers at a given company?

402
00:35:07,039 --> 00:35:12,499
I know that in Chrome, we don't usually talk
about version numbers, but Chrome 20 stable

403
00:35:12,499 --> 00:35:16,710
-- just went to the stable channel this past
week.

404
00:35:16,710 --> 00:35:19,019
Actually, I take that back. I'm mixing up
my versions.

405
00:35:19,019 --> 00:35:22,809
We are always managing multiple releases at
the same time, so we have four different channels,

406
00:35:22,809 --> 00:35:26,970
I'm actually thinking about 21, 21 I know
has Cloud Printing more directly integrated

407
00:35:26,970 --> 00:35:30,980
into the Chrome's print dialogue itself, so
it's easier to find your printers more easily

408
00:35:30,980 --> 00:35:36,019
when you are printing. And know that that
dialogue has a search box that you can search

409
00:35:36,019 --> 00:35:41,000
across all of the printers that are available
to you. So I hope that's -- that the UI team

410
00:35:41,000 --> 00:35:46,960
has considered the issue of -- of when you
have lots of printers there, although I think

411
00:35:46,960 --> 00:35:49,329
this question might be around more from the
enterprise.

412
00:35:49,329 --> 00:35:52,579
>>Ian Ellison-Taylor: Yeah. Actually, I wonder
if any here -- if they have any from Cloud

413
00:35:52,579 --> 00:35:57,069
Print here. They have a session today, so
if there's no one from the cloud print team

414
00:35:57,069 --> 00:36:01,049
right here, definitely go to that session
and ask them if they have done a lot of work

415
00:36:01,049 --> 00:36:04,819
there. So they can probably answer the question.
>>Jeff Chang: Cloud Print is actually the

416
00:36:04,819 --> 00:36:09,700
last session in this room today, I think.
>>Erik Kay: Actually, just so you know, I

417
00:36:09,700 --> 00:36:13,789
mean one of the big strengths that we've seen
with -- with Chromebooks and Chrome OS has

418
00:36:13,789 --> 00:36:20,789
been enterprise management. This ability to,
you know, drop in, you know, a thousand new

419
00:36:21,130 --> 00:36:26,710
devices and just hand them out. And you not
have to image them and configure them on a

420
00:36:26,710 --> 00:36:32,130
per user basis and deploy a whole bunch of
stuff to them is one of the key strengths

421
00:36:32,130 --> 00:36:35,359
we see of Chrome OS.
And so we've been investing pretty heavily

422
00:36:35,359 --> 00:36:40,190
in the enterprise management console to really
make that better. So if there's any limitations

423
00:36:40,190 --> 00:36:47,180
on that, we want to hear about it. File bugs,
you know, talk to us. Because we think that

424
00:36:47,180 --> 00:36:54,180
this is an area that we can really own.
>>Jeff Chang: Yeah, we have an audience question.

425
00:36:56,000 --> 00:36:59,859
>>> So I came in a little bit late, I don't
know if you addressed this yet, but I was

426
00:36:59,859 --> 00:37:04,630
curious about what's the state of eating your
own dogfood within Google? If you could talk

427
00:37:04,630 --> 00:37:10,200
about the transition of getting people to
be full-time Chromebook users instead of regular

428
00:37:10,200 --> 00:37:15,609
desktop users. Are people doing that? How
successful is it? What kind of experience

429
00:37:15,609 --> 00:37:18,670
have you had?
>>Jeff Chang: Sure, yeah. The question is

430
00:37:18,670 --> 00:37:22,430
asking, you know, about the phrase eating
our own dogfood, which means using our own

431
00:37:22,430 --> 00:37:27,990
products as they are being developed at Google.
I can say for sure for Chrome browser, I definitely

432
00:37:27,990 --> 00:37:33,089
eat my own dogfood. I run Canary, which is
the nightly auto update, built side-by-side

433
00:37:33,089 --> 00:37:40,089
with the beta installation on my machine.
So I actually use Canary every day, so I can

434
00:37:40,460 --> 00:37:46,589
stay with the latest engineering. But I don't
recommend that to normal folks. It's painful

435
00:37:46,589 --> 00:37:50,510
at times.
And in terms of Chromebooks, I certainly carry

436
00:37:50,510 --> 00:37:55,039
around my Chromebook with me. I have it right
over there and I use it and it's really convenient

437
00:37:55,039 --> 00:37:59,920
when I'm going to meetings and stuff, especially
when I want to get out an email in like 60

438
00:37:59,920 --> 00:38:04,990
seconds or something. Open it up on my lid,
press the button and be able to fire off the

439
00:38:04,990 --> 00:38:09,690
email and close my lid within 30 seconds while,
you know, like my other Windows laptop might

440
00:38:09,690 --> 00:38:14,039
be churning away on the anti-virus thing for
like a minute because Google corporate makes

441
00:38:14,039 --> 00:38:20,380
us run anti-virus on them. So, yeah, we definitely
see that a lot around the office. But I do,

442
00:38:20,380 --> 00:38:26,180
you know, use multiple devices and multiple
operating systems. And for Canary on Windows,

443
00:38:26,180 --> 00:38:30,130
I run that, because I want to get the latest
code from our engineers as soon as possible.

444
00:38:30,130 --> 00:38:33,390
>>> Do you have anyone going cold turkey,
just Chrome OS exclusively?

445
00:38:33,390 --> 00:38:40,309
>>Felix Lin: I can tell you that the dogfooders
at Google who are using Chrome OS have skyrocketed

446
00:38:40,309 --> 00:38:45,960
since we released the latest Chromebooks running
on Intel Corp. You know the great thing about

447
00:38:45,960 --> 00:38:51,760
Google -- two things, right? We have access
to whatever computer we want. If you want

448
00:38:51,760 --> 00:38:56,490
a Macbook Air or Macbook Pro, whatever high-end
system you want, you can have it. If you want

449
00:38:56,490 --> 00:39:03,160
a Chromebook, you can have it. We don't force
anybody to dogfood Chrome OS, so everybody

450
00:39:03,160 --> 00:39:08,470
who is using Chrome OS uses it by choice,
and when you think about it, the fact that

451
00:39:08,470 --> 00:39:13,440
you see people, more and more Googlers who
have their pick of any hardware that they

452
00:39:13,440 --> 00:39:19,819
want walking around with Chromebooks, typically
which cost often a fraction of what they could

453
00:39:19,819 --> 00:39:26,819
be spending, it's pretty remarkable. I can
tell you that with the latest Chromeboxes

454
00:39:29,940 --> 00:39:36,940
and the latest Chromebooks, these devices
are just completely hassle free, battery life,

455
00:39:39,119 --> 00:39:46,119
power management, superb, you know, even the
-- the first generation Chromebook, just because

456
00:39:46,359 --> 00:39:51,279
of the fact that we have so many existing
customers on older hardware and the fact that

457
00:39:51,279 --> 00:39:58,279
we're constantly updating even older hardware
with newer releases of Chrome OS, you know,

458
00:39:58,410 --> 00:40:04,160
I switch devices continuously, and so yesterday
during a keynote when you saw Brian talk about

459
00:40:04,160 --> 00:40:08,750
the fact that, you know, he's got 7 or 8 different
machines and he just walks from one machine

460
00:40:08,750 --> 00:40:12,920
to the next, he doesn't carry a single machine
he has to worry about, you know, that is all

461
00:40:12,920 --> 00:40:19,920
possible because of Chrome and Chrome OS.
You know, when you're using a machine which

462
00:40:20,269 --> 00:40:25,869
is a year old and you pick it up one day,
and it's running 30% faster than the day before,

463
00:40:25,869 --> 00:40:30,980
because you've got the auto update pushed
to you, it's really noticeable, and users

464
00:40:30,980 --> 00:40:37,980
really love it, and so even today, even though
I've got, you know, you know, the latest Samsung

465
00:40:40,109 --> 00:40:45,309
Chromebook, when I switch to the device that
I've been using for over a year, I really

466
00:40:45,309 --> 00:40:49,049
don't notice much of a performance difference
for most of the things that I do. I'll notice

467
00:40:49,049 --> 00:40:55,589
some things for, you know, high-end video
and things like that, but the device is completely

468
00:40:55,589 --> 00:41:00,940
usable, it's just great.
>>Erik Kay: So let me give you another perspective.

469
00:41:00,940 --> 00:41:07,869
I do use my Chromebook exclusively as my laptop,
I have to use a different laptop, because

470
00:41:07,869 --> 00:41:12,599
in engineering we to test on a bunch of different
platforms, but I do live on my Chromebook,

471
00:41:12,599 --> 00:41:18,920
and it's pretty common now within Google especially
with the hardware, I'll say that the IT staff

472
00:41:18,920 --> 00:41:25,490
within Google, you know, loves it and they
want more people to switch over, as soon as

473
00:41:25,490 --> 00:41:32,490
they can, and Google -- Googlers are a really
demanding audience. It turns out that, as

474
00:41:33,099 --> 00:41:38,140
Felix said, they can use whatever hardware
they want, and -- and a lot of them are doing

475
00:41:38,140 --> 00:41:42,390
heavy-duty development tasks and that sort
of thing, and so making hardware that is going

476
00:41:42,390 --> 00:41:47,519
to be good enough for the majority of Googlers
to actually get their job done is a tall task,

477
00:41:47,519 --> 00:41:52,779
and the biggest bit of feedback that we heard
early on was that for Googlers the previous

478
00:41:52,779 --> 00:41:58,450
generation of hardware wasn't quite powerful
enough. And now the feedback that we've gotten

479
00:41:58,450 --> 00:42:04,240
from people, is like, wow, this is actually
-- this has crossed the line and it's great,

480
00:42:04,240 --> 00:42:10,220
it's easy, and totally what they want. Now,
they want more of course and so we're working

481
00:42:10,220 --> 00:42:16,190
to make -- build even more powerful machines
and a wider variety of form factors, and trust

482
00:42:16,190 --> 00:42:20,769
us when we say that Googlers are some of the
most demanding audience out there, and -- but

483
00:42:20,769 --> 00:42:25,210
the rate that they're growing and they're
selecting in and using it themselves is going

484
00:42:25,210 --> 00:42:28,009
through the roof.
>>> It is a great idea to have kind of your

485
00:42:28,009 --> 00:42:33,650
computer as like an appliance or kiosk, and
I feel very nervous if I have anything on

486
00:42:33,650 --> 00:42:38,210
a single machine, that is my only copy, I
like moving everything to the cloud, just

487
00:42:38,210 --> 00:42:43,019
being able to -- but I know that there's lots
of little, you know, dusty corners of our

488
00:42:43,019 --> 00:42:48,000
lives where they're not all, you know, able
to be pushed to the cloud on Chrome OS yet,

489
00:42:48,000 --> 00:42:51,029
so it's nice that you guys are kind of filling
in those holes.

490
00:42:51,029 --> 00:42:56,640
>>Ian Ellison-Taylor: That's a great point.
I'm the same way. Since I don't do development,

491
00:42:56,640 --> 00:43:02,609
I'm 99% -- 99.9% of my time is spent on a
Chromebook, and mostly that -- honestly it's

492
00:43:02,609 --> 00:43:09,309
about I'm old and I need a keyboard, I love
tablets, but I spend all my time in e-mail,

493
00:43:09,309 --> 00:43:13,769
I just need to be able to type on a real keyboard,
but I love the battery life, that sort of

494
00:43:13,769 --> 00:43:17,819
8, 9 hours, I can get through the day and
I don't have to carry the little power brick

495
00:43:17,819 --> 00:43:23,089
around, so the battery life thing is huge
for me when I'm running around campus. Another

496
00:43:23,089 --> 00:43:27,670
thing that's really nice about Google, and
I bounce between different offices, I'll often

497
00:43:27,670 --> 00:43:32,210
not carry a machine with me, and I'll go to
the other office, we have these little tech

498
00:43:32,210 --> 00:43:37,609
stop places and I can grab a Chromebook from
tech stop, I just log in, carry on from where

499
00:43:37,609 --> 00:43:41,720
I left off, and then I just hand it back at
the end of the day, and I just don't have

500
00:43:41,720 --> 00:43:45,720
to travel with anything, so when I'm going
through security, and, you know, just everything

501
00:43:45,720 --> 00:43:50,019
gets so much easier when I can just pick up
that machine, log in, carry on, hand it back

502
00:43:50,019 --> 00:43:51,980
and not worry, like what did I leave on that
machine?

503
00:43:51,980 --> 00:43:56,349
What was I doing?
Did I do anything weird today?

504
00:43:56,349 --> 00:44:01,440
So for me, that's a hugely important use case,
and I think we'll see more of that as time

505
00:44:01,440 --> 00:44:02,549
goes on.
>>> Thanks.

506
00:44:02,549 --> 00:44:06,079
>>Jeff Chang: Let's take a question from this
side.

507
00:44:06,079 --> 00:44:10,690
>>> My question is on moderator but it seems
to have dropped off. I just want to know about

508
00:44:10,690 --> 00:44:16,839
international availability of Chrome OS devices
particularly the new Samsung Chromebook, because

509
00:44:16,839 --> 00:44:23,650
I'm from New Zealand and, yeah, we just don't
have access to them there.

510
00:44:23,650 --> 00:44:29,480
>>Ian Ellison-Taylor: What's the international
access for Chromebooks, particularly the new

511
00:44:29,480 --> 00:44:35,759
one. Particularly New Zealand?
>>Felix Lin: So the new Chromebooks are currently

512
00:44:35,759 --> 00:44:41,759
available in US and UK. We're looking at getting
them certified in more countries as quickly

513
00:44:41,759 --> 00:44:48,759
as possible, but, you know, as with all things,
it's a matter of just figuring out where the

514
00:44:49,549 --> 00:44:54,700
demand is and how to role out in more countries
and get the certifications. You know, the

515
00:44:54,700 --> 00:45:01,220
demand for the new Chromebooks, i think, have
greatly exceeded the expectations and so,

516
00:45:01,220 --> 00:45:06,479
again, it's just a matter of time, but we're
working on getting it out there.

517
00:45:06,479 --> 00:45:10,410
>>> Okay, thanks.
>>Jeff Chang: All right. Back to this -- actually,

518
00:45:10,410 --> 00:45:17,029
I'll go ahead and let's do a couple of these.
At least one of these. How far is Web GL support

519
00:45:17,029 --> 00:45:22,430
for mobile versions of Chrome? I think we
already answered that earlier up at the microphone.

520
00:45:22,430 --> 00:45:26,819
Next question here is about Chrome on iOS.
So for you guys in here, we launched Chrome

521
00:45:26,819 --> 00:45:33,819
on iOS yesterday, we actually it's like the
number one ranked in the app store now, right?

522
00:45:34,210 --> 00:45:38,259
>>Ian Ellison-Taylor: Yeah, Chrome on iOS
was number one, and drive on iOS was number

523
00:45:38,259 --> 00:45:42,589
two. We'll see how long that lasts.
>>Jeff Chang: So we're happy that --

524
00:45:42,589 --> 00:45:45,670
[ Applause ]
>>Ian Ellison-Taylor: Thank you.

525
00:45:45,670 --> 00:45:51,559
>>Jeff Chang: We are definitely very happy
that we were able to get that out to you guys,

526
00:45:51,559 --> 00:45:56,690
especially with the think store we've been
telling, it's very important that we have

527
00:45:56,690 --> 00:46:02,990
Chrome available on as many platforms as possible.
In terms of how Chrome runs on iOS, you know,

528
00:46:02,990 --> 00:46:07,759
we obviously have to follow Apple's technical
specifications there, so in terms of the actual

529
00:46:07,759 --> 00:46:13,630
Web content it does use the UR WebView. I
don't know if anyone else has any comments

530
00:46:13,630 --> 00:46:18,269
there.
>>Erik Kay: So there's two things: You have

531
00:46:18,269 --> 00:46:22,380
to think about performance on a number of
different axis, right? So one is how long

532
00:46:22,380 --> 00:46:25,890
does it take -- how fast is it to just get
around and get your work done and do stuff

533
00:46:25,890 --> 00:46:30,420
like that and then the second thing is there's
raw compute performance or rendering performance

534
00:46:30,420 --> 00:46:36,309
within the page. I guess you could count those
as three areas. So on the compute -- on the

535
00:46:36,309 --> 00:46:41,220
pure compute side of things, like if you were
to download just a JavaScript benchmark, we're

536
00:46:41,220 --> 00:46:46,829
limited by what Apple provides us in that
they don't allow you to run your own jitted,

537
00:46:46,829 --> 00:46:53,829
you know, JavaScript engine. They don't allow
you to provide your own rendering -- you know,

538
00:46:54,500 --> 00:46:58,609
Web rendering engine, it's just not allowed
by the terms of service, and so we have to

539
00:46:58,609 --> 00:47:04,079
use UI WebView, and the UI WebView is actually
more restrictive than what's in Safari. Even

540
00:47:04,079 --> 00:47:08,980
though it's some of the own code, they actually
turn off some features. And one of the things

541
00:47:08,980 --> 00:47:15,890
they turn off is the use of the JIT in their
JavaScript engine, so that slows down heavy-duty

542
00:47:15,890 --> 00:47:22,680
JavaScript things. The second thing it does
is it affects some of the GPU acceleration,

543
00:47:22,680 --> 00:47:26,430
how that interoperates. So we have some limitations
there, so if you wanted to do just sort of

544
00:47:26,430 --> 00:47:32,559
the raw how fast is this particular page spinning
in a loop doing stuff, we aren't going to

545
00:47:32,559 --> 00:47:38,329
be as fast as we are on other platforms just
due to limitations; however, the good news

546
00:47:38,329 --> 00:47:42,380
is is that that's not the entire story. The
usability, you know, in terms of how long

547
00:47:42,380 --> 00:47:49,380
does it take you to get from point A to point
B is how much we predict what you're going

548
00:47:49,460 --> 00:47:54,869
to type, that helps with sync, your usage
patterns, the Omni box, how we're able to

549
00:47:54,869 --> 00:48:01,519
pre-fetch -- guess what you're able to do
using our pre-rendering and some of our DNS

550
00:48:01,519 --> 00:48:06,849
pre-fetching stuff. We have a lot of tricks
within Chrome beyond just the JavaScript engine

551
00:48:06,849 --> 00:48:13,230
and what we're doing inside the Web rendering
engine. So actually if you read some of the

552
00:48:13,230 --> 00:48:17,450
reviews that are floating around out there,
if you see the ones that load up a benchmark

553
00:48:17,450 --> 00:48:22,720
and compare them AB, you'll see that we're
slower. If you see the ones that try to use

554
00:48:22,720 --> 00:48:27,680
it and say I navigated to the following three
sites and time that, you'll see that we're

555
00:48:27,680 --> 00:48:31,440
actually way faster, that some people are
getting things done twice as fast. Getting

556
00:48:31,440 --> 00:48:36,109
to their web pages, so if what you're doing
is surfing and navigating around, actually

557
00:48:36,109 --> 00:48:38,640
I think you'll find Chrome on iOS is really
fast.

558
00:48:38,640 --> 00:48:42,319
>>Jeff Chang: Yeah, for me just the fact that
all my favorite websites all ready auto complete.

559
00:48:42,319 --> 00:48:49,319
It just helps a ton, and for me I use a lot
of tabs. I tend to open a lot of tabs in the

560
00:48:49,940 --> 00:48:54,819
background when I'm reading stuff, like read
it or something. Being able to flip through

561
00:48:54,819 --> 00:49:01,240
really easy, switch through them is a huge
usability improvement for me. All right. Go

562
00:49:01,240 --> 00:49:04,279
ahead.
>>> On a similar note, one of the things that

563
00:49:04,279 --> 00:49:09,329
makes Chrome so much more fast than anything
else is the extensions, and in particular

564
00:49:09,329 --> 00:49:16,329
for me, the Omni box extension capability
of making completion work. When are you considering

565
00:49:16,869 --> 00:49:21,130
bringing this to mobile?
>>Erik Kay: So I think we talked a little

566
00:49:21,130 --> 00:49:25,829
bit about this before, but basically, you
know, Chrome is a pretty big set of features

567
00:49:25,829 --> 00:49:31,499
and the Web has a very broad set of features
and so we only just got, you know, Android

568
00:49:31,499 --> 00:49:37,970
to -- Chrome to Android a few months ago,
and we only just got Chrome to iOS today,

569
00:49:37,970 --> 00:49:43,720
or yesterday. So we've got a little ways to
go to get to feature parity, and extension

570
00:49:43,720 --> 00:49:48,680
is one of those parts that we actually like
to take our time with because it has, you

571
00:49:48,680 --> 00:49:52,740
know, deep integration to all of the various
hooks in the browser. We also think that in

572
00:49:52,740 --> 00:49:59,740
mobile it's quite likely that how you want
to extend the browser is going to be different.

573
00:50:00,160 --> 00:50:05,680
Also the performance needs of mobile are different.
So -- so some of the changes we've been making

574
00:50:05,680 --> 00:50:10,009
in the desktop has have been anticipating
our needs in mobile. If you look at the new

575
00:50:10,009 --> 00:50:14,660
stuff we've done with event pages in extensions
where basically there's no longer going to

576
00:50:14,660 --> 00:50:19,329
be an always-running persistent background
page for every single extension, that way

577
00:50:19,329 --> 00:50:23,950
we can be a little more on demand, this is
partly to reduce the resource function of

578
00:50:23,950 --> 00:50:27,799
extensions, and we think will make it more
adaptable to mobile down the road. Unfortunately,

579
00:50:27,799 --> 00:50:31,999
you know, I don't have a good timetable to
tell you, but it is something we're interested

580
00:50:31,999 --> 00:50:35,720
in.
>>Jeff Chang: All right, switch over to this

581
00:50:35,720 --> 00:50:39,839
side again.
>>> I'm curious if there's going to be any

582
00:50:39,839 --> 00:50:45,430
advancements in printer support without Google
Cloud Print. Right now it seems like you need

583
00:50:45,430 --> 00:50:52,430
a separate machine in order to be able to
print. Is there any way that it's going to

584
00:50:53,999 --> 00:50:58,109
be possible with a Chromebook alone.
>>Jeff Chang: Sounds like you're asking about

585
00:50:58,109 --> 00:51:02,150
printing outside of Google cloud but specifically
for Chrome OS.

586
00:51:02,150 --> 00:51:05,299
>>> Yes.
>>Felix Lin: Today people can use any of their

587
00:51:05,299 --> 00:51:12,299
legacy printers by using Cloud Print through
an existing machine on the network. On my

588
00:51:12,809 --> 00:51:18,490
home machine I have windows XP set up, I've
got Cloud Print installed and I can get to

589
00:51:18,490 --> 00:51:25,490
any of my legacy printers on the network through
that with pretty much every printer I'm aware

590
00:51:25,660 --> 00:51:32,349
of on the market today. They're already Cloud
Print enabled, so by simply going any new

591
00:51:32,349 --> 00:51:36,910
printer that you get today pretty much can
just be on the network and accessible to any

592
00:51:36,910 --> 00:51:40,640
Chrome OS or any other device that uses Cloud
Print.

593
00:51:40,640 --> 00:51:46,089
>>> Oh, okay.
>>Jeff Chang: All right. Back to this side.

594
00:51:46,089 --> 00:51:53,089
>>> I found out I think next year that Google
is giving my daughter's school a bunch of

595
00:51:53,880 --> 00:52:00,880
Chrome OS netbooks and we live right next
to Mountain View, so I was just curious like

596
00:52:00,880 --> 00:52:04,249
what's the thinking behind that, and is it
more than just a local thing?

597
00:52:04,249 --> 00:52:07,130
Is it like going to be in other places around
the country?

598
00:52:07,130 --> 00:52:14,039
>>Jeff Chang: So I know for sure that we've
had a lot of -- a lot of schools around the

599
00:52:14,039 --> 00:52:16,589
country starting to adopt Chromebooks. Felix
can probably tell you the exact numbers, but

600
00:52:16,589 --> 00:52:22,740
I know that the feedback has been very positive.
>>Felix Lin: Education is one of the most

601
00:52:22,740 --> 00:52:29,740
-- most aggressively verticals adopting Chromebooks.
And the beauty of the Web and education is

602
00:52:30,930 --> 00:52:33,900
that, you know, the Web is really a great
equalizer, right?

603
00:52:33,900 --> 00:52:40,900
All the best content, apps, information, accessible
to students, very, very low cost, always up-to-date.

604
00:52:42,240 --> 00:52:47,269
Chromebooks are phenomenal platform for schools
because schools have, you know, shrinking

605
00:52:47,269 --> 00:52:53,470
budgets, no IT staff, and being able to take
a device that has zero maintenance, zero management,

606
00:52:53,470 --> 00:52:58,779
always up to date, doesn't require a ton of
care and feeding, and gives people access

607
00:52:58,779 --> 00:53:05,779
to all of the tools that they use is really
just a great formula for education. We're

608
00:53:07,170 --> 00:53:13,130
-- in addition to, you know, the hundreds
and hundreds of schools I think in 48 states,

609
00:53:13,130 --> 00:53:20,130
there are schools that are deploying Chromebooks,
we're seeing huge initiatives at national

610
00:53:20,839 --> 00:53:27,150
levels where in many emerging markets countries
are looking to Chromebooks as a way to, you

611
00:53:27,150 --> 00:53:34,150
know, transform education and really transform
great economic transformation across the country.

612
00:53:35,140 --> 00:53:42,140
And, you know, it's really all about, you
know, the rich content that's available, all

613
00:53:42,839 --> 00:53:49,130
the educational material that is available,
and just the ability to get a situation where

614
00:53:49,130 --> 00:53:56,130
instead of, you know, a 20 students to one
computer type ratio in a school, giving students

615
00:53:56,920 --> 00:54:03,089
a one to one opportunity where every student
has a computer that they're using to enhance

616
00:54:03,089 --> 00:54:09,440
their learning, is truly transformational.
And so, you know, from our standpoint, and,

617
00:54:09,440 --> 00:54:14,650
you know, this is the great thing about working
with many of our hardware partners, in education

618
00:54:14,650 --> 00:54:21,650
we're finding a great willingness on the part
of companies to be able to foster education.

619
00:54:22,720 --> 00:54:28,390
People don't seem to have as large a profit
motive in education as they do in other verticals

620
00:54:28,390 --> 00:54:33,930
where they need to be making, you know, an
enterprise profit, but this is just a huge

621
00:54:33,930 --> 00:54:40,930
opportunity for us and for -- for future students.
>>Jeff Chang: All right, back to this side.

622
00:54:41,200 --> 00:54:47,749
>>> Okay. Congratulations, by the way, on
shipping Chrome for iOS. It's a good thing.

623
00:54:47,749 --> 00:54:54,749
I was in a session yesterday afternoon, optimizing
your HTML for -- for a mobile device, and

624
00:54:55,829 --> 00:55:01,130
the presenter invited us to follow along,
give URL for slides, and said we're going

625
00:55:01,130 --> 00:55:05,890
to working on this interactively, so I pulled
out my iPad and downloaded Chrome for the

626
00:55:05,890 --> 00:55:10,319
iPad, and was following right along, and then
he said, okay, now we're going to install

627
00:55:10,319 --> 00:55:15,369
the page speed extension, so we can watch
and see what happens, and I said, great, search

628
00:55:15,369 --> 00:55:21,519
for page speed, right here, Chrome Web store,
and it said umm, the Chrome Web store is not

629
00:55:21,519 --> 00:55:27,680
supported on your OS.
>>Erik Kay: I tried to touch on this earlier,

630
00:55:27,680 --> 00:55:31,999
but extensions are something we definitely
want to support down the road on mobile and

631
00:55:31,999 --> 00:55:37,529
other platforms. It's just very early days
and getting into mobile is going to take us

632
00:55:37,529 --> 00:55:40,950
a fair amount of work.
>>> Okay.

633
00:55:40,950 --> 00:55:45,529
>>Jeff Chang: Go ahead.
>>> So another Chrome on iOS question. I'm

634
00:55:45,529 --> 00:55:51,720
just wondering if it does or is going to support
URL schemes so that iOS developers launch

635
00:55:51,720 --> 00:55:58,720
Chrome if they choose to.
>>Erik Kay: Do we have anybody from the iOS

636
00:55:59,319 --> 00:56:06,319
team around here that can answer that?
Tell you what, why don't you -- if you want

637
00:56:07,369 --> 00:56:09,799
we can look that up for you and leave your
e-mail for us.

638
00:56:09,799 --> 00:56:11,619
>>Jeff Chang: We can put you in touch with
the right people.

639
00:56:11,619 --> 00:56:13,299
>>> Okay, thanks.
>>> Hi.

640
00:56:13,299 --> 00:56:19,319
>>Jeff Chang: Hi.
>>> I have a question about my Chromebook.

641
00:56:19,319 --> 00:56:26,319
I would like to use it as a Web development
platform with my HTML JavaScript files, and

642
00:56:29,109 --> 00:56:36,109
I tried that yesterday and then I ran into
two problems. One is that I don't have a text

643
00:56:38,059 --> 00:56:45,059
editor for my HTML files, and I saw one of
the presentations that was using an app, I

644
00:56:45,099 --> 00:56:52,099
want to know which app that is. And the second
problem is how to run my HTML files from Google

645
00:56:52,599 --> 00:56:57,670
Drive. I only get a preview of the source
code. I don't get a run.

646
00:56:57,670 --> 00:57:03,440
>>Erik Kay: So I can talk to that. So that
you're probably talking about our presentation

647
00:57:03,440 --> 00:57:09,670
where we had some text editors running on
Chrome OS, and this is using some of the new

648
00:57:09,670 --> 00:57:14,049
apps features that we've been working on.
They're pretty early on, so they're right

649
00:57:14,049 --> 00:57:18,769
now available to people developing in Canary,
but we hope to have them more broadly available

650
00:57:18,769 --> 00:57:23,930
later this year. If you're a developer, want
to ride the ragged edge, you know, you can

651
00:57:23,930 --> 00:57:29,779
come check out -- we've got some sample code.
I think that particular little micro editor

652
00:57:29,779 --> 00:57:36,779
is checked into GitHub, and our Google Chrome
repo, but a warning is that it's early, it's

653
00:57:37,640 --> 00:57:44,640
very simple. It actually isn't as cool as
it looked. We -- we -- we actually hit over

654
00:57:45,499 --> 00:57:50,940
all the rough spots. But there are -- I'll
tell you that just one of the cool, fun things

655
00:57:50,940 --> 00:57:54,819
about the new apps stuff we've been doing,
is just once you add these new capabilities

656
00:57:54,819 --> 00:57:59,730
of seeing what people want to build with them,
and within Chrome team, one of the first things

657
00:57:59,730 --> 00:58:03,900
people wanted to build actually was code editors,
and in fact we have like three of them already

658
00:58:03,900 --> 00:58:09,509
that people are just doing different things
with, and so we actually expect there to be

659
00:58:09,509 --> 00:58:12,710
a plethora of code editors.
>>Jeff Chang: I don't know if you mentioned

660
00:58:12,710 --> 00:58:16,390
it already or not, there's definitely IDEs
available in the Chrome Web store. A bunch

661
00:58:16,390 --> 00:58:23,390
of them are pretty highly ranked.
>>Jeff Chang: The number of cloud ID's emerging

662
00:58:24,279 --> 00:58:30,509
and you can use them, and as the Chrome, we
are providing them with the extension APIs

663
00:58:30,509 --> 00:58:36,900
so they could plug into the instrumentation
and get the dev tools integrated into the

664
00:58:36,900 --> 00:58:43,900
cloud tools, so you have both complete ID
with the remote persistence and the debugging

665
00:58:44,529 --> 00:58:49,220
capabilities on the Chrome OS. But it's all
coming. We're working on that. We're working

666
00:58:49,220 --> 00:58:54,749
with base teams on these capabilities.
>>> And then how do I run my HTML file? When

667
00:58:54,749 --> 00:59:00,619
I clicked on the file from Google Drive, I
just got a preview.

668
00:59:00,619 --> 00:59:06,910
>>Erik Kay: So you have to ask the Drive team,
so unfortunately none of us are from there,

669
00:59:06,910 --> 00:59:11,109
so I don't know if they have any plans to
allow direct hosting of HTML straight from

670
00:59:11,109 --> 00:59:17,160
Drive. I assume that's what you mean for public
consumption, but if you just want to do local

671
00:59:17,160 --> 00:59:22,170
development, it should be possible to do -- to
read the files locally and render them, you

672
00:59:22,170 --> 00:59:22,880
know, in Chrome.
>>Ian Ellison-Taylor: (inaudible)

673
00:59:22,880 --> 00:59:24,319
>>Erik Kay: Yeah, we can check with the drive
team.

674
00:59:24,319 --> 00:59:30,180
>>Jeff Chang: Yeah, we can check with the
Drive team. It looks like we pretty much ran

675
00:59:30,180 --> 00:59:33,619
out of time.
>>Ian Ellison-Taylor: Hang on. I forgot one

676
00:59:33,619 --> 00:59:38,519
other Easter Egg, you probably already know,
there's another Easter Egg in the video, the

677
00:59:38,519 --> 00:59:44,200
History of Chrome, so you might want to study
that video and -- and there's something pretty

678
00:59:44,200 --> 00:59:48,829
cool in there so --
>>Jeff Chang: All right. Perfect timing. Yeah.

679
00:59:48,829 --> 00:59:53,130
So thank you for coming. We enjoy doing this
every year as long as you guys come, and so

680
00:59:53,130 --> 00:59:56,799
hopefully see you next year, otherwise if
you just stay in this room, there's a bunch

681
00:59:56,799 --> 01:00:02,710
of Chrome sessions after us, looks like high
performance HTML5, history and future of Google

682
01:00:02,710 --> 01:00:06,859
Web tool kit, writing secure Web Apps, and
Chrome extensions and the Google Cloud Print

683
01:00:06,859 --> 01:00:10,530
section, so please enjoy the rest of conference,
and thank you.

684
01:00:10,530 --> 01:00:10,780
[ Applause ]

