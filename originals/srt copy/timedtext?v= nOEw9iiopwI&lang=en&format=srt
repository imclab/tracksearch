1
00:00:03,070 --> 00:00:07,380
Hey there. I'm Paul Irish. I'm a Developer
Advocate on the Google Chrome team and today

2
00:00:07,380 --> 00:00:11,910
I'm going to show some advanced uses of the
core Chrome Dev Tools features.

3
00:00:11,910 --> 00:00:17,270
First, let's enter into the dev tools. It's
common to use the app's menu. And you can

4
00:00:17,270 --> 00:00:23,210
also use a keyboard shortcut, like Ctrl-shift-I
on Windows or Cmd-option-I on Mac. But I prefer

5
00:00:23,210 --> 00:00:28,230
to open them by right-clicking on an element
and choosing Inspect.

6
00:00:28,230 --> 00:00:32,070
Now that we have this open, I can navigate
the DOM by clicking on the arrows, but it's

7
00:00:32,070 --> 00:00:36,989
much quicker to use the keyboard arrow keys
to traverse up and down the DOM tree.

8
00:00:36,989 --> 00:00:41,500
You’ll notice as I'm selecting these elements,
I get an onscreen blue highlight, but I also

9
00:00:41,500 --> 00:00:46,039
get a css selector that represents that element,
along with its current width and height.

10
00:00:46,039 --> 00:00:49,960
Sometimes, I like to zoom out of the page
with ctrl - to get the full view while I do

11
00:00:49,960 --> 00:00:53,210
this.
Now, over in the Console tab, I'd like to

12
00:00:53,210 --> 00:00:56,399
share a few things.
Let's say that you have a big string coming

13
00:00:56,399 --> 00:00:59,370
from your app, and you want to copy it into
your clipboard.

14
00:00:59,370 --> 00:01:03,769
While you certainly could highlight the entire
string with your mouse, it's much more effective

15
00:01:03,769 --> 00:01:10,769
to use the console's built in copy method.
I can now paste this wherever I am going.

16
00:01:16,330 --> 00:01:20,180
Sometimes you get too much text in the console.
You can use the clear() function to clear

17
00:01:20,180 --> 00:01:23,159
it out.
Or, of course, the clear icon below will do

18
00:01:23,159 --> 00:01:26,280
just the same.
Now sometimes, you have a reference to a DOM

19
00:01:26,280 --> 00:01:30,380
element, and you want to inspect it. Right
now, I have a reference to the big headline

20
00:01:30,380 --> 00:01:35,049
on the page.
A simple way to do that is the console's inspect

21
00:01:35,049 --> 00:01:41,380
function.
Now, let's say you have the reverse: You're

22
00:01:41,380 --> 00:01:46,380
looking at an element in the Elements tab,
but you want to access it via scripts. What

23
00:01:46,380 --> 00:01:52,439
I used to do is add an ID onto the element
and use getElementById.

24
00:01:52,439 --> 00:01:57,390
You’ll notice I brought up the console right
here. In fact, I can toggle on a console on

25
00:01:57,390 --> 00:01:59,969
every tab of the dev tools with the escape
key.

26
00:01:59,969 --> 00:02:05,079
But instead of setting a temporary ID to the
element, to save time, I can just type $0

27
00:02:05,079 --> 00:02:09,539
in the console. This is a shortcut reference
to whatever element is currently selected

28
00:02:09,539 --> 00:02:14,000
in this panel. It's just a regular reference,
so if I'm using jQuery I can toss it into

29
00:02:14,000 --> 00:02:18,580
it's dollar method easily.
Now over on the Network tab, I'd like to share

30
00:02:18,580 --> 00:02:23,230
a few things.
In this waterfall chart, two lines are added.

31
00:02:23,230 --> 00:02:27,540
The blue one points out where the DOMContentLoaded
event fires, which is basically “document

32
00:02:27,540 --> 00:02:31,750
ready” and the red is window's load event,
which waits for all images and iframes to

33
00:02:31,750 --> 00:02:35,820
finish.
Now you probably have had to inspect the cookies

34
00:02:35,820 --> 00:02:40,550
that are associated with your page request
before. The Headers tab has that info as one

35
00:02:40,550 --> 00:02:44,680
of the request headers, but you can now view
the current cookies in table format.

36
00:02:44,680 --> 00:02:48,490
You also have the size of each cookie, which
you want to keep as small as possible, as

37
00:02:48,490 --> 00:02:52,720
all the cookies are sent in the HTTP header
with every request of the page.

38
00:02:52,720 --> 00:02:56,780
Now, I'd like to show you a few handy features
when doing Javascript debugging. I'm going

39
00:02:56,780 --> 00:03:02,380
to bring up a page with some basic script.
So here, I can filter our results here using

40
00:03:02,380 --> 00:03:09,220
search or a category filter. Easy enough.
This gallery.js contains most of the functionality.

41
00:03:09,220 --> 00:03:14,620
Now I'd like to add some logging to see what's
going on. In Chrome, I can edit the script

42
00:03:14,620 --> 00:03:19,550
on the fly inside the UI. This feature is
unique to Chrome because of how the V8 Javascript

43
00:03:19,550 --> 00:03:23,760
engine executes your code.
I’m going to jump down to the showGallery

44
00:03:23,760 --> 00:03:29,730
function. I can use cmd-G or ctrl-G to jump
to a specific line number.

45
00:03:29,730 --> 00:03:34,040
Now I'd really like to dig into this JSON
argument here, so I'm going to console log

46
00:03:34,040 --> 00:03:41,040
it out.
Now when I filter, I get the object logged

47
00:03:42,590 --> 00:03:49,410
to the console, where I can poke around with
it further.

48
00:03:49,410 --> 00:03:53,650
You'll notice I'm also getting an exception
thrown on the page. Sometimes it's difficult

49
00:03:53,650 --> 00:03:57,970
to figure out where these errors are coming
from. By clicking on this pause button, I

50
00:03:57,970 --> 00:04:02,710
can ask the dev tools to pause execution whenever
an exception is encountered, effectively giving

51
00:04:02,710 --> 00:04:07,070
me a breakpoint at that position.
I can now open up the console, again by hitting

52
00:04:07,070 --> 00:04:14,070
Escape, and figure out what's going on.
Whoops! Looks like that element doesn’t

53
00:04:14,900 --> 00:04:18,199
exist yet. I guess it’s time to file a bug
report.

54
00:04:18,199 --> 00:04:22,290
If you'd like to dive into the dev tools,
I definitely recommend picking up a dev channel

55
00:04:22,290 --> 00:04:27,200
version of Chrome. It updates weekly and gets
new features in the dev tools very regularly.

