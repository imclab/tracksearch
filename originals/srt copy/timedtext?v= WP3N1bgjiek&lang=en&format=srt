1
00:00:03,280 --> 00:00:08,240
Hi! I’m Alex, I’m a Software Engineer
here at Google and I work on Google Chrome

2
00:00:08,240 --> 00:00:13,790
Frame -- a plug-in that’s bringing HTML5
and rich, modern web apps to IE 6, 7, and

3
00:00:13,790 --> 00:00:18,810
8. We launched a developer preview of the
plug-in last Fall. Since then we’ve been

4
00:00:18,810 --> 00:00:24,020
working hard to improve privacy, security,
and ease of deployment. We’ve also dramatically

5
00:00:24,020 --> 00:00:28,570
improved the performance of the plug-in.
A stable version of Google Chrome Frame is

6
00:00:28,570 --> 00:00:34,030
now available. Users of the beta will be automatically
updated to it and because Google Chrome Frame

7
00:00:34,030 --> 00:00:39,199
is out of beta, you can now build rich apps
with HTML5’s audio, video, and canvas tags

8
00:00:39,199 --> 00:00:43,649
without resorting to heavyweight shims and
frameworks that can slow down your site. New

9
00:00:43,649 --> 00:00:49,269
features like CSS animations and SVG work
great in Google Chrome Frame, and I’m certain

10
00:00:49,269 --> 00:00:53,949
that once you develop sites with modern web
technology, you’ll never want to go back.

11
00:00:53,949 --> 00:00:57,219
So how do you make your site work with Google
Chrome Frame?

12
00:00:57,219 --> 00:01:01,710
Once installed, Google Chrome Frame inspects
pages served to IE, looking for a special

13
00:01:01,710 --> 00:01:06,080
HTTP header or META tag.
Adding the meta tag to your site is simple,

14
00:01:06,080 --> 00:01:10,659
but remember that it should go at the very
top of your documents. If it’s too far down,

15
00:01:10,659 --> 00:01:14,890
the plug-in might not see the tag.
The fastest and most reliable way to trigger

16
00:01:14,890 --> 00:01:19,600
page rendering in Google Chrome Frame is by
using the HTTP header.

17
00:01:19,600 --> 00:01:22,930
Adding the header site-wide is often a simple
matter of including the right directives in

18
00:01:22,930 --> 00:01:29,159
a template or in your web server configuration.
Here we’ll add a header in an Apache configuration,

19
00:01:29,159 --> 00:01:33,880
restart the server, and see that when we visit
the site again we can right-click to use Chrome’s

20
00:01:33,880 --> 00:01:37,789
Web  Inspector... which is how we know the
page is being rendered with Google Chrome

21
00:01:37,789 --> 00:01:41,210
Frame.
Scripts like CFInstall and Modernizr can help

22
00:01:41,210 --> 00:01:46,100
you prompt users without the plug-in to upgrade
or install Google Chrome Frame. Prompting

23
00:01:46,100 --> 00:01:50,289
users is totally optional though, and users
who don’t have the plug-in just get IE’s

24
00:01:50,289 --> 00:01:56,539
existing behavior.  Check out the documentation
at code.google.com/chrome/chromeframe for

25
00:01:56,539 --> 00:02:00,619
details, but don’t worry, we’ve worked
to keep that part simple too.

26
00:02:00,619 --> 00:02:05,899
Thanks to HTML5, your rich apps can shine
without proprietary plug-ins and now, thanks

27
00:02:05,899 --> 00:02:10,570
to Google Chrome Frame, you don’t even have
to leave users of legacy browsers behind.

28
00:02:10,570 --> 00:02:14,340
Thanks for listening and for adding the headers
to your next HTML5-powered project.

