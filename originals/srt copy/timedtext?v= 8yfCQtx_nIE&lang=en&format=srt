1
00:00:00,000 --> 00:00:07,570

2
00:00:07,570 --> 00:00:09,900
PAUL IRISH: Hey guys, and
welcome to the first episode

3
00:00:09,900 --> 00:00:14,630
of GDL Presents, wherein we
highlight a developer.

4
00:00:14,630 --> 00:00:17,480
Specifically, we're looking at
developers behind some of the

5
00:00:17,480 --> 00:00:19,790
Chrome experiments as of late.

6
00:00:19,790 --> 00:00:22,810
And today, we have with
us Michael Deal.

7
00:00:22,810 --> 00:00:26,450
Michael is a developer in
Portland, Oregon, an

8
00:00:26,450 --> 00:00:28,800
interactive developer, who's
made some of the

9
00:00:28,800 --> 00:00:30,430
coolest stuff I've seen.

10
00:00:30,430 --> 00:00:33,840
And we're going to take a look
at some of his projects, talk

11
00:00:33,840 --> 00:00:37,890
about how they've been
built, and talk about

12
00:00:37,890 --> 00:00:40,230
how he develops things.

13
00:00:40,230 --> 00:00:43,790
So Michael why don't
you say hello.

14
00:00:43,790 --> 00:00:45,854
MICHEAL DEAL: Hello.

15
00:00:45,854 --> 00:00:46,312
PAUL IRISH: Nice.

16
00:00:46,312 --> 00:00:48,490
Nice.

17
00:00:48,490 --> 00:00:54,940
So Michael, you develop
a lot of things.

18
00:00:54,940 --> 00:00:58,680
Tell me about the sort
of products that you

19
00:00:58,680 --> 00:01:00,430
like to work on.

20
00:01:00,430 --> 00:01:02,200
MICHEAL DEAL: I like to work on
projects that have lots of

21
00:01:02,200 --> 00:01:03,320
colors involved.

22
00:01:03,320 --> 00:01:07,270
And audio's an extra bonus.

23
00:01:07,270 --> 00:01:10,510
But colors are kind of
a prerequisite for

24
00:01:10,510 --> 00:01:11,650
a project for me.

25
00:01:11,650 --> 00:01:12,230
PAUL IRISH: I dig it.

26
00:01:12,230 --> 00:01:18,640
So you've done a lot of work
with canvas, SVG, a lot of

27
00:01:18,640 --> 00:01:24,290
audio stuff with web audio API,
and another audio, and a

28
00:01:24,290 --> 00:01:28,560
pretty just comprehensive
set of projects.

29
00:01:28,560 --> 00:01:30,480
So we're going to dive
into a few of them.

30
00:01:30,480 --> 00:01:32,950
But first, I wanted to actually
highlight one of the

31
00:01:32,950 --> 00:01:35,390
things that you did for a site
of ours a little bit ago,

32
00:01:35,390 --> 00:01:37,000
HTML5 Rocks.

33
00:01:37,000 --> 00:01:39,090
You made one of the coolest
tutorials that we've had on

34
00:01:39,090 --> 00:01:43,210
there about typographic
text effects.

35
00:01:43,210 --> 00:01:48,650
And so this was a great article
where we dove into

36
00:01:48,650 --> 00:01:52,570
some of the ways that kind of
show off text, giving it a

37
00:01:52,570 --> 00:01:59,980
neon approach, a stereoscopic
kind of 3D approach.

38
00:01:59,980 --> 00:02:02,640
And so all these manipulations
were just

39
00:02:02,640 --> 00:02:04,920
done in canvas, right?

40
00:02:04,920 --> 00:02:05,910
MICHEAL DEAL: Uh-huh.

41
00:02:05,910 --> 00:02:06,405
Yep.

42
00:02:06,405 --> 00:02:08,500
They're all in canvas.

43
00:02:08,500 --> 00:02:14,840
PAUL IRISH: I think we had a
little demo page where you

44
00:02:14,840 --> 00:02:17,613
could kind of swoop in things.

45
00:02:17,613 --> 00:02:20,676
Oh yeah, it was this.

46
00:02:20,676 --> 00:02:21,110
MICHEAL DEAL: Yeah.

47
00:02:21,110 --> 00:02:25,340
So the different affects, they
ticket heavy usage of the

48
00:02:25,340 --> 00:02:29,680
global composition operation,
which allows you to mesh

49
00:02:29,680 --> 00:02:31,580
layers in different ways.

50
00:02:31,580 --> 00:02:36,460
And this one, in particular,
is more of an

51
00:02:36,460 --> 00:02:41,800
animated text effect.

52
00:02:41,800 --> 00:02:44,370
You can do inner shadows and
outer shadows, glows, all

53
00:02:44,370 --> 00:02:46,145
sorts of things like that.

54
00:02:46,145 --> 00:02:47,395
PAUL IRISH: That's
really cool.

55
00:02:47,395 --> 00:02:50,100

56
00:02:50,100 --> 00:02:51,020
Yeah, this is fantastic.

57
00:02:51,020 --> 00:02:54,910
I actually took some of this
code and I made a little

58
00:02:54,910 --> 00:02:56,045
birthday card for someone--

59
00:02:56,045 --> 00:02:56,680
MICHEAL DEAL: Oh really?

60
00:02:56,680 --> 00:02:57,950
Oh cool.

61
00:02:57,950 --> 00:02:59,400
PAUL IRISH: --using
this approach.

62
00:02:59,400 --> 00:03:03,980
It's a nice and reusable
good quality effect.

63
00:03:03,980 --> 00:03:05,330
MICHEAL DEAL: I'd love
to see that.

64
00:03:05,330 --> 00:03:05,670
PAUL IRISH: Yeah.

65
00:03:05,670 --> 00:03:07,020
Sure.

66
00:03:07,020 --> 00:03:11,330
So yeah, this is great.

67
00:03:11,330 --> 00:03:15,190
So I wanted to dive into one of
your larger projects that I

68
00:03:15,190 --> 00:03:16,510
think people might have seen.

69
00:03:16,510 --> 00:03:22,150
Sketchpad was one of the larger
showcase projects that

70
00:03:22,150 --> 00:03:25,020
we've seen on the Chrome
web store a while ago.

71
00:03:25,020 --> 00:03:26,390
And so this is--

72
00:03:26,390 --> 00:03:30,380
you want to talk about the
application and how it's built

73
00:03:30,380 --> 00:03:34,020
and the functionality that
you have inside of it?

74
00:03:34,020 --> 00:03:34,750
MICHEAL DEAL: Sure.

75
00:03:34,750 --> 00:03:38,670
Yeah, the application was
actually built back in 2008.

76
00:03:38,670 --> 00:03:41,540
And so it's a little bit
of an older project.

77
00:03:41,540 --> 00:03:43,265
But it's held up
well over time.

78
00:03:43,265 --> 00:03:45,910

79
00:03:45,910 --> 00:03:48,930
It takes heavy usage of the
canvas element, as all my

80
00:03:48,930 --> 00:03:49,770
projects do.

81
00:03:49,770 --> 00:03:53,820
And definitely very heavy
on the style.

82
00:03:53,820 --> 00:03:57,650
The styling was probably the
trickiest part, getting all

83
00:03:57,650 --> 00:04:01,130
the different types of gradients
and things working

84
00:04:01,130 --> 00:04:03,190
together in the right manner.

85
00:04:03,190 --> 00:04:05,250
But yeah, it was a really big
learning project for me.

86
00:04:05,250 --> 00:04:09,110
It's where I learned all about
how to really program in

87
00:04:09,110 --> 00:04:10,120
JavaScript and canvas.

88
00:04:10,120 --> 00:04:12,320
That was my first big project.

89
00:04:12,320 --> 00:04:15,020
PAUL IRISH: Yeah.

90
00:04:15,020 --> 00:04:18,279
So, I mean, this is
a big application.

91
00:04:18,279 --> 00:04:23,730
You have a menu with
these fly-out--

92
00:04:23,730 --> 00:04:24,880
it's a little hard to
see on the video.

93
00:04:24,880 --> 00:04:28,590
But we have this really smooth
animation as all these little

94
00:04:28,590 --> 00:04:33,840
non-modal dialogs fly
out, a full toolbar.

95
00:04:33,840 --> 00:04:39,910
How did you go about structuring
the code for this?

96
00:04:39,910 --> 00:04:41,130
MICHEAL DEAL: Structuring?

97
00:04:41,130 --> 00:04:44,550
Well, you know, that's probably
not the best example

98
00:04:44,550 --> 00:04:47,570
of my work.

99
00:04:47,570 --> 00:04:51,570
Because, like I said, I was just
starting to learn how to

100
00:04:51,570 --> 00:04:52,990
put that all together.

101
00:04:52,990 --> 00:04:58,600
But I guess, ever since then in
writing the newer version

102
00:04:58,600 --> 00:05:02,395
of Sketchpad, I've tried to
write everything in a sandbox.

103
00:05:02,395 --> 00:05:07,790
So I'll write one module, one
effect, in a sandbox that's

104
00:05:07,790 --> 00:05:09,860
completely disconnected
from everything else.

105
00:05:09,860 --> 00:05:11,770
And then, after that
I integrate it

106
00:05:11,770 --> 00:05:13,300
into the rest of it.

107
00:05:13,300 --> 00:05:16,070
And what's really been useful to
me, too, is doing different

108
00:05:16,070 --> 00:05:19,080
projects where I can reuse
the project for

109
00:05:19,080 --> 00:05:20,870
different types of things.

110
00:05:20,870 --> 00:05:23,270
And then, the code base gets
a lot cleaner that way.

111
00:05:23,270 --> 00:05:26,010

112
00:05:26,010 --> 00:05:28,930
PAUL IRISH: A common adage is
the key to writing a large

113
00:05:28,930 --> 00:05:31,960
JavaScript application is to
never write a large JavaScript

114
00:05:31,960 --> 00:05:32,600
application.

115
00:05:32,600 --> 00:05:36,744
Break it into the modules
and the libraries.

116
00:05:36,744 --> 00:05:37,150
Yeah.

117
00:05:37,150 --> 00:05:37,676
That's really wise.

118
00:05:37,676 --> 00:05:38,042
MICHEAL DEAL: Totally.

119
00:05:38,042 --> 00:05:38,410
Yeah.

120
00:05:38,410 --> 00:05:41,010
PAUL IRISH: OK, so we won't
view Source on this

121
00:05:41,010 --> 00:05:41,595
application.

122
00:05:41,595 --> 00:05:42,070
MICHEAL DEAL: Yeah.

123
00:05:42,070 --> 00:05:44,445
I should really compress
that, actually.

124
00:05:44,445 --> 00:05:45,870
It's pretty bad.

125
00:05:45,870 --> 00:05:45,890
PAUL IRISH: All right.

126
00:05:45,890 --> 00:05:48,190
Cool.

127
00:05:48,190 --> 00:05:53,740
So we'll go ahead and take a
look at MIDI.js, which is a

128
00:05:53,740 --> 00:05:57,510
really fantastic library that
you put together for taking

129
00:05:57,510 --> 00:06:01,710
MIDI data and piping it out
into sounds through

130
00:06:01,710 --> 00:06:02,650
the Web Audio API.

131
00:06:02,650 --> 00:06:04,590
Is that a good description?

132
00:06:04,590 --> 00:06:08,360
Can you talk about
how it works?

133
00:06:08,360 --> 00:06:09,140
MICHEAL DEAL: Sure.

134
00:06:09,140 --> 00:06:12,300
So the MIDI.js project
allows you to--

135
00:06:12,300 --> 00:06:14,720
there's a back end to it, where
you can encode your own

136
00:06:14,720 --> 00:06:17,390
sound fonts into base64.

137
00:06:17,390 --> 00:06:19,260
So you'll take a sound font--

138
00:06:19,260 --> 00:06:20,440
PAUL IRISH: What's
a sound font?

139
00:06:20,440 --> 00:06:24,200
MICHEAL DEAL: A sound font
is basically any MIDI

140
00:06:24,200 --> 00:06:24,710
application.

141
00:06:24,710 --> 00:06:28,260
Any type of MIDI instrument
has a sound font

142
00:06:28,260 --> 00:06:28,950
representing it.

143
00:06:28,950 --> 00:06:33,310
So if you have a flute, or a
guitar, or a piano, each of

144
00:06:33,310 --> 00:06:34,775
those have their
own sound font.

145
00:06:34,775 --> 00:06:40,850

146
00:06:40,850 --> 00:06:44,530
There's a bunch of different
resources out there where you

147
00:06:44,530 --> 00:06:51,050
can buy sound fonts and
so you can really--

148
00:06:51,050 --> 00:06:52,890
sorry.

149
00:06:52,890 --> 00:06:55,835
PAUL IRISH: No problem.

150
00:06:55,835 --> 00:06:59,840
MICHEAL DEAL: I've got
tea in my teeth, too.

151
00:06:59,840 --> 00:07:01,040
Yeah.

152
00:07:01,040 --> 00:07:02,950
Sorry, what was the
question again?

153
00:07:02,950 --> 00:07:05,050
PAUL IRISH: I was just trying
to understand--

154
00:07:05,050 --> 00:07:08,200
tell me what sound fonts are.

155
00:07:08,200 --> 00:07:13,080
OK, so a sound font is basically
a representation of

156
00:07:13,080 --> 00:07:14,330
an instrument.

157
00:07:14,330 --> 00:07:17,220

158
00:07:17,220 --> 00:07:19,260
They take samples of,
like, a piano at

159
00:07:19,260 --> 00:07:22,180
different types of hits.

160
00:07:22,180 --> 00:07:25,560
And then they combine them
together to make this sound

161
00:07:25,560 --> 00:07:29,730
font that spans the whole
voicing range of a piano.

162
00:07:29,730 --> 00:07:37,530
And the MIDI.js project, it just
basically allows you to

163
00:07:37,530 --> 00:07:42,235
use one of those sound fonts and
then encode it into MP3 or

164
00:07:42,235 --> 00:07:43,400
Aug format.

165
00:07:43,400 --> 00:07:45,810
And then, you can include
it in your project.

166
00:07:45,810 --> 00:07:47,980
It's not a really, really great

167
00:07:47,980 --> 00:07:51,140
representation of the sounds.

168
00:07:51,140 --> 00:07:54,820
But for piano and short hit
instruments, like a guitar, it

169
00:07:54,820 --> 00:07:57,040
works really well.

170
00:07:57,040 --> 00:08:01,250
In the future, as the MIDI API
is actually introduced, that

171
00:08:01,250 --> 00:08:03,340
will be extremely exciting.

172
00:08:03,340 --> 00:08:05,392
I'm not sure if you've heard
about that at all?

173
00:08:05,392 --> 00:08:09,620
But the W3C is actually starting
to put together the

174
00:08:09,620 --> 00:08:11,130
specs for the MIDI API.

175
00:08:11,130 --> 00:08:12,050
PAUL IRISH: For MIDI?

176
00:08:12,050 --> 00:08:12,510
Yeah.

177
00:08:12,510 --> 00:08:16,220
I've seen a little
bit of that.

178
00:08:16,220 --> 00:08:19,700
So MIDI.js is pretty powerful.

179
00:08:19,700 --> 00:08:23,100
And so there's a lot of things
going on inside of it.

180
00:08:23,100 --> 00:08:29,700

181
00:08:29,700 --> 00:08:31,650
The output all goes through
the Web Audio

182
00:08:31,650 --> 00:08:32,330
API, is there right?

183
00:08:32,330 --> 00:08:33,820
MICHEAL DEAL: That's correct.

184
00:08:33,820 --> 00:08:34,929
PAUL IRISH: Cool.

185
00:08:34,929 --> 00:08:38,659
And Web Audio API
is somewhat new.

186
00:08:38,659 --> 00:08:40,140
I think it's been out shipping
in Chrome for

187
00:08:40,140 --> 00:08:42,130
about a year or so.

188
00:08:42,130 --> 00:08:43,419
MICHEAL DEAL: Yeah, that
sounds about right.

189
00:08:43,419 --> 00:08:47,650
PAUL IRISH: But just recently,
we heard that Mozilla will be

190
00:08:47,650 --> 00:08:50,870
developing their own
implementation of what Web

191
00:08:50,870 --> 00:08:53,090
Audio API, which resolves a

192
00:08:53,090 --> 00:08:56,960
longstanding kind of situation.

193
00:08:56,960 --> 00:08:58,260
MICHEAL DEAL: With
Audio Video API.

194
00:08:58,260 --> 00:08:59,070
PAUL IRISH: Yeah, exactly.

195
00:08:59,070 --> 00:09:01,150
So I think that was good news.

196
00:09:01,150 --> 00:09:05,130
Everyone was pretty
excited about it.

197
00:09:05,130 --> 00:09:08,990
And so with MIDI.js, a few other
people, I think, have

198
00:09:08,990 --> 00:09:11,930
already used this,
is that right?

199
00:09:11,930 --> 00:09:13,860
MICHEAL DEAL: Yes,
that's correct.

200
00:09:13,860 --> 00:09:16,250
A buddy of mine used it to
create a little Simon Says

201
00:09:16,250 --> 00:09:16,920
application.

202
00:09:16,920 --> 00:09:20,340
And another guy created a really
cool application where

203
00:09:20,340 --> 00:09:26,390
you can actually watch MIDI
drop down as if it was the

204
00:09:26,390 --> 00:09:27,840
intro to Star Wars.

205
00:09:27,840 --> 00:09:28,380
PAUL IRISH: Cool.

206
00:09:28,380 --> 00:09:31,020
We can actually bring that
up here in this case.

207
00:09:31,020 --> 00:09:33,845
So the project's
called Euphony.

208
00:09:33,845 --> 00:09:35,003
Is that right?

209
00:09:35,003 --> 00:09:35,930
MICHEAL DEAL: That's correct.

210
00:09:35,930 --> 00:09:39,280
PAUL IRISH: And so Euphony
is a Chrome experiment.

211
00:09:39,280 --> 00:09:39,800
And so--

212
00:09:39,800 --> 00:09:40,170
[PIANO PLAYING]

213
00:09:40,170 --> 00:09:44,090
PAUL IRISH: --we can get
a view of it here.

214
00:09:44,090 --> 00:09:52,020
So here we have a MIDI going
through MIDI.js.

215
00:09:52,020 --> 00:09:56,630
I think the visualization
is in 3.js.

216
00:09:56,630 --> 00:09:59,840
And we can pan around
with the mouse.

217
00:09:59,840 --> 00:10:05,050
We can use the scroll wheel to
zoom in and out and get a view

218
00:10:05,050 --> 00:10:11,080
of all the sound as it plays
through the keys.

219
00:10:11,080 --> 00:10:13,470
It's a really cool visualization
of music.

220
00:10:13,470 --> 00:10:15,450
MICHEAL DEAL: They did a really
great job on that.

221
00:10:15,450 --> 00:10:17,370
That really blew my mind.

222
00:10:17,370 --> 00:10:20,370
And he also used Spark.js, which
is another library that

223
00:10:20,370 --> 00:10:22,860
you can use along with 3.js.

224
00:10:22,860 --> 00:10:24,780
PAUL IRISH: And what
does Spark.js do?

225
00:10:24,780 --> 00:10:27,452
MICHEAL DEAL: It's a
particle engine.

226
00:10:27,452 --> 00:10:30,330
PAUL IRISH: Oh, so that handles
when the note hit the

227
00:10:30,330 --> 00:10:32,830
key and it kind of blew up with
a little bit of glow.

228
00:10:32,830 --> 00:10:33,590
MICHEAL DEAL: Exactly.

229
00:10:33,590 --> 00:10:33,950
Yeah.

230
00:10:33,950 --> 00:10:34,500
PAUL IRISH: Yup.

231
00:10:34,500 --> 00:10:36,710
That's really great.

232
00:10:36,710 --> 00:10:37,000
Cool.

233
00:10:37,000 --> 00:10:44,090
So inside, I wanted to
touch on Events.js.

234
00:10:44,090 --> 00:10:48,340
And this is a library that
you've written and used in a

235
00:10:48,340 --> 00:10:49,560
few projects.

236
00:10:49,560 --> 00:10:51,590
Could you just give a
description of what

237
00:10:51,590 --> 00:10:52,480
Events.js--

238
00:10:52,480 --> 00:10:55,930
as it is pretty generically
named--

239
00:10:55,930 --> 00:10:57,925
what kind of things does
it capture and

240
00:10:57,925 --> 00:10:59,090
take care of for you?

241
00:10:59,090 --> 00:11:02,280
MICHEAL DEAL: Well, Events.js, I
pretty much include in every

242
00:11:02,280 --> 00:11:02,820
project I do.

243
00:11:02,820 --> 00:11:06,800
It makes it really, really easy
for me to develop for

244
00:11:06,800 --> 00:11:09,980
both mobile and desktop at the
same time without really even

245
00:11:09,980 --> 00:11:11,790
thinking about.

246
00:11:11,790 --> 00:11:16,975
It supports various gestures
like swiping, and rotating,

247
00:11:16,975 --> 00:11:19,100
and pinching, and stuff.

248
00:11:19,100 --> 00:11:24,210
And one cool thing is that you
can actually pinch with 10

249
00:11:24,210 --> 00:11:27,280
fingers or 12 fingers, which
isn't really that useful.

250
00:11:27,280 --> 00:11:29,800
But it's fun.

251
00:11:29,800 --> 00:11:34,000
PAUL IRISH: I think you could
use 10 fingers and a nose.

252
00:11:34,000 --> 00:11:39,330
And actually, recently I heard
that a tongue is conductive.

253
00:11:39,330 --> 00:11:40,580
MICHEAL DEAL: Oh,
there you go.

254
00:11:40,580 --> 00:11:41,590
PAUL IRISH: Yeah, so--

255
00:11:41,590 --> 00:11:42,720
MICHEAL DEAL: You can get
11 fingers in there.

256
00:11:42,720 --> 00:11:44,570
PAUL IRISH: If it was a drawing
app, you could draw

257
00:11:44,570 --> 00:11:45,820
with your tongue.

258
00:11:45,820 --> 00:11:47,140
I'm just saying you could.

259
00:11:47,140 --> 00:11:47,780
MICHEAL DEAL: I haven't
tried that yet.

260
00:11:47,780 --> 00:11:49,460
But I definitely will
give that a shot--

261
00:11:49,460 --> 00:11:50,780
PAUL IRISH: Works on iPads.

262
00:11:50,780 --> 00:11:53,030
MICHEAL DEAL: --right after
we're done here.

263
00:11:53,030 --> 00:11:54,280
PAUL IRISH: That's cool.

264
00:11:54,280 --> 00:11:57,220

265
00:11:57,220 --> 00:12:02,970
It's a multi-finger pinch, zoom,
rotate, those kind of

266
00:12:02,970 --> 00:12:05,032
typical gestures that you see.

267
00:12:05,032 --> 00:12:05,380
MICHEAL DEAL: Right.

268
00:12:05,380 --> 00:12:06,860
Right.

269
00:12:06,860 --> 00:12:08,860
And yeah.

270
00:12:08,860 --> 00:12:12,610
And yeah.

271
00:12:12,610 --> 00:12:15,730
PAUL IRISH: And actually, I
think most people don't

272
00:12:15,730 --> 00:12:21,330
understand the capability of
multi-touch JavaScript that we

273
00:12:21,330 --> 00:12:22,580
actually have available.

274
00:12:22,580 --> 00:12:26,880

275
00:12:26,880 --> 00:12:30,070
Not many people think that you
can actually check multiple

276
00:12:30,070 --> 00:12:33,600
touches at the same time and be
able to manifest with that.

277
00:12:33,600 --> 00:12:37,600
But it's actually
not too tricky.

278
00:12:37,600 --> 00:12:37,840
MICHEAL DEAL: No.

279
00:12:37,840 --> 00:12:41,620
It's basically exactly the same
as implementing a regular

280
00:12:41,620 --> 00:12:44,790
touch, or regular pointer
click, except for you're

281
00:12:44,790 --> 00:12:46,710
working with an array.

282
00:12:46,710 --> 00:12:47,920
You're working with three
different arrays.

283
00:12:47,920 --> 00:12:51,390
But you only really have
to work with one array.

284
00:12:51,390 --> 00:12:55,340
So yeah, they did a
really good job of

285
00:12:55,340 --> 00:12:56,880
implementing that, I think.

286
00:12:56,880 --> 00:12:59,430
PAUL IRISH: Great.

287
00:12:59,430 --> 00:13:02,700
OK, so let's take a look at
another one of your projects.

288
00:13:02,700 --> 00:13:04,810
This one is called Sphere.

289
00:13:04,810 --> 00:13:11,420
And Sphere is a way
to kind of view a

290
00:13:11,420 --> 00:13:14,540
series of color palates.

291
00:13:14,540 --> 00:13:16,810
Is that how you'd describe it?

292
00:13:16,810 --> 00:13:18,520
MICHEAL DEAL: Color
harmony formulas.

293
00:13:18,520 --> 00:13:19,390
PAUL IRISH: OK.

294
00:13:19,390 --> 00:13:20,680
Color harmony formulas.

295
00:13:20,680 --> 00:13:24,300
And so we have a different few
formulas to pick from, the

296
00:13:24,300 --> 00:13:29,840
triadic, the five tone,
or the clash.

297
00:13:29,840 --> 00:13:33,850
We can manipulate hue all in
one go, or we can play with

298
00:13:33,850 --> 00:13:35,880
saturation.

299
00:13:35,880 --> 00:13:41,800
But really get an interesting
palette that prescribes to

300
00:13:41,800 --> 00:13:45,980
certain color theory that
I'm not terribly

301
00:13:45,980 --> 00:13:48,370
familiar with, right?

302
00:13:48,370 --> 00:13:49,830
MICHEAL DEAL: And that's one
theme in my project,

303
00:13:49,830 --> 00:13:53,280
generally, is that I don't know
anything about something.

304
00:13:53,280 --> 00:13:55,080
And so I really want
to program it.

305
00:13:55,080 --> 00:13:57,140
And that's how I learn.

306
00:13:57,140 --> 00:14:01,760
Like Color Piano or the Color
Sphere, it's all just a big

307
00:14:01,760 --> 00:14:03,310
learning process for me.

308
00:14:03,310 --> 00:14:06,160
PAUL IRISH: Cool.

309
00:14:06,160 --> 00:14:09,100
So yeah, we can take a look
at Color Piano now.

310
00:14:09,100 --> 00:14:13,940
So Color Piano is similar to
what we saw with Euphony.

311
00:14:13,940 --> 00:14:22,810
And we have a 2D visualization
of sound going into keys.

312
00:14:22,810 --> 00:14:26,120
And here, we have a number of
your projects coming into

313
00:14:26,120 --> 00:14:27,080
this, right?

314
00:14:27,080 --> 00:14:31,650
We have MIDI.js, Events,js.

315
00:14:31,650 --> 00:14:35,690
I would take a look at the
script, but it's MIDI-fied, as

316
00:14:35,690 --> 00:14:38,510
it should be.

317
00:14:38,510 --> 00:14:42,415
It's actually not
even coming up.

318
00:14:42,415 --> 00:14:47,060

319
00:14:47,060 --> 00:14:48,310
There we go.

320
00:14:48,310 --> 00:14:56,290

321
00:14:56,290 --> 00:14:59,013
Was there any tricky part
in creating Color Piano?

322
00:14:59,013 --> 00:14:59,940
MICHEAL DEAL: Oh yeah.

323
00:14:59,940 --> 00:15:02,750
It's been a really long
process, actually.

324
00:15:02,750 --> 00:15:08,460
I think I started in 2007 just
toying with the idea.

325
00:15:08,460 --> 00:15:12,160
But the really big problem was
there was no way to make

326
00:15:12,160 --> 00:15:15,070
sounds, make the sound
part of it.

327
00:15:15,070 --> 00:15:17,360
So it would work, like, you
know, you could see, visually,

328
00:15:17,360 --> 00:15:19,315
what was going on, but you
couldn't actually hear what

329
00:15:19,315 --> 00:15:20,220
was going on.

330
00:15:20,220 --> 00:15:22,690
And so I made a little widget
for the canvas,

331
00:15:22,690 --> 00:15:24,455
or the Apple desktop.

332
00:15:24,455 --> 00:15:27,110

333
00:15:27,110 --> 00:15:30,700
And then I made a little API
that ties into Java native

334
00:15:30,700 --> 00:15:32,050
interface, which was cool.

335
00:15:32,050 --> 00:15:35,710
But you had start up Java
to get it working.

336
00:15:35,710 --> 00:15:39,560
And so finally, HTML5 came
out with the audio

337
00:15:39,560 --> 00:15:40,260
tag, which was cool.

338
00:15:40,260 --> 00:15:44,665
But it still sounded like there
was a drunken, I don't

339
00:15:44,665 --> 00:15:48,080
know, a drunken pirate
playing the piano.

340
00:15:48,080 --> 00:15:50,360
PAUL IRISH: Yeah, it didn't
pick up on the

341
00:15:50,360 --> 00:15:52,570
responsivity of the audio.

342
00:15:52,570 --> 00:15:55,230
It was higher latency then
you needed it to be.

343
00:15:55,230 --> 00:15:55,550
MICHEAL DEAL: Totally.

344
00:15:55,550 --> 00:15:59,240
Which was kind of artistic and
fun, in a way, hearing my

345
00:15:59,240 --> 00:16:01,460
computer sound like
a drunken pirate.

346
00:16:01,460 --> 00:16:04,120
But it wasn't what
I looking for.

347
00:16:04,120 --> 00:16:07,410
And so when the Web Audio API
came out, the coolest thing,

348
00:16:07,410 --> 00:16:12,480
in my opinion, about it was
that it allows you to plan

349
00:16:12,480 --> 00:16:15,000
notes to hit at exactly
a specific time.

350
00:16:15,000 --> 00:16:18,800

351
00:16:18,800 --> 00:16:20,160
That's what makes it possible.

352
00:16:20,160 --> 00:16:21,540
PAUL IRISH: Yeah.

353
00:16:21,540 --> 00:16:23,450
Yeah, it's great and it's
really well developed.

354
00:16:23,450 --> 00:16:28,135
And you said that Color Piano
is even used in schools.

355
00:16:28,135 --> 00:16:30,000
MICHEAL DEAL: Yeah, that's
what I've heard.

356
00:16:30,000 --> 00:16:32,640
It's really thrilling
to be part of

357
00:16:32,640 --> 00:16:33,890
the educational process.

358
00:16:33,890 --> 00:16:36,520

359
00:16:36,520 --> 00:16:39,600
One theme you might notice in
all my projects is that I try

360
00:16:39,600 --> 00:16:41,550
to teach people stuff.

361
00:16:41,550 --> 00:16:43,755
And so, yeah.

362
00:16:43,755 --> 00:16:46,300
So It was just really
cool to hear.

363
00:16:46,300 --> 00:16:49,650
There was a school in Canada and
then there is a school in

364
00:16:49,650 --> 00:16:52,220
Eastern America.

365
00:16:52,220 --> 00:16:53,500
PAUL IRISH: That's very cool.

366
00:16:53,500 --> 00:16:57,080
So actually, one of the things
that I'm seeing on the Color

367
00:16:57,080 --> 00:16:59,400
Piano, and I see it in a few
of your projects, is this

368
00:16:59,400 --> 00:17:01,080
loading spinner.

369
00:17:01,080 --> 00:17:03,450
That's kind of a common
component that you use across

370
00:17:03,450 --> 00:17:04,700
a few of these apps.

371
00:17:04,700 --> 00:17:07,020

372
00:17:07,020 --> 00:17:09,630
I'm just curious, in this
particular component, how is

373
00:17:09,630 --> 00:17:11,829
it created?

374
00:17:11,829 --> 00:17:12,839
MICHEAL DEAL: That's
a Canvas element.

375
00:17:12,839 --> 00:17:19,310
It uses Bezier curves to create
rounded rectangles.

376
00:17:19,310 --> 00:17:23,640
And it uses the global
composition lighter to blend

377
00:17:23,640 --> 00:17:25,950
the colors together
in a nice way.

378
00:17:25,950 --> 00:17:27,420
And actually, I'll be releasing

379
00:17:27,420 --> 00:17:30,610
that Loader.js sometime.

380
00:17:30,610 --> 00:17:33,020
I could do it this week if
people are interested in it.

381
00:17:33,020 --> 00:17:34,780
But I just haven't gotten
around to it yet.

382
00:17:34,780 --> 00:17:36,230
But that's definitely
in the books.

383
00:17:36,230 --> 00:17:37,850
PAUL IRISH: Cool.

384
00:17:37,850 --> 00:17:39,200
That's great.

385
00:17:39,200 --> 00:17:46,210
How do you handle, like, you
have a lot of projects where

386
00:17:46,210 --> 00:17:48,910
you're using new APIs.

387
00:17:48,910 --> 00:17:53,350
How do you handle the situation
of the browser

388
00:17:53,350 --> 00:17:54,750
doesn't support it?

389
00:17:54,750 --> 00:17:56,490
MICHEAL DEAL: Yeah, that's
good question.

390
00:17:56,490 --> 00:17:59,040
I mean, I've definitely gotten a
lot of flack in the past for

391
00:17:59,040 --> 00:18:02,210
not supporting IE6
back in the day.

392
00:18:02,210 --> 00:18:05,110

393
00:18:05,110 --> 00:18:07,940
But Flash Canvas is great.

394
00:18:07,940 --> 00:18:13,010
There's a lot Polyfills
available, as you're aware of.

395
00:18:13,010 --> 00:18:15,920

396
00:18:15,920 --> 00:18:17,580
PAUL IRISH: Do you make use
of these Polyfills?

397
00:18:17,580 --> 00:18:22,730
MICHEAL DEAL: Oh definitely,
like the BlobBuilder API and

398
00:18:22,730 --> 00:18:24,860
request animation frame.

399
00:18:24,860 --> 00:18:27,940
So, yeah, the Polyfills
are a real saver.

400
00:18:27,940 --> 00:18:30,870
Flash Canvas, in particular,
has been really great for

401
00:18:30,870 --> 00:18:34,650
supporting older browsers, like
IE6 and IE7, when using

402
00:18:34,650 --> 00:18:36,690
flash instead.

403
00:18:36,690 --> 00:18:37,880
PAUL IRISH: So it's something.

404
00:18:37,880 --> 00:18:42,040
And I guess these projects you
have a little bit of wiggle

405
00:18:42,040 --> 00:18:43,690
room as far as your
browser support.

406
00:18:43,690 --> 00:18:48,010
But you normally shoot for try
and include IE8 if you can.

407
00:18:48,010 --> 00:18:52,160
But sometimes, depending on
how much audio there is, I

408
00:18:52,160 --> 00:18:54,010
guess you're limited.

409
00:18:54,010 --> 00:18:54,600
MICHEAL DEAL: Absolutley.

410
00:18:54,600 --> 00:18:56,700
I mean, I try to support as
many people as possible.

411
00:18:56,700 --> 00:18:59,690
But there's only so much
time in the day to

412
00:18:59,690 --> 00:19:00,570
support those things.

413
00:19:00,570 --> 00:19:02,640
And it's a lot more
fun to build new

414
00:19:02,640 --> 00:19:04,300
applications, obviously.

415
00:19:04,300 --> 00:19:06,130
It's nice when the browsers
actually support them out of

416
00:19:06,130 --> 00:19:10,050
the box, like IE9, which I'm
pretty stoked about.

417
00:19:10,050 --> 00:19:12,040
And all new browsers really.

418
00:19:12,040 --> 00:19:14,840
It's just such a nice landscape
nowadays compared to

419
00:19:14,840 --> 00:19:16,390
what it was a few years ago.

420
00:19:16,390 --> 00:19:19,930
PAUL IRISH: Yeah, it's
definitely getting better.

421
00:19:19,930 --> 00:19:20,190
Great.

422
00:19:20,190 --> 00:19:24,280
And so I wanted to bring up
a more recent project that

423
00:19:24,280 --> 00:19:27,410
you've been working on
recently called--

424
00:19:27,410 --> 00:19:30,820
well, it's your 2.0
of Sketchpad.

425
00:19:30,820 --> 00:19:35,940
And so comparing this to your
earlier version a Sketchpad,

426
00:19:35,940 --> 00:19:39,300
it's a much more modern UI.

427
00:19:39,300 --> 00:19:42,360
Do you want to talk a little
bit about how this one is

428
00:19:42,360 --> 00:19:45,730
constructed and the
feature set here?

429
00:19:45,730 --> 00:19:46,490
MICHEAL DEAL: Sure.

430
00:19:46,490 --> 00:19:51,500
So Sketchpad 2.0 allows you
to create a drawing.

431
00:19:51,500 --> 00:19:53,170
You can undo, redo.

432
00:19:53,170 --> 00:19:55,850
All the layers are stored
in vectors.

433
00:19:55,850 --> 00:19:58,440
So you can change the color.

434
00:19:58,440 --> 00:20:01,150
If you're on a stamp brush,
you can change the type of

435
00:20:01,150 --> 00:20:02,830
stamp you're using.

436
00:20:02,830 --> 00:20:04,950
You can select multiple layers,
change multiple colors

437
00:20:04,950 --> 00:20:07,240
at the same time.

438
00:20:07,240 --> 00:20:11,980
And everything is stored into
JSON on the server, which then

439
00:20:11,980 --> 00:20:15,060
can be recreated later on.

440
00:20:15,060 --> 00:20:17,100
The images, you can drag
and drop images and

441
00:20:17,100 --> 00:20:18,730
SVGs into the browser.

442
00:20:18,730 --> 00:20:21,520
And then, you can play around
with image filters and stuff.

443
00:20:21,520 --> 00:20:24,130
And again, those are
non-destructive as well.

444
00:20:24,130 --> 00:20:25,380
PAUL IRISH: This is great.

445
00:20:25,380 --> 00:20:27,932

446
00:20:27,932 --> 00:20:36,870
And I just noticed you have a
little bit of effects with

447
00:20:36,870 --> 00:20:38,620
these dialogues coming up.

448
00:20:38,620 --> 00:20:40,290
Let me see if I can
load this back up.

449
00:20:40,290 --> 00:20:46,960

450
00:20:46,960 --> 00:20:48,930
Loading.

451
00:20:48,930 --> 00:20:50,890
MICHEAL DEAL: Oh, and I use the
Google font API, which is

452
00:20:50,890 --> 00:20:52,620
really, really fantastic.

453
00:20:52,620 --> 00:20:54,590
There's hundreds of fonts
available for

454
00:20:54,590 --> 00:20:57,300
developers to use.

455
00:20:57,300 --> 00:20:59,990
And the fonts, the text tool is
probably the hardest thing

456
00:20:59,990 --> 00:21:01,950
in there to do, actually.

457
00:21:01,950 --> 00:21:07,030
Because instead of having a text
box and then showing what

458
00:21:07,030 --> 00:21:11,590
the text looks like later, you
can just place your text and

459
00:21:11,590 --> 00:21:14,070
see exactly what it looks like
right on the screen, which

460
00:21:14,070 --> 00:21:17,030
involves figuring out the
metrics of the text, which

461
00:21:17,030 --> 00:21:18,440
isn't available.

462
00:21:18,440 --> 00:21:25,980
But you can find through
tricky CSS and HTML

463
00:21:25,980 --> 00:21:28,070
measurements and stuff.

464
00:21:28,070 --> 00:21:29,330
So it's possible,
which is cool.

465
00:21:29,330 --> 00:21:30,740
It took me a long time
to figure how.

466
00:21:30,740 --> 00:21:34,050
PAUL IRISH: Oh, detecting
the metrics of the text?

467
00:21:34,050 --> 00:21:36,590
MICHEAL DEAL: Yes, to detect
exactly where the text is on

468
00:21:36,590 --> 00:21:40,190
the screen so you can
create a text box.

469
00:21:40,190 --> 00:21:41,980
So that's just a
Canvas element.

470
00:21:41,980 --> 00:21:43,160
Everything's in Canvas.

471
00:21:43,160 --> 00:21:45,570
There's two layers of Canvas.

472
00:21:45,570 --> 00:21:47,820
No divs or anything like that.

473
00:21:47,820 --> 00:21:50,990
PAUL IRISH: So generally, how do
you detect the positioning

474
00:21:50,990 --> 00:21:52,270
of the text?

475
00:21:52,270 --> 00:21:55,670
MICHEAL DEAL: Well, so I've
got a little article on my

476
00:21:55,670 --> 00:21:59,190
website that goes over it.

477
00:21:59,190 --> 00:22:05,300
But basically, you would have
a div, a dummy div.

478
00:22:05,300 --> 00:22:06,900
And you'd put some
text into it.

479
00:22:06,900 --> 00:22:12,940
And then you'd apply text
baseline bottom or whatever.

480
00:22:12,940 --> 00:22:14,910
Different things to measure
different types of things,

481
00:22:14,910 --> 00:22:16,900
like where the center line is,
where the bottom of it is,

482
00:22:16,900 --> 00:22:18,570
where the top of it is.

483
00:22:18,570 --> 00:22:21,520
And then there's
also overhangs.

484
00:22:21,520 --> 00:22:26,240
So sometimes text goes outside
of a box, ascenders and

485
00:22:26,240 --> 00:22:27,350
descenders.

486
00:22:27,350 --> 00:22:31,220
And so for that you have to
actually calculate the pixel.

487
00:22:31,220 --> 00:22:35,860
So you have to run it through a
bounding box calculation to

488
00:22:35,860 --> 00:22:39,290
find out where the actual edges
of the ascenders and

489
00:22:39,290 --> 00:22:40,572
descenders are.

490
00:22:40,572 --> 00:22:41,150
Which is tricky.

491
00:22:41,150 --> 00:22:45,790
PAUL IRISH: Are you taking,
literally, the lowercase x to

492
00:22:45,790 --> 00:22:48,530
determine the x height and
finding out where the pixels

493
00:22:48,530 --> 00:22:52,120
end from a vertical
perspective are?

494
00:22:52,120 --> 00:22:54,400
MICHEAL DEAL: The thing, that
was the original idea.

495
00:22:54,400 --> 00:22:58,810
But the thing is, the x height,
it doesn't really hold

496
00:22:58,810 --> 00:23:01,020
through as much as you'd
hope it would.

497
00:23:01,020 --> 00:23:04,220
But everything's actually
calculated on demand.

498
00:23:04,220 --> 00:23:07,390
So if you write in a paragraph,
then it will

499
00:23:07,390 --> 00:23:09,320
calculate each letter
individually.

500
00:23:09,320 --> 00:23:12,170

501
00:23:12,170 --> 00:23:13,430
It uses the--

502
00:23:13,430 --> 00:23:15,965

503
00:23:15,965 --> 00:23:18,135
I forget.

504
00:23:18,135 --> 00:23:22,730
It uses some sort
of funny text.

505
00:23:22,730 --> 00:23:26,060
Here, let me check it
out real quick.

506
00:23:26,060 --> 00:23:27,930
Refresh.

507
00:23:27,930 --> 00:23:30,250
PAUL IRISH: Oh yeah, I was
going to mention a few of

508
00:23:30,250 --> 00:23:33,100
these dialogues.

509
00:23:33,100 --> 00:23:36,770
We have this nice effect where
it pops the screen out from a

510
00:23:36,770 --> 00:23:39,320
transform perspective.

511
00:23:39,320 --> 00:23:43,240
And these are actually from
another developer?

512
00:23:43,240 --> 00:23:43,500
MICHEAL DEAL: Yes.

513
00:23:43,500 --> 00:23:44,390
That's from Hakim.

514
00:23:44,390 --> 00:23:46,680
He's a developer
over at Qwiki.

515
00:23:46,680 --> 00:23:48,690
And he's just fantastic.

516
00:23:48,690 --> 00:23:50,740
He makes different models.

517
00:23:50,740 --> 00:23:54,440
And he's been putting them out
a lot in the last year.

518
00:23:54,440 --> 00:23:59,550
And they really make your
application just pop.

519
00:23:59,550 --> 00:24:01,820
My application didn't really
look that cool.

520
00:24:01,820 --> 00:24:03,460
And then I threw
that in there.

521
00:24:03,460 --> 00:24:07,002
And all of a sudden I was like,
wow, this is so cool.

522
00:24:07,002 --> 00:24:07,480
PAUL IRISH: It's look great.

523
00:24:07,480 --> 00:24:08,230
It has a really good affect.

524
00:24:08,230 --> 00:24:10,040
MICHEAL DEAL: It's super
appreciated that you he puts

525
00:24:10,040 --> 00:24:11,420
that stuff out there for us.

526
00:24:11,420 --> 00:24:14,500

527
00:24:14,500 --> 00:24:16,150
PAUL IRISH: So--

528
00:24:16,150 --> 00:24:20,720
MICHEAL DEAL: But yeah, it's
Meny.js and avgrund.js.

529
00:24:20,720 --> 00:24:21,660
PAUL IRISH: Oh, OK.

530
00:24:21,660 --> 00:24:23,480
Meny.js?

531
00:24:23,480 --> 00:24:29,327
M-E-N-Y.js and avgrund,
A-V-G-R-U-N-D.js and he's got

532
00:24:29,327 --> 00:24:31,280
a bunch of other cool things
in there, too.

533
00:24:31,280 --> 00:24:33,790
PAUL IRISH: Very cool.

534
00:24:33,790 --> 00:24:36,830
So I wanted to ask you a little
bit of how you actually

535
00:24:36,830 --> 00:24:38,080
do your development.

536
00:24:38,080 --> 00:24:41,230

537
00:24:41,230 --> 00:24:42,970
What is your workflow
as far as the

538
00:24:42,970 --> 00:24:44,240
editor that you're using?

539
00:24:44,240 --> 00:24:45,810
Do you use Lyntin?

540
00:24:45,810 --> 00:24:48,330
How do you iterate
on your project?

541
00:24:48,330 --> 00:24:51,290
Do you write unit tests
for these apps?

542
00:24:51,290 --> 00:24:54,010
That kind of development
experience of these things.

543
00:24:54,010 --> 00:24:55,350
MICHEAL DEAL: Sure.

544
00:24:55,350 --> 00:24:58,700
Well, I definitely think unit
tests are a really great idea

545
00:24:58,700 --> 00:25:00,340
and it's something that I'm
going to get into soon,

546
00:25:00,340 --> 00:25:05,170
because otherwise you're
going to get OCD.

547
00:25:05,170 --> 00:25:08,570
Or not OCD, but repetitive
stress

548
00:25:08,570 --> 00:25:09,560
problems with your wrist.

549
00:25:09,560 --> 00:25:15,740
But so I do all my programming
in DBEdit right now.

550
00:25:15,740 --> 00:25:18,190
I tried to switch over
to Sublime Text.

551
00:25:18,190 --> 00:25:21,500
But the DIF wasn't quite
up to my standards.

552
00:25:21,500 --> 00:25:24,720
But Sublime Text is looking
really, really cool.

553
00:25:24,720 --> 00:25:27,810
But right now I'm still using
DBEdit for everything.

554
00:25:27,810 --> 00:25:29,710
PAUL IRISH: Yeah.

555
00:25:29,710 --> 00:25:33,815
And do you use source
control locally?

556
00:25:33,815 --> 00:25:36,650

557
00:25:36,650 --> 00:25:39,700
Are you using something
like JSHint or JSLint?

558
00:25:39,700 --> 00:25:42,740
Just to check your sanity
as far as when

559
00:25:42,740 --> 00:25:44,510
you're writing code?

560
00:25:44,510 --> 00:25:48,350
PAUL IRISH: I use jsbeautifier
to make my code pretty.

561
00:25:48,350 --> 00:25:53,030
But as I far as sanity checking
, I take it into

562
00:25:53,030 --> 00:25:55,420
older browsers to see
if it breaks.

563
00:25:55,420 --> 00:26:00,520
And then go from there.

564
00:26:00,520 --> 00:26:03,110
But I mean, that's definitely
another thing that I probably

565
00:26:03,110 --> 00:26:03,960
should be doing.

566
00:26:03,960 --> 00:26:06,900
But I haven't been.

567
00:26:06,900 --> 00:26:08,360
PAUL IRISH: Understandably.

568
00:26:08,360 --> 00:26:13,260
Yeah, I mean, I ask because
with applications of this

569
00:26:13,260 --> 00:26:16,160
scale, it starts
to get tricky.

570
00:26:16,160 --> 00:26:16,930
You'll have a bug.

571
00:26:16,930 --> 00:26:18,040
And you think you fixed it.

572
00:26:18,040 --> 00:26:20,540
And it'll come back.

573
00:26:20,540 --> 00:26:22,800
It's a little tricky
to manage.

574
00:26:22,800 --> 00:26:26,300
So you mentioned before, you
find yourself writing your

575
00:26:26,300 --> 00:26:28,700
apps as far as smaller
libraries and

576
00:26:28,700 --> 00:26:31,770
modules coupled together.

577
00:26:31,770 --> 00:26:35,470
What's your system for building
out those central

578
00:26:35,470 --> 00:26:37,380
components?

579
00:26:37,380 --> 00:26:39,430
MICHEAL DEAL: Well, I
like to start a new

580
00:26:39,430 --> 00:26:42,970
project as much as possible.

581
00:26:42,970 --> 00:26:47,240
It's really nice, because
it just clears my mind.

582
00:26:47,240 --> 00:26:48,790
When you're working on a really
big project, you have

583
00:26:48,790 --> 00:26:50,245
all this stuff loaded
into your mind.

584
00:26:50,245 --> 00:26:51,730
And there's just
so many things.

585
00:26:51,730 --> 00:26:55,830
But if you can get it into a
small component, like just

586
00:26:55,830 --> 00:26:59,880
some sort of an effect or
something, then it just makes

587
00:26:59,880 --> 00:27:01,360
it so much more simple.

588
00:27:01,360 --> 00:27:03,295
So I put everything
in a sandbox.

589
00:27:03,295 --> 00:27:06,470

590
00:27:06,470 --> 00:27:09,025
And then I just plug away
at it from there.

591
00:27:09,025 --> 00:27:12,010

592
00:27:12,010 --> 00:27:14,920
But actually, for my SVG
support, I did do some sort of

593
00:27:14,920 --> 00:27:20,210
testing where you can put
the SVG in there.

594
00:27:20,210 --> 00:27:21,860
Then to the left of that,
you'll see what it

595
00:27:21,860 --> 00:27:22,480
looks like in Canvas.

596
00:27:22,480 --> 00:27:24,110
Then you'll look to the
bottom of that.

597
00:27:24,110 --> 00:27:26,750
And you'll see what it looks
like in Canvas re-rendered

598
00:27:26,750 --> 00:27:28,680
through my VOB format.

599
00:27:28,680 --> 00:27:31,650
And then on the bottom right,
you can see what it looks back

600
00:27:31,650 --> 00:27:33,990
in SVG after it goes
back all around.

601
00:27:33,990 --> 00:27:36,290
And it's supposed to look
the same both ways.

602
00:27:36,290 --> 00:27:40,360
So visual testing, I've done
that a little bit, which is

603
00:27:40,360 --> 00:27:41,360
really handy.

604
00:27:41,360 --> 00:27:42,640
I'm more of a visual guy.

605
00:27:42,640 --> 00:27:43,320
PAUL IRISH: Yeah.

606
00:27:43,320 --> 00:27:44,010
Absolutely.

607
00:27:44,010 --> 00:27:48,630
So you make use of a lot of
really great techniques.

608
00:27:48,630 --> 00:27:52,320

609
00:27:52,320 --> 00:27:54,730
Where do you pick up
these techniques?

610
00:27:54,730 --> 00:27:58,060
What sites are you reading,
people do you follow to keep

611
00:27:58,060 --> 00:27:59,600
track of that sort of stuff?

612
00:27:59,600 --> 00:28:02,310
MICHEAL DEAL: Oh gosh, back in
the day it used to be Ajaxian.

613
00:28:02,310 --> 00:28:04,540
That was really cool.

614
00:28:04,540 --> 00:28:05,890
Badass JS is cool.

615
00:28:05,890 --> 00:28:08,750
Creative JS is great.

616
00:28:08,750 --> 00:28:10,410
Twitter is amazing.

617
00:28:10,410 --> 00:28:13,650
Twitter seems to be the place
right now to really get

618
00:28:13,650 --> 00:28:16,280
inspired and see everything
that's happening, if you

619
00:28:16,280 --> 00:28:17,840
follow people like you.

620
00:28:17,840 --> 00:28:21,450

621
00:28:21,450 --> 00:28:23,640
There's all sorts of great
people out there

622
00:28:23,640 --> 00:28:26,170
posting these things.

623
00:28:26,170 --> 00:28:28,580
Chrome experiments, obviously,
you get a lot

624
00:28:28,580 --> 00:28:29,880
of inspiration there.

625
00:28:29,880 --> 00:28:33,060

626
00:28:33,060 --> 00:28:36,180
I mean, I just basically try
to keep a pulse on what's

627
00:28:36,180 --> 00:28:39,440
going on as much as possible.

628
00:28:39,440 --> 00:28:46,110
And I just focus on trying to
stay up to date as much as

629
00:28:46,110 --> 00:28:48,400
possible as to what
people are doing.

630
00:28:48,400 --> 00:28:51,600
It's really mind blowing what
people are doing nowadays.

631
00:28:51,600 --> 00:28:54,066
It's just insane.

632
00:28:54,066 --> 00:28:56,290
I'm really impressed with
the 3D work, especially.

633
00:28:56,290 --> 00:29:01,890
PAUL IRISH: Yeah, yeah, having
all the 2D graphics APIs that

634
00:29:01,890 --> 00:29:06,910
we have now combining with
what's available on audio and

635
00:29:06,910 --> 00:29:11,510
the experience is getting pretty
heavy pretty quick.

636
00:29:11,510 --> 00:29:14,510
Pointer lock just landed in
Chrome a little bit ago.

637
00:29:14,510 --> 00:29:15,760
That's more of a 3D thing.

638
00:29:15,760 --> 00:29:20,150
But there's a lot going on.

639
00:29:20,150 --> 00:29:21,760
So it's pretty exciting.

640
00:29:21,760 --> 00:29:23,790
MICHEAL DEAL: Yeah, it's so
nice that you can finally

641
00:29:23,790 --> 00:29:28,180
control, basically, all the
outputs the computer has.

642
00:29:28,180 --> 00:29:29,142
You've got the audio control.

643
00:29:29,142 --> 00:29:30,600
You've got the pixel control.

644
00:29:30,600 --> 00:29:34,080
And so you can do, basically,
most things you need to do.

645
00:29:34,080 --> 00:29:36,340
The file management's still
not quite there.

646
00:29:36,340 --> 00:29:38,090
But they're making a lot
of progress on it.

647
00:29:38,090 --> 00:29:40,820
It's really cool to see all the
new things they're doing

648
00:29:40,820 --> 00:29:42,890
there, too.

649
00:29:42,890 --> 00:29:47,340
And obviously, connecting into
MIDI ports and stuff like

650
00:29:47,340 --> 00:29:54,210
that, game control API, which is
really interesting as well.

651
00:29:54,210 --> 00:29:55,130
PAUL IRISH: Cool.

652
00:29:55,130 --> 00:29:56,030
Well this is great.

653
00:29:56,030 --> 00:29:59,990
And so I encourage everyone to
go and check out your blog.

654
00:29:59,990 --> 00:30:06,080
It's over at MUDCU.be

655
00:30:06,080 --> 00:30:06,480
MICHEAL DEAL: MUDCUBE.

656
00:30:06,480 --> 00:30:06,760
PAUL IRISH: Yeah.

657
00:30:06,760 --> 00:30:08,130
It's on MUDCUBE.

658
00:30:08,130 --> 00:30:08,820
You'll find it.

659
00:30:08,820 --> 00:30:11,980
And so it goes through
all your projects.

660
00:30:11,980 --> 00:30:14,660
We went through the
older Sketchpad

661
00:30:14,660 --> 00:30:15,580
and the newer Sketchpad.

662
00:30:15,580 --> 00:30:17,830
But you also ported
this to mobile.

663
00:30:17,830 --> 00:30:21,290
It's called Sketch Mobile and
has a new interface that's

664
00:30:21,290 --> 00:30:25,840
designed exclusively for touch
and smaller screens.

665
00:30:25,840 --> 00:30:27,680
So it's fantastic.

666
00:30:27,680 --> 00:30:31,990
And it walks through a lot of
your other projects and all

667
00:30:31,990 --> 00:30:36,650
the stuff that you put out
there, including the colored

668
00:30:36,650 --> 00:30:38,650
website and community that we
didn't even get a chance to

669
00:30:38,650 --> 00:30:39,800
touch on today.

670
00:30:39,800 --> 00:30:40,540
But they have a lot.

671
00:30:40,540 --> 00:30:44,710
It's a great community around
color, color palates.

672
00:30:44,710 --> 00:30:51,980
Probably the best gradient
creation tool that I've seen

673
00:30:51,980 --> 00:30:53,060
is inside colored.

674
00:30:53,060 --> 00:30:55,000
So excellent stuff.

675
00:30:55,000 --> 00:30:55,973
So I encourage everyone to--

676
00:30:55,973 --> 00:30:56,680
MICHEAL DEAL: Thank
you so much.

677
00:30:56,680 --> 00:30:59,750
That was a collaborative project
with my buddy Daniel

678
00:30:59,750 --> 00:31:01,660
Christopher, who works
right next to me.

679
00:31:01,660 --> 00:31:05,130
We've been working together
for the last 12

680
00:31:05,130 --> 00:31:05,960
years a little bit.

681
00:31:05,960 --> 00:31:07,732
PAUL IRISH: Nice.

682
00:31:07,732 --> 00:31:10,130
Cool.

683
00:31:10,130 --> 00:31:18,030
And so follow Michael on both
GitHub and Twitter, at MUDCUBE

684
00:31:18,030 --> 00:31:20,230
on G+, @MichealDeal.

685
00:31:20,230 --> 00:31:22,460
And that's about it.

686
00:31:22,460 --> 00:31:24,690
So Michael, thank you very
much for joining us.

687
00:31:24,690 --> 00:31:26,305
This has been fantastic.

688
00:31:26,305 --> 00:31:27,852
MICHEAL DEAL: Well, thank you
so much for having me.

689
00:31:27,852 --> 00:31:30,700
You guys have a great day
and enjoy the rest

690
00:31:30,700 --> 00:31:31,900
of the summer here.

691
00:31:31,900 --> 00:31:32,440
PAUL IRISH: Cool.

692
00:31:32,440 --> 00:31:33,040
We will.

693
00:31:33,040 --> 00:31:33,390
Awesome.

694
00:31:33,390 --> 00:31:34,140
Thanks very much.

695
00:31:34,140 --> 00:31:34,440
Bye.

696
00:31:34,440 --> 00:31:34,740
MICHEAL DEAL: All right.

697
00:31:34,740 --> 00:31:35,040
Take care.

698
00:31:35,040 --> 00:31:36,290
Bye-bye.

699
00:31:36,290 --> 00:31:43,033

