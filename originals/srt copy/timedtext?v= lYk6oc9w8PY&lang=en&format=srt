1
00:00:00,000 --> 00:00:18,450

2
00:00:18,450 --> 00:00:18,620
PAUL KINLAN: Hi.

3
00:00:18,620 --> 00:00:20,030
Everyone.

4
00:00:20,030 --> 00:00:21,720
Welcome to "Two Pauls
in a Pod" show.

5
00:00:21,720 --> 00:00:22,470
PAUL LEWIS: Yes!

6
00:00:22,470 --> 00:00:22,820
PAUL KINLAN: Yes.

7
00:00:22,820 --> 00:00:23,460
We wanted to say this.

8
00:00:23,460 --> 00:00:24,820
I'm Paul Kinlan.

9
00:00:24,820 --> 00:00:25,800
PAUL LEWIS: I'm Paul Lewis.

10
00:00:25,800 --> 00:00:26,240
PAUL KINLAN: Yes.

11
00:00:26,240 --> 00:00:27,400
You nearly forgot who you
were there for a second?

12
00:00:27,400 --> 00:00:28,490
PAUL LEWIS: No, well, I didn't
know if you were going to

13
00:00:28,490 --> 00:00:29,270
carry on talking.

14
00:00:29,270 --> 00:00:30,910
I thought it'd be better
if I just jumped

15
00:00:30,910 --> 00:00:31,750
in there, you know?

16
00:00:31,750 --> 00:00:32,820
PAUL KINLAN: Yeah, I got you.

17
00:00:32,820 --> 00:00:33,870
OK, so yeah, he's Paul Lewis.

18
00:00:33,870 --> 00:00:36,560
I'm Paul Kinlan.

19
00:00:36,560 --> 00:00:37,500
I'm a developer advocate.

20
00:00:37,500 --> 00:00:38,480
You're a programming engineer.

21
00:00:38,480 --> 00:00:38,850
PAUL LEWIS: I am.

22
00:00:38,850 --> 00:00:41,090
PAUL KINLAN: We're working on
the Chrome apps initiative.

23
00:00:41,090 --> 00:00:43,530
We're based in London in
a really small room.

24
00:00:43,530 --> 00:00:45,880
We have an awesome producer,
Mark Lunney, who's completely

25
00:00:45,880 --> 00:00:47,180
off screen at the moment.

26
00:00:47,180 --> 00:00:49,040
But I just thought I'd
try and embarrass

27
00:00:49,040 --> 00:00:50,580
him live on the stage.

28
00:00:50,580 --> 00:00:50,920
PAUL LEWIS: Yeah.

29
00:00:50,920 --> 00:00:53,510
I like how you said that we're
in this little room in London.

30
00:00:53,510 --> 00:00:54,960
It makes it sound like
that's where we live.

31
00:00:54,960 --> 00:00:55,830
PAUL KINLAN: Yeah.

32
00:00:55,830 --> 00:00:58,410
PAUL LEWIS: Yeah, it's
not really full-time

33
00:00:58,410 --> 00:00:59,420
two Pauls in a pod.

34
00:00:59,420 --> 00:01:00,296
It could be, though.

35
00:01:00,296 --> 00:01:00,970
That'd be weird.

36
00:01:00,970 --> 00:01:01,600
PAUL KINLAN: I wouldn't mind.

37
00:01:01,600 --> 00:01:03,446
PAUL LEWIS: Well, yeah.

38
00:01:03,446 --> 00:01:04,844
So--

39
00:01:04,844 --> 00:01:06,710
PAUL KINLAN: On that note--

40
00:01:06,710 --> 00:01:07,710
PAUL LEWIS: Let's carry on.

41
00:01:07,710 --> 00:01:08,510
PAUL KINLAN: On that note,
let's carry on.

42
00:01:08,510 --> 00:01:11,480
So today's episode is
about the Chrome

43
00:01:11,480 --> 00:01:13,900
apps window in APIs.

44
00:01:13,900 --> 00:01:15,470
Chrome apps is a new
platform that we're

45
00:01:15,470 --> 00:01:16,330
building into Chrome.

46
00:01:16,330 --> 00:01:17,500
It's not yet in Stable.

47
00:01:17,500 --> 00:01:19,720
It's in Canary and Developer
channel.

48
00:01:19,720 --> 00:01:21,610
But we believe it's going to
give you the ability to build

49
00:01:21,610 --> 00:01:24,490
great web applications in the
future, applications that can

50
00:01:24,490 --> 00:01:27,360
do way more than a traditional
web application could do.

51
00:01:27,360 --> 00:01:29,890
So we can access network,
UDP, TCP, all

52
00:01:29,890 --> 00:01:31,040
those types of things.

53
00:01:31,040 --> 00:01:33,085
But the thing that we want to
try and do is tell you how you

54
00:01:33,085 --> 00:01:35,860
can build great applications
which use multiple windows.

55
00:01:35,860 --> 00:01:36,490
PAUL LEWIS: Yes.

56
00:01:36,490 --> 00:01:39,060
PAUL KINLAN: I think on the web
today we don't really have

57
00:01:39,060 --> 00:01:41,570
that many applications that
use multiple windows.

58
00:01:41,570 --> 00:01:42,120
PAUL LEWIS: No.

59
00:01:42,120 --> 00:01:45,241
PAUL KINLAN: Mostly single-page
web applications.

60
00:01:45,241 --> 00:01:48,150
PAUL LEWIS: Well, I think,
taking a step back, we're used

61
00:01:48,150 --> 00:01:51,700
to pop-up blockers and things
because multiple windows or

62
00:01:51,700 --> 00:01:53,570
pop-ups or whatever have been
a bit of a nuisance.

63
00:01:53,570 --> 00:01:54,410
PAUL KINLAN: Yeah.

64
00:01:54,410 --> 00:01:58,390
PAUL LEWIS: So because we're
in the Chrome apps

65
00:01:58,390 --> 00:02:00,620
environment, we're actually able
to kind of reassess that

66
00:02:00,620 --> 00:02:02,750
and say, well, actually,
multi-windows make sense for

67
00:02:02,750 --> 00:02:04,910
certain applications when you
say you've got panels to the

68
00:02:04,910 --> 00:02:07,010
side of your main view
or whatever.

69
00:02:07,010 --> 00:02:09,560
So I guess that's where
it kind of comes from.

70
00:02:09,560 --> 00:02:10,356
PAUL KINLAN: It's things
like-- you

71
00:02:10,356 --> 00:02:11,049
know Photoshop, right?

72
00:02:11,049 --> 00:02:11,340
PAUL LEWIS: Uh-huh.

73
00:02:11,340 --> 00:02:12,370
PAUL KINLAN: People expect
like a tools

74
00:02:12,370 --> 00:02:13,160
pop-up out to the side.

75
00:02:13,160 --> 00:02:13,770
PAUL LEWIS: Yeah,
that's right.

76
00:02:13,770 --> 00:02:15,434
PAUL KINLAN: You have multiple
image windows and all that

77
00:02:15,434 --> 00:02:15,680
type of stuff.

78
00:02:15,680 --> 00:02:18,370
How would you build an
application that orchestrates

79
00:02:18,370 --> 00:02:19,170
actions between them?

80
00:02:19,170 --> 00:02:20,010
PAUL LEWIS: Yes.

81
00:02:20,010 --> 00:02:21,700
PAUL KINLAN: I would just like
to add before we get into the

82
00:02:21,700 --> 00:02:24,130
code, Paul's going to show you
some really cool demos and

83
00:02:24,130 --> 00:02:25,910
everything like that.

84
00:02:25,910 --> 00:02:28,200
One is we have down below.

85
00:02:28,200 --> 00:02:28,700
We're trying it.

86
00:02:28,700 --> 00:02:30,090
Well, Paul's got it
completely wrong.

87
00:02:30,090 --> 00:02:31,740
But right down below,
we have--

88
00:02:31,740 --> 00:02:32,810
PAUL LEWIS: I have not.

89
00:02:32,810 --> 00:02:33,780
It's over there, right?

90
00:02:33,780 --> 00:02:34,470
There it is.

91
00:02:34,470 --> 00:02:35,294
PAUL KINLAN: There it is.

92
00:02:35,294 --> 00:02:37,680
PAUL LEWIS: Hey, I was just
pointing to the bottom.

93
00:02:37,680 --> 00:02:39,330
PAUL KINLAN: We would like
your questions, right?

94
00:02:39,330 --> 00:02:41,470
We want to basically answer as
many questions as possible

95
00:02:41,470 --> 00:02:44,180
during this session, just so
we can provide you with the

96
00:02:44,180 --> 00:02:45,240
best guidance possible.

97
00:02:45,240 --> 00:02:48,000
So if you check our Google link,
you'll go straight to

98
00:02:48,000 --> 00:02:48,910
our Moderator page.

99
00:02:48,910 --> 00:02:52,140
And you'll be able to vote on
questions that you like, down

100
00:02:52,140 --> 00:02:53,160
vote some that you don't like.

101
00:02:53,160 --> 00:02:54,683
We only have one question
so far.

102
00:02:54,683 --> 00:02:57,842
So I'm expecting at
least 10 today.

103
00:02:57,842 --> 00:02:59,570
But yeah, just get
asking questions.

104
00:02:59,570 --> 00:03:02,270
We also have our colleague
in Brazil, Renato.

105
00:03:02,270 --> 00:03:05,530
"Henato," I think, is the proper
way of pronouncing it.

106
00:03:05,530 --> 00:03:06,730
Yes.

107
00:03:06,730 --> 00:03:08,350
PAUL LEWIS: I stand corrected.

108
00:03:08,350 --> 00:03:10,040
PAUL KINLAN: Anyway, he'll
be moderating some of the

109
00:03:10,040 --> 00:03:12,450
questions as well as any of the
YouTube questions and all

110
00:03:12,450 --> 00:03:13,310
those types of things.

111
00:03:13,310 --> 00:03:14,340
But please feel free.

112
00:03:14,340 --> 00:03:17,490
This is a live show unless
you're watching this tomorrow.

113
00:03:17,490 --> 00:03:18,640
PAUL LEWIS: In which
case, it's not

114
00:03:18,640 --> 00:03:19,445
Google Developers Live.

115
00:03:19,445 --> 00:03:22,100
It's Google Developers
recorded.

116
00:03:22,100 --> 00:03:22,890
PAUL KINLAN: But we'll
answer as many

117
00:03:22,890 --> 00:03:23,870
questions as we can today.

118
00:03:23,870 --> 00:03:26,980
And if we can't answer them,
we'll try and roll them over

119
00:03:26,980 --> 00:03:27,920
to next week's episode.

120
00:03:27,920 --> 00:03:28,760
PAUL LEWIS: All right.

121
00:03:28,760 --> 00:03:29,740
Should we go into some code?

122
00:03:29,740 --> 00:03:30,200
PAUL KINLAN: Yes.

123
00:03:30,200 --> 00:03:32,200
What editor do you
use, by the way?

124
00:03:32,200 --> 00:03:33,620
PAUL LEWIS: I use
Sublime Text.

125
00:03:33,620 --> 00:03:33,860
PAUL KINLAN: Sublime Text.

126
00:03:33,860 --> 00:03:36,180
PAUL LEWIS: Everytime we get
asked that-- there we go.

127
00:03:36,180 --> 00:03:37,010
That's the one.

128
00:03:37,010 --> 00:03:37,520
It's the one.

129
00:03:37,520 --> 00:03:38,940
You use Vim, do you not?

130
00:03:38,940 --> 00:03:40,110
PAUL KINLAN: I'm a Vim man.

131
00:03:40,110 --> 00:03:41,030
PAUL LEWIS: You're a
Vim improved man.

132
00:03:41,030 --> 00:03:42,340
PAUL KINLAN: I used to like
VIM until the drink.

133
00:03:42,340 --> 00:03:43,575
That's how it kind of--

134
00:03:43,575 --> 00:03:44,280
PAUL LEWIS: Really?

135
00:03:44,280 --> 00:03:46,005
You didn't choose your interests
based on the drink

136
00:03:46,005 --> 00:03:47,770
that you liked as a child?

137
00:03:47,770 --> 00:03:48,610
PAUL KINLAN: No.

138
00:03:48,610 --> 00:03:49,410
PAUL LEWIS: No.

139
00:03:49,410 --> 00:03:49,760
Good.

140
00:03:49,760 --> 00:03:50,570
I'm glad we had that
conversation.

141
00:03:50,570 --> 00:03:52,300
PAUL KINLAN: So I always say
that I'm preparing a joke

142
00:03:52,300 --> 00:03:53,370
every single episode.

143
00:03:53,370 --> 00:03:53,680
PAUL LEWIS: Every time.

144
00:03:53,680 --> 00:03:55,380
PAUL KINLAN: This one
has been a couple of

145
00:03:55,380 --> 00:03:56,630
weeks in the planning.

146
00:03:56,630 --> 00:04:01,810

147
00:04:01,810 --> 00:04:01,902
All right.

148
00:04:01,902 --> 00:04:02,290
Let's get going.

149
00:04:02,290 --> 00:04:02,825
PAUL LEWIS: So sorry.

150
00:04:02,825 --> 00:04:03,650
PAUL KINLAN: Sorry about this.

151
00:04:03,650 --> 00:04:04,350
Let's look at the code.

152
00:04:04,350 --> 00:04:05,640
PAUL LEWIS: Yeah,
let's do it. .

153
00:04:05,640 --> 00:04:06,690
OK.

154
00:04:06,690 --> 00:04:09,400
So I have the code
up on screen.

155
00:04:09,400 --> 00:04:11,800
Now what I've done is I've taken
the liberty of actually

156
00:04:11,800 --> 00:04:14,270
starting the app
ahead of time.

157
00:04:14,270 --> 00:04:15,870
So there's a lot of stuff that
we've covered in previous

158
00:04:15,870 --> 00:04:19,149
weeks about boilerplating,
getting up to speed with some

159
00:04:19,149 --> 00:04:20,790
code and all the rest of it.

160
00:04:20,790 --> 00:04:24,080
So I didn't want
to repeat that.

161
00:04:24,080 --> 00:04:26,640
You can find those in the
samples on GitHub, And you can

162
00:04:26,640 --> 00:04:28,280
also watch previous weeks.

163
00:04:28,280 --> 00:04:31,430
So I'm in the main JS, which
is the background page.

164
00:04:31,430 --> 00:04:34,430
This is the hub of your
apps activity.

165
00:04:34,430 --> 00:04:35,840
And as you can see,
I'm actually

166
00:04:35,840 --> 00:04:36,620
creating three windows.

167
00:04:36,620 --> 00:04:39,770
So I'm actually creating
three of them with

168
00:04:39,770 --> 00:04:41,690
index.html as the source.

169
00:04:41,690 --> 00:04:45,430
And then I'm just positioning
them across the screen.

170
00:04:45,430 --> 00:04:47,940
And they're identical apart from
the fact that I'm pushing

171
00:04:47,940 --> 00:04:50,670
on variables.

172
00:04:50,670 --> 00:04:52,490
Now, the way to talk
to a window.

173
00:04:52,490 --> 00:04:55,220
So the window that gets passed
back as this in the callback

174
00:04:55,220 --> 00:04:59,610
function is an app window, which
isn't the same as the

175
00:04:59,610 --> 00:05:02,070
DOM window that you're
used to dealing with.

176
00:05:02,070 --> 00:05:05,700
So we actually access the DOM
window inside the app window

177
00:05:05,700 --> 00:05:07,880
using the content
window property.

178
00:05:07,880 --> 00:05:08,150
There you go.

179
00:05:08,150 --> 00:05:09,390
That's a fun way of
explaining it.

180
00:05:09,390 --> 00:05:10,820
PAUL KINLAN: So we can't really
do this in the web

181
00:05:10,820 --> 00:05:11,400
today, right?

182
00:05:11,400 --> 00:05:12,600
PAUL LEWIS: No, not
that I know of.

183
00:05:12,600 --> 00:05:13,980
PAUL KINLAN: Well, we can
do it with iFrames.

184
00:05:13,980 --> 00:05:14,310
But it's--

185
00:05:14,310 --> 00:05:15,710
PAUL LEWIS: It's a bit weird.

186
00:05:15,710 --> 00:05:16,110
PAUL KINLAN: Yeah.

187
00:05:16,110 --> 00:05:18,040
It's not a generally
well-accepted way of--

188
00:05:18,040 --> 00:05:18,870
PAUL LEWIS: No.

189
00:05:18,870 --> 00:05:21,660
So you can see what I'm doing,
though, is I'm getting the

190
00:05:21,660 --> 00:05:25,340
window passed back as a part
where the callback.

191
00:05:25,340 --> 00:05:28,500
I'm accessing content window,
which gets me into the DOM of

192
00:05:28,500 --> 00:05:29,580
the window that I created.

193
00:05:29,580 --> 00:05:31,790
Then I'm setting this window
name property on there.

194
00:05:31,790 --> 00:05:35,430
And I'm obviously calling one
Left, one Mid, and one Right.

195
00:05:35,430 --> 00:05:37,030
And the last thing I'm doing
is I'm actually pushing it

196
00:05:37,030 --> 00:05:41,840
onto an array of wins, which is
basically what I'm going to

197
00:05:41,840 --> 00:05:44,740
do or what I'm going to use
later on to actually talk to

198
00:05:44,740 --> 00:05:44,830
the window.

199
00:05:44,830 --> 00:05:47,655
So let me just show you what
this looks like right now.

200
00:05:47,655 --> 00:05:48,480
There we are.

201
00:05:48,480 --> 00:05:50,250
The windows, they're
all the same.

202
00:05:50,250 --> 00:05:51,340
Deal?

203
00:05:51,340 --> 00:05:53,115
Left, mid, and right, although
you can't really tell that

204
00:05:53,115 --> 00:05:54,420
it's Left, Mid and Right,
particularly.

205
00:05:54,420 --> 00:05:56,050
They just say Window.

206
00:05:56,050 --> 00:05:59,790
So the first thing that I wanted
to actually do is in

207
00:05:59,790 --> 00:06:07,110
the source of index.html, you'll
see the markup for what

208
00:06:07,110 --> 00:06:09,350
I just showed you, which is this
sort of the window, the

209
00:06:09,350 --> 00:06:14,310
form, and an output area,
and an index.js file.

210
00:06:14,310 --> 00:06:18,510
Now, what we want to do in this
app if we can is have a

211
00:06:18,510 --> 00:06:21,090
setup where if I type a message
in here and say hello

212
00:06:21,090 --> 00:06:24,730
and submit it, that it actually
does something.

213
00:06:24,730 --> 00:06:27,150
That it actually takes that
message and puts it into the

214
00:06:27,150 --> 00:06:28,910
current window that I'm looking
at, but it also shows

215
00:06:28,910 --> 00:06:30,610
it up in the other two windows,
kind of, I suppose,

216
00:06:30,610 --> 00:06:34,450
like a chat kind of mechanism,
I suppose.

217
00:06:34,450 --> 00:06:36,770
So the first thing I want to
actually do is I want to pick

218
00:06:36,770 --> 00:06:39,510
up the injected variable.

219
00:06:39,510 --> 00:06:41,565
Let me just find
that over here.

220
00:06:41,565 --> 00:06:44,760
So the injected property name--
property, sorry--

221
00:06:44,760 --> 00:06:45,850
window name.

222
00:06:45,850 --> 00:06:48,330
I want to pick that up
inside that window.

223
00:06:48,330 --> 00:06:50,250
And I want to use it
to set the title.

224
00:06:50,250 --> 00:06:55,770
So you can see I have in the
markup a span inside the H1

225
00:06:55,770 --> 00:06:57,310
called title.

226
00:06:57,310 --> 00:06:59,700
What I want to do in here-- as
you can see, I've also picked

227
00:06:59,700 --> 00:07:00,580
it up in the JavaScript.

228
00:07:00,580 --> 00:07:07,060
So what I'm actually going to
do is say title.textContent

229
00:07:07,060 --> 00:07:09,150
equals this-- because this
is going to refer

230
00:07:09,150 --> 00:07:10,640
to the window object--

231
00:07:10,640 --> 00:07:12,120
windowname.

232
00:07:12,120 --> 00:07:14,200
So that's the variable
I injected.

233
00:07:14,200 --> 00:07:17,810
So now if I reload the
application, hopefully, Window

234
00:07:17,810 --> 00:07:19,110
Left, Window Mid,
Window Right.

235
00:07:19,110 --> 00:07:20,730
So this is the first
kind of way of

236
00:07:20,730 --> 00:07:21,550
dealing with this stuff.

237
00:07:21,550 --> 00:07:26,360
You can actually inject
variables into your Windows.

238
00:07:26,360 --> 00:07:26,930
Cool.

239
00:07:26,930 --> 00:07:28,510
PAUL KINLAN: I think we talked
briefly about this last week,

240
00:07:28,510 --> 00:07:30,910
didn't we, with Intent data, but
We didn't really allude to

241
00:07:30,910 --> 00:07:31,780
what was happening.

242
00:07:31,780 --> 00:07:32,600
PAUL LEWIS: No.

243
00:07:32,600 --> 00:07:35,030
PAUL KINLAN: Last week's talk
was about Web Intents Oh,

244
00:07:35,030 --> 00:07:37,154
we're on camera!

245
00:07:37,154 --> 00:07:38,120
PAUL LEWIS: We're back.

246
00:07:38,120 --> 00:07:39,550
PAUL KINLAN: So last week was
about Web Intents and how to

247
00:07:39,550 --> 00:07:40,850
deliver data between windows.

248
00:07:40,850 --> 00:07:42,400
And this is the same type
of way, isn't it?

249
00:07:42,400 --> 00:07:43,200
PAUL LEWIS: Absolutely.

250
00:07:43,200 --> 00:07:44,770
You just push that right in.

251
00:07:44,770 --> 00:07:47,720
And I think that is a bit
unusual for web developers

252
00:07:47,720 --> 00:07:50,230
from that typical web
development background is to

253
00:07:50,230 --> 00:07:52,400
just kind of inject things.

254
00:07:52,400 --> 00:07:54,070
And certainly what I'm going to
show you in a little bit is

255
00:07:54,070 --> 00:07:57,710
using post message as well,
which is a lot more, I think,

256
00:07:57,710 --> 00:07:59,310
what people are used to.

257
00:07:59,310 --> 00:08:00,160
You can do it either way.

258
00:08:00,160 --> 00:08:00,990
So that's the thing.

259
00:08:00,990 --> 00:08:03,050
So it's really done to you as
to how you want to do this.

260
00:08:03,050 --> 00:08:05,420
So back to the code.

261
00:08:05,420 --> 00:08:08,990
The main thing we need to do
here is sending messages.

262
00:08:08,990 --> 00:08:10,870
And what I'm going to do is I'm
actually going to send--

263
00:08:10,870 --> 00:08:13,280
when you submit the form on
one of those windows, I'm

264
00:08:13,280 --> 00:08:15,470
going to take that input, and
I'm going to pass it to the

265
00:08:15,470 --> 00:08:16,360
background page.

266
00:08:16,360 --> 00:08:18,310
And then the background page is
going to send that message

267
00:08:18,310 --> 00:08:19,520
out to all the windows.

268
00:08:19,520 --> 00:08:21,860
So the background page,
as I said before, is

269
00:08:21,860 --> 00:08:22,760
acting as the hub.

270
00:08:22,760 --> 00:08:24,580
So everything goes via
the background page.

271
00:08:24,580 --> 00:08:28,080
And that's the model that I
think you need to get used to

272
00:08:28,080 --> 00:08:30,300
if you're going to
make Chrome apps.

273
00:08:30,300 --> 00:08:33,309
So the first thing I need to do
because form submission is

274
00:08:33,309 --> 00:08:36,830
not accepted.

275
00:08:36,830 --> 00:08:39,669
It's not something that we
support in the Chrome Apps.

276
00:08:39,669 --> 00:08:42,990
I need to say the event--
because you can see I've got a

277
00:08:42,990 --> 00:08:45,230
form submission event.

278
00:08:45,230 --> 00:08:49,440
I'm going to say event.prevent
default.

279
00:08:49,440 --> 00:08:51,430
So that's going to stop
the form from

280
00:08:51,430 --> 00:08:52,260
actually being submitted.

281
00:08:52,260 --> 00:08:54,540
But it does mean that I capture
the fact that they've

282
00:08:54,540 --> 00:08:56,230
submitted the form.

283
00:08:56,230 --> 00:08:57,310
PAUL KINLAN: I have
a quick question.

284
00:08:57,310 --> 00:08:57,970
PAUL LEWIS: Go for it.

285
00:08:57,970 --> 00:09:00,280
PAUL KINLAN: Are you a tabs
guy or a spaces guy?

286
00:09:00,280 --> 00:09:01,650
PAUL LEWIS: I'm a spaces guy.

287
00:09:01,650 --> 00:09:01,875
PAUL KINLAN: Cool.

288
00:09:01,875 --> 00:09:02,210
Good.

289
00:09:02,210 --> 00:09:03,566
PAUL LEWIS: But each to
their own, you know?

290
00:09:03,566 --> 00:09:06,170

291
00:09:06,170 --> 00:09:09,140
It's a personal preference
thing, isn't it?

292
00:09:09,140 --> 00:09:12,830
So the thing I want to
do is I want to say--

293
00:09:12,830 --> 00:09:13,720
let me just do this.

294
00:09:13,720 --> 00:09:17,300
If I've got the background page,
and I want to call a

295
00:09:17,300 --> 00:09:21,374
function on the background page
called broadcast, and I'm

296
00:09:21,374 --> 00:09:28,120
going to say this.windowname,
and then whatever was in the

297
00:09:28,120 --> 00:09:29,040
box at the time.

298
00:09:29,040 --> 00:09:30,550
And then I'm going to
set whatever was

299
00:09:30,550 --> 00:09:33,750
in the box to nothing.

300
00:09:33,750 --> 00:09:35,260
So there's a couple
of things here.

301
00:09:35,260 --> 00:09:38,710
The background page is currently
set to null, so I

302
00:09:38,710 --> 00:09:40,480
don't actually have a reference
to the page.

303
00:09:40,480 --> 00:09:43,320
Now you could use window.opener
as one option.

304
00:09:43,320 --> 00:09:46,020
But because there's actually
something built into the

305
00:09:46,020 --> 00:09:48,110
Chrome runtime, which
we can use.

306
00:09:48,110 --> 00:09:49,060
So we're going to
do that instead.

307
00:09:49,060 --> 00:09:50,730
We're going to actually do--

308
00:09:50,730 --> 00:09:51,590
let me see, now.

309
00:09:51,590 --> 00:09:52,840
Chrome.runtime.g
etBackgroundPage.

310
00:09:52,840 --> 00:09:57,080

311
00:09:57,080 --> 00:09:58,255
PAUL KINLAN: Should we explain
a little bit more about the

312
00:09:58,255 --> 00:09:59,310
background page?

313
00:09:59,310 --> 00:10:00,550
PAUL LEWIS: Well, the background
page, as we said a

314
00:10:00,550 --> 00:10:02,040
couple of times, is the hub.

315
00:10:02,040 --> 00:10:03,820
PAUL KINLAN: That shows me
listening, doesn't it?

316
00:10:03,820 --> 00:10:05,170
PAUL LEWIS: It does rather.

317
00:10:05,170 --> 00:10:05,570
Yes.

318
00:10:05,570 --> 00:10:06,030
PAUL KINLAN: But does
the background

319
00:10:06,030 --> 00:10:06,850
page always live there?

320
00:10:06,850 --> 00:10:09,900
Or does it die at any point
in the application?

321
00:10:09,900 --> 00:10:11,590
PAUL LEWIS: Well, it
can get suspended.

322
00:10:11,590 --> 00:10:14,170
But typically, it's there
all the time.

323
00:10:14,170 --> 00:10:14,820
PAUL KINLAN: Yeah, so
it's a good, little

324
00:10:14,820 --> 00:10:16,060
hub, as you were saying.

325
00:10:16,060 --> 00:10:17,510
PAUL LEWIS: It is a
good little hub.

326
00:10:17,510 --> 00:10:20,240
So because the getBackgroundPage
takes a

327
00:10:20,240 --> 00:10:21,940
callback function.

328
00:10:21,940 --> 00:10:24,620
I have passed that in there,
as you can see.

329
00:10:24,620 --> 00:10:26,240
And what I'm going to do
is I'm going to use

330
00:10:26,240 --> 00:10:27,650
backgroundPage equals page.

331
00:10:27,650 --> 00:10:31,720
So I'm going to set that given
whatever I've got returned.

332
00:10:31,720 --> 00:10:35,990
So hopefully now, by the time
sendMessage is running, we

333
00:10:35,990 --> 00:10:38,010
have BackgroundPage in place.

334
00:10:38,010 --> 00:10:41,320
Now, the problem is we're
calling broadcast and we don't

335
00:10:41,320 --> 00:10:43,150
have that function in there.

336
00:10:43,150 --> 00:10:45,380
So we better go ahead
and add that.

337
00:10:45,380 --> 00:10:47,050
Now, this is where I'm
actually going to use

338
00:10:47,050 --> 00:10:48,600
postMessage to talk
to the window.

339
00:10:48,600 --> 00:10:50,260
So I've got this message
being picked up.

340
00:10:50,260 --> 00:10:51,970
I'm sending it to the background
page and saying can

341
00:10:51,970 --> 00:10:54,300
you broadcast this to all
the other windows?

342
00:10:54,300 --> 00:10:58,030
So in main JS, which is my
background page, I just throw

343
00:10:58,030 --> 00:11:02,770
in a function called
broadcast.

344
00:11:02,770 --> 00:11:05,000
And I'm going to have
it take a message.

345
00:11:05,000 --> 00:11:07,810
And then I'm going to go through
all of the windows

346
00:11:07,810 --> 00:11:10,270
that I put onto that
array before.

347
00:11:10,270 --> 00:11:15,230
Views less than wins, length,
go through all windows.

348
00:11:15,230 --> 00:11:16,490
I always write my four
loops like that.

349
00:11:16,490 --> 00:11:18,410
Some people write some very,
very crazy four loops.

350
00:11:18,410 --> 00:11:19,055
PAUL KINLAN: Yeah.

351
00:11:19,055 --> 00:11:22,650
So Eric Bidelman showed me a way
that we don't have to use

352
00:11:22,650 --> 00:11:24,560
the length property,
but it auto assigns

353
00:11:24,560 --> 00:11:26,010
wins to a win object.

354
00:11:26,010 --> 00:11:26,580
PAUL LEWIS: Oh, I like this.

355
00:11:26,580 --> 00:11:28,835
PAUL KINLAN: --a while ago.

356
00:11:28,835 --> 00:11:30,390
Yeah, I'd never seen
that before.

357
00:11:30,390 --> 00:11:31,025
PAUL LEWIS: No.

358
00:11:31,025 --> 00:11:31,380
OK.

359
00:11:31,380 --> 00:11:32,690
PAUL KINLAN: Again,
each to his own.

360
00:11:32,690 --> 00:11:33,660
He's super nice, actually.

361
00:11:33,660 --> 00:11:34,130
He's pretty cool.

362
00:11:34,130 --> 00:11:36,270
PAUL LEWIS: Oh, I'll have
to ask him about that.

363
00:11:36,270 --> 00:11:38,430
So as you remember from before,
I was actually pushing

364
00:11:38,430 --> 00:11:40,720
on the app window.

365
00:11:40,720 --> 00:11:43,150
I was pushing the app window
reference onto the array.

366
00:11:43,150 --> 00:11:44,220
I could have pushed on the
content window, the

367
00:11:44,220 --> 00:11:45,790
actual DOM window on.

368
00:11:45,790 --> 00:11:46,650
But I didn't.

369
00:11:46,650 --> 00:11:49,250
So I have to reference it
via content window now.

370
00:11:49,250 --> 00:11:51,170
And I'm just gonna
say postMessage.

371
00:11:51,170 --> 00:11:54,270
And I'm just going to
pass in the message.

372
00:11:54,270 --> 00:11:57,650
And then the second part
is about the origin.

373
00:11:57,650 --> 00:12:00,595
So you can check that one if
you've not come across that

374
00:12:00,595 --> 00:12:01,200
one before.

375
00:12:01,200 --> 00:12:02,980
So I'm posting the message
through to each of the

376
00:12:02,980 --> 00:12:04,650
windows, in turn.

377
00:12:04,650 --> 00:12:09,430
So the last thing that needs to
actually happen is, back in

378
00:12:09,430 --> 00:12:13,670
my index JS, you'll see I've
got this receiveMessage.

379
00:12:13,670 --> 00:12:16,120
So I've added onto this
particular window each of

380
00:12:16,120 --> 00:12:17,070
those three windows.

381
00:12:17,070 --> 00:12:19,710
I've added on an event
listener for message.

382
00:12:19,710 --> 00:12:21,460
When we get a message
in, we run this

383
00:12:21,460 --> 00:12:22,970
receiveMessage callback.

384
00:12:22,970 --> 00:12:27,220
So that's going to
take an event.

385
00:12:27,220 --> 00:12:32,130
And I'm going to say output,
which if you remember, is this

386
00:12:32,130 --> 00:12:33,280
text area over here.

387
00:12:33,280 --> 00:12:35,120
So I've got a text
area on the page.

388
00:12:35,120 --> 00:12:40,050
I'm going to say
output.textContent plus equals

389
00:12:40,050 --> 00:12:42,540
the data, and then a new
line just to keep

390
00:12:42,540 --> 00:12:44,980
things nice and neat.

391
00:12:44,980 --> 00:12:48,640
So hopefully, all being well,
unless I've made a mistake

392
00:12:48,640 --> 00:12:53,960
somewhere, when we re-load the
application, I can say hello.

393
00:12:53,960 --> 00:12:56,550
And you see that Left is
now saying hello to

394
00:12:56,550 --> 00:12:58,260
Left, Mid, and Right.

395
00:12:58,260 --> 00:13:01,620
And go in here and say world.

396
00:13:01,620 --> 00:13:05,140
And the Window Right is going
to chime in with no--

397
00:13:05,140 --> 00:13:07,040
Universe.

398
00:13:07,040 --> 00:13:08,720
Ha!

399
00:13:08,720 --> 00:13:09,270
So there you go.

400
00:13:09,270 --> 00:13:11,880
So that's the way that you
can actually have windows

401
00:13:11,880 --> 00:13:12,470
communicating.

402
00:13:12,470 --> 00:13:15,590
As we said, it always goes
via the background page.

403
00:13:15,590 --> 00:13:18,610
That is, that you need to
treat that as a whole.

404
00:13:18,610 --> 00:13:21,690
So again, just a quick
run-through.

405
00:13:21,690 --> 00:13:24,960
When we send a message, in this
case, we're just calling

406
00:13:24,960 --> 00:13:27,240
a function on the
background page.

407
00:13:27,240 --> 00:13:30,910
But again, you could post a
message through if that was

408
00:13:30,910 --> 00:13:32,200
your preferred method
of doing it.

409
00:13:32,200 --> 00:13:34,480
In this case, I just decided
to call a function on the

410
00:13:34,480 --> 00:13:35,890
background page.

411
00:13:35,890 --> 00:13:38,930
In there, I'm actually then
picking that up and finding

412
00:13:38,930 --> 00:13:41,500
each of the individual
windows and posting a

413
00:13:41,500 --> 00:13:43,080
message through to them.

414
00:13:43,080 --> 00:13:45,470
And then when they get our
message, they just simply

415
00:13:45,470 --> 00:13:48,710
append it to the text area.

416
00:13:48,710 --> 00:13:50,780
So that's kind of the
way all this works.

417
00:13:50,780 --> 00:13:52,370
Obviously, we're covering
getting hold of

418
00:13:52,370 --> 00:13:54,620
the background page.

419
00:13:54,620 --> 00:13:56,600
And that is that.

420
00:13:56,600 --> 00:13:59,930
PAUL KINLAN: I have one
question to say.

421
00:13:59,930 --> 00:14:02,070
The actual Moderator questions,

422
00:14:02,070 --> 00:14:02,910
I set this up wrong.

423
00:14:02,910 --> 00:14:04,360
I've been disabled.

424
00:14:04,360 --> 00:14:07,911
So I'm actually just working
on this whole process now.

425
00:14:07,911 --> 00:14:09,320
Um, yeah.

426
00:14:09,320 --> 00:14:10,360
PAUL LEWIS: Hm.

427
00:14:10,360 --> 00:14:12,490
So presumably, people can't
ask questions right now.

428
00:14:12,490 --> 00:14:13,510
PAUL KINLAN: People can't
ask questions right now.

429
00:14:13,510 --> 00:14:14,730
PAUL LEWIS: We'd like
them to, though.

430
00:14:14,730 --> 00:14:15,500
PAUL KINLAN: I did
try to enable it.

431
00:14:15,500 --> 00:14:18,880
I just got rid of the
deadline, so yeah,

432
00:14:18,880 --> 00:14:20,110
it should be there.

433
00:14:20,110 --> 00:14:22,730
It's not quite.

434
00:14:22,730 --> 00:14:24,020
PAUL LEWIS: Well, sorry
about this, folks.

435
00:14:24,020 --> 00:14:25,270
PAUL KINLAN: Yeah,
sorry about this.

436
00:14:25,270 --> 00:14:27,230

437
00:14:27,230 --> 00:14:28,970
PAUL LEWIS: Not to worry.

438
00:14:28,970 --> 00:14:29,520
PAUL KINLAN: It should
be there.

439
00:14:29,520 --> 00:14:31,630
I mean, you guys, you should be
able to submit questions.

440
00:14:31,630 --> 00:14:33,090
If not, I'm actually
monitoring the

441
00:14:33,090 --> 00:14:35,080
actual event as well.

442
00:14:35,080 --> 00:14:38,020
We mainly have--

443
00:14:38,020 --> 00:14:40,620
yeah, that's pretty much it.

444
00:14:40,620 --> 00:14:43,850
PAUL LEWIS: Any changes this
week in Chrome Apps?

445
00:14:43,850 --> 00:14:45,020
PAUL KINLAN: There
are no changes.

446
00:14:45,020 --> 00:14:45,375
PAUL LEWIS: Yes!

447
00:14:45,375 --> 00:14:46,200
PAUL KINLAN: Well, there
are changes.

448
00:14:46,200 --> 00:14:47,190
There've been quite
a lot of changes.

449
00:14:47,190 --> 00:14:50,090
But generally, what normally
happens each week is that we

450
00:14:50,090 --> 00:14:53,180
try and give you a breakdown
of breaking changes, things

451
00:14:53,180 --> 00:14:56,080
that have kind of happened
inside the APIs where you have

452
00:14:56,080 --> 00:14:57,470
to change your code.

453
00:14:57,470 --> 00:15:00,360
This week, especially around the
window in API, there is no

454
00:15:00,360 --> 00:15:02,270
changes of note, at least.

455
00:15:02,270 --> 00:15:04,965

456
00:15:04,965 --> 00:15:06,310
All your apps should work.

457
00:15:06,310 --> 00:15:07,820
I think what we're going to
do for the next couple of

458
00:15:07,820 --> 00:15:10,320
episodes at least is start
demonstrating more real-world

459
00:15:10,320 --> 00:15:10,920
applications.

460
00:15:10,920 --> 00:15:12,920
We have a couple on GitHub.

461
00:15:12,920 --> 00:15:15,840
So we're not going to go
directly into the APIs and do

462
00:15:15,840 --> 00:15:17,330
this kind of conversation
anymore.

463
00:15:17,330 --> 00:15:17,840
Well, we will.

464
00:15:17,840 --> 00:15:19,550
We'll have conversations.

465
00:15:19,550 --> 00:15:21,220
And we'll have Moderator
questions that work.

466
00:15:21,220 --> 00:15:22,850
PAUL LEWIS: Whoa.

467
00:15:22,850 --> 00:15:23,350
Whoa.

468
00:15:23,350 --> 00:15:23,780
PAUL KINLAN: Yes.

469
00:15:23,780 --> 00:15:27,610
I apologize about this
profusely, profusely.

470
00:15:27,610 --> 00:15:28,270
PAUL LEWIS: Good.

471
00:15:28,270 --> 00:15:31,900
PAUL KINLAN: But there have
been no changes this week.

472
00:15:31,900 --> 00:15:32,890
There might be some next week.

473
00:15:32,890 --> 00:15:33,980
We don't quite know.

474
00:15:33,980 --> 00:15:35,350
But we'll let you know.

475
00:15:35,350 --> 00:15:37,290
PAUL LEWIS: But generally,
actually if you want us to

476
00:15:37,290 --> 00:15:41,060
cover anything specifically
alongside the apps that we're

477
00:15:41,060 --> 00:15:42,850
going to take a deep dive
into, just let us know.

478
00:15:42,850 --> 00:15:46,240
You can do that in the Moderator
when it works.

479
00:15:46,240 --> 00:15:49,960
Or you can post to the
comments on Google+.

480
00:15:49,960 --> 00:15:52,710
Or you can tweet in our general
direction as well.

481
00:15:52,710 --> 00:15:54,030
PAUL KINLAN: So we do have some
things coming through.

482
00:15:54,030 --> 00:15:56,020
Oh, thanks, the questions
are up.

483
00:15:56,020 --> 00:15:57,450
So Hemanna--

484
00:15:57,450 --> 00:15:58,620
I hope I've pronounced
your name right.

485
00:15:58,620 --> 00:16:01,310
If you have any questions,
please submit them.

486
00:16:01,310 --> 00:16:03,460
We have also a question
from Josh Libby,

487
00:16:03,460 --> 00:16:04,870
which I believe I answered.

488
00:16:04,870 --> 00:16:07,420
There is no captioning
on live content.

489
00:16:07,420 --> 00:16:09,490
So what happens at the end of
this, we'll produce it and

490
00:16:09,490 --> 00:16:12,440
publish it, push it live onto
YouTube, where there will be

491
00:16:12,440 --> 00:16:18,460
some automatic transcription and
transcription of the show.

492
00:16:18,460 --> 00:16:19,740
PAUL LEWIS: Of the video.

493
00:16:19,740 --> 00:16:20,600
PAUL KINLAN: It's pretty cool.

494
00:16:20,600 --> 00:16:24,220
They can translate Scouse
and Burnley.

495
00:16:24,220 --> 00:16:24,730
PAUL LEWIS: Burnley.

496
00:16:24,730 --> 00:16:25,500
PAUL KINLAN: Burnley.

497
00:16:25,500 --> 00:16:28,580
PAUL LEWIS: In case anybody
from outside the United

498
00:16:28,580 --> 00:16:33,160
Kingdom is watching, which I'm
sure you are, I'm from an area

499
00:16:33,160 --> 00:16:35,680
called Burnley, which
is the source of his

500
00:16:35,680 --> 00:16:37,210
mockery, which is good.

501
00:16:37,210 --> 00:16:38,190
PAUL KINLAN: I wasn't
mockering.

502
00:16:38,190 --> 00:16:38,400
PAUL LEWIS: Why not?

503
00:16:38,400 --> 00:16:38,800
PAUL KINLAN: Mockering?

504
00:16:38,800 --> 00:16:39,744
PAUL LEWIS: Mockering.

505
00:16:39,744 --> 00:16:41,160
PAUL KINLAN: I can't
even speak.

506
00:16:41,160 --> 00:16:42,200
So anyway--

507
00:16:42,200 --> 00:16:42,940
PAUL LEWIS: Right.

508
00:16:42,940 --> 00:16:43,820
A good question is--

509
00:16:43,820 --> 00:16:45,110
PAUL KINLAN: I actually wanted
to ask some questions to you

510
00:16:45,110 --> 00:16:48,720
about patterns and practices for
multi-window applications.

511
00:16:48,720 --> 00:16:49,040
PAUL LEWIS: OK.

512
00:16:49,040 --> 00:16:51,760
PAUL KINLAN: So you showed
basically calling the method

513
00:16:51,760 --> 00:16:53,050
directly on the background
page.

514
00:16:53,050 --> 00:16:54,100
PAUL LEWIS: Yes.

515
00:16:54,100 --> 00:16:56,840
PAUL KINLAN: Would you use
that over post message?

516
00:16:56,840 --> 00:16:58,630
PAUL LEWIS: I think it depends
on the application.

517
00:16:58,630 --> 00:16:59,880
I have no strong feelings.

518
00:16:59,880 --> 00:17:03,150

519
00:17:03,150 --> 00:17:06,160
For me, personally, I'm very
used to the web developer kind

520
00:17:06,160 --> 00:17:09,569
of methodology of decoupling.

521
00:17:09,569 --> 00:17:13,349
And for me to some degree,
it's a change in mindset.

522
00:17:13,349 --> 00:17:15,650
There's a lot of change in
mindset that are required for

523
00:17:15,650 --> 00:17:16,020
Chrome Apps.

524
00:17:16,020 --> 00:17:18,099
And I think this
is one of them.

525
00:17:18,099 --> 00:17:20,720
I'm sort of making my peace
with the fact that I have

526
00:17:20,720 --> 00:17:21,579
control over these windows.

527
00:17:21,579 --> 00:17:23,359
I should expect them to
be there because I'm

528
00:17:23,359 --> 00:17:24,930
in control of that.

529
00:17:24,930 --> 00:17:28,610
I'm not expecting pop-up
blockers to get in the way and

530
00:17:28,610 --> 00:17:29,640
those kinds of things.

531
00:17:29,640 --> 00:17:30,640
I'm OK with it.

532
00:17:30,640 --> 00:17:34,930
I don't think there's any
particular problem there.

533
00:17:34,930 --> 00:17:35,720
It is a different model.

534
00:17:35,720 --> 00:17:39,420
And if you were building a
native application on the

535
00:17:39,420 --> 00:17:42,290
platform, it would be weird to
not be able to just kind of

536
00:17:42,290 --> 00:17:44,230
hook directly in
and talk to it.

537
00:17:44,230 --> 00:17:46,330
So I'm OK with it, yeah.

538
00:17:46,330 --> 00:17:46,980
PAUL KINLAN: Yeah.

539
00:17:46,980 --> 00:17:47,480
I'm just curious.

540
00:17:47,480 --> 00:17:49,310
Because I've seen this thing
before, where we've had like

541
00:17:49,310 --> 00:17:51,960
magic iFrames, which if you look
for documentation about

542
00:17:51,960 --> 00:17:53,340
what a magic iFrame is--

543
00:17:53,340 --> 00:17:54,350
PAUL LEWIS: I don't
know what it is.

544
00:17:54,350 --> 00:17:55,120
PAUL KINLAN: It's magic.

545
00:17:55,120 --> 00:17:56,670
PAUL LEWIS: Oh!

546
00:17:56,670 --> 00:17:59,740
PAUL KINLAN: So basically, the
idea was that you want to have

547
00:17:59,740 --> 00:18:02,480
one piece of logic, like the
background page inside these

548
00:18:02,480 --> 00:18:04,940
applications, live inside
your web app.

549
00:18:04,940 --> 00:18:07,910
And say it was a new mail
application that you had, and

550
00:18:07,910 --> 00:18:09,930
you opened it up to
run your email.

551
00:18:09,930 --> 00:18:13,460
You don't want the cold start
time of that new window to be

552
00:18:13,460 --> 00:18:14,270
horrendously long.

553
00:18:14,270 --> 00:18:16,600
You want all the code to
be there straightaway.

554
00:18:16,600 --> 00:18:17,960
And when you were showing
that, you were basically

555
00:18:17,960 --> 00:18:20,890
calling and passing in methods
and data into a newly opened

556
00:18:20,890 --> 00:18:23,740
window, I think it was kind
of a similar thing where

557
00:18:23,740 --> 00:18:26,200
basically you would say this
is my background page.

558
00:18:26,200 --> 00:18:28,300
Push it onto this new window.

559
00:18:28,300 --> 00:18:29,200
PAUL LEWIS: Ah, so you're
smooshing in.

560
00:18:29,200 --> 00:18:30,450
PAUL KINLAN: Yeah, you're
kind of smooshing in

561
00:18:30,450 --> 00:18:31,440
all the logic, basically.

562
00:18:31,440 --> 00:18:33,685
PAUL LEWIS: Like as sort of a
primer or starter thing, like

563
00:18:33,685 --> 00:18:34,713
go with this, right?

564
00:18:34,713 --> 00:18:35,146
PAUL KINLAN: Yeah.

565
00:18:35,146 --> 00:18:35,580
PAUL LEWIS: OK, cool.

566
00:18:35,580 --> 00:18:37,010
PAUL KINLAN: And that was
basically designed to get rid

567
00:18:37,010 --> 00:18:39,520
of that kind of massive overhead
of download and

568
00:18:39,520 --> 00:18:41,330
assets and everything, which
doesn't necessarily apply

569
00:18:41,330 --> 00:18:42,730
here, but we now have
a centralized

570
00:18:42,730 --> 00:18:44,115
resource for app logic.

571
00:18:44,115 --> 00:18:46,090
And I think that actually
brings onto--

572
00:18:46,090 --> 00:18:50,080
the question from Hemanna
HM from Bangalore.

573
00:18:50,080 --> 00:18:51,140
"Is NVC dead?

574
00:18:51,140 --> 00:18:51,960
Should we move on?"

575
00:18:51,960 --> 00:18:52,210
PAUL LEWIS: No.

576
00:18:52,210 --> 00:18:54,960
PAUL KINLAN: No, I think it's
more relevant and applicable

577
00:18:54,960 --> 00:18:55,770
to these types of
applications.

578
00:18:55,770 --> 00:18:56,630
PAUL LEWIS: Yeah, absolutely.

579
00:18:56,630 --> 00:18:59,400
I mean, you can inject
controllers into these.

580
00:18:59,400 --> 00:19:02,450
You could have a central
controller and then treat

581
00:19:02,450 --> 00:19:03,430
these as views.

582
00:19:03,430 --> 00:19:03,880
PAUL KINLAN: Yeah.

583
00:19:03,880 --> 00:19:05,330
So we were talking about this
the other day, weren't we?

584
00:19:05,330 --> 00:19:05,580
PAUL LEWIS: Yeah.

585
00:19:05,580 --> 00:19:06,920
PAUL KINLAN: Where we were
basically saying that the

586
00:19:06,920 --> 00:19:09,000
traditional model for web
applications is to build a

587
00:19:09,000 --> 00:19:11,520
single-page application and
manage the views inside that.

588
00:19:11,520 --> 00:19:13,750
And we're not saying that this
is ever going to go away.

589
00:19:13,750 --> 00:19:17,140
We're saying that you have the
ability to basically go

590
00:19:17,140 --> 00:19:20,030
outside the normal single page
app and have multiple windows

591
00:19:20,030 --> 00:19:22,660
and do tool pilots like
on Photoshop and all

592
00:19:22,660 --> 00:19:24,440
those types of things.

593
00:19:24,440 --> 00:19:26,140
But how do you develop
those applications?

594
00:19:26,140 --> 00:19:28,970
Well, by the fact that we have
access to the window object

595
00:19:28,970 --> 00:19:31,710
that we've created, we were
talking about whether we could

596
00:19:31,710 --> 00:19:33,310
do what the magic iFrame did.

597
00:19:33,310 --> 00:19:35,970
You kind of smoosh HTML and
JavaScript from one window

598
00:19:35,970 --> 00:19:38,450
into another window with
logic or with CS--

599
00:19:38,450 --> 00:19:41,640
well, maybe not with CSS, but
basically enough of the

600
00:19:41,640 --> 00:19:45,550
construct to say, well, it's
an empty window until you

601
00:19:45,550 --> 00:19:47,590
inject data into it, and
content, and logic.

602
00:19:47,590 --> 00:19:49,100
PAUL LEWIS: I think the thing to
remember as well is we keep

603
00:19:49,100 --> 00:19:51,970
saying that that background
page is the hub.

604
00:19:51,970 --> 00:19:54,660
And if you were going to do
this, you would do that kind

605
00:19:54,660 --> 00:19:57,050
of magic iFrame smooshing-in
kind of

606
00:19:57,050 --> 00:19:57,880
methodology, wouldn't you?

607
00:19:57,880 --> 00:19:59,060
To be like here's
a new window.

608
00:19:59,060 --> 00:20:00,680
Smoosh in everything I need.

609
00:20:00,680 --> 00:20:01,240
Off you go.

610
00:20:01,240 --> 00:20:01,600
PAUL KINLAN: Yeah.

611
00:20:01,600 --> 00:20:03,340
I mean, we've played around
with Web Intents.

612
00:20:03,340 --> 00:20:04,170
I keep saying this.

613
00:20:04,170 --> 00:20:05,710
I'm known for Web Intents
and pushing it.

614
00:20:05,710 --> 00:20:06,650
PAUL LEWIS: Really?

615
00:20:06,650 --> 00:20:07,770
That's a shock to me.

616
00:20:07,770 --> 00:20:08,550
PAUL KINLAN: Yes, I know.

617
00:20:08,550 --> 00:20:09,350
I do, you know.

618
00:20:09,350 --> 00:20:10,630
I warn you now.

619
00:20:10,630 --> 00:20:12,680
We'll talk about it.

620
00:20:12,680 --> 00:20:16,290
But yeah, the idea behind Web
Intents was Web Intents inside

621
00:20:16,290 --> 00:20:17,770
Chrome applications--
they opened up--

622
00:20:17,770 --> 00:20:19,650
basically they just called
on-launched again, so it's

623
00:20:19,650 --> 00:20:21,175
like launching a brand new
version of the application

624
00:20:21,175 --> 00:20:22,330
each time you call it.

625
00:20:22,330 --> 00:20:24,870
But your entire application
was constructed and

626
00:20:24,870 --> 00:20:27,070
componentized out of
defined actions.

627
00:20:27,070 --> 00:20:29,350
So in this case, I mean,
this is not a great

628
00:20:29,350 --> 00:20:30,510
example for Web Intents.

629
00:20:30,510 --> 00:20:31,620
It's not a great example.

630
00:20:31,620 --> 00:20:32,610
No, it's a good example.

631
00:20:32,610 --> 00:20:33,690
I'm joking.

632
00:20:33,690 --> 00:20:37,126
PAUL LEWIS: I am mortally
offended.

633
00:20:37,126 --> 00:20:39,740
PAUL KINLAN: The general idea
was that you might have like

634
00:20:39,740 --> 00:20:42,390
an edit function, a view
function, and different

635
00:20:42,390 --> 00:20:43,720
components inside
your application

636
00:20:43,720 --> 00:20:44,740
with different views.

637
00:20:44,740 --> 00:20:47,415
And you'd want third parties to
be able to kind of edit an

638
00:20:47,415 --> 00:20:49,660
image, or view an image using
your application.

639
00:20:49,660 --> 00:20:51,100
But what about yourself,
right?

640
00:20:51,100 --> 00:20:54,030
Do you want to be able to have
to manage all that in a

641
00:20:54,030 --> 00:20:57,300
completely different way than
the Web Intents client would?

642
00:20:57,300 --> 00:21:00,010
And so we played around with
the idea of saying, well,

643
00:21:00,010 --> 00:21:02,750
every single app inside your
application is just an intent.

644
00:21:02,750 --> 00:21:05,510
So you basically say I'm going
to fire a brand-new window.

645
00:21:05,510 --> 00:21:06,590
I'm going to fire an intent.

646
00:21:06,590 --> 00:21:07,750
Find me an application.

647
00:21:07,750 --> 00:21:09,905
I know the applications myself,
so I just call my

648
00:21:09,905 --> 00:21:12,270
on-launched event and
pass the data in.

649
00:21:12,270 --> 00:21:14,800
And then the system goes, well,
I know I need to make a

650
00:21:14,800 --> 00:21:15,370
brand-new window.

651
00:21:15,370 --> 00:21:15,790
Open it up and put
your data in.

652
00:21:15,790 --> 00:21:16,990
PAUL LEWIS: Right.

653
00:21:16,990 --> 00:21:19,640
So in that sense, so you're
saying if I had an application

654
00:21:19,640 --> 00:21:22,210
that could edit an image, it
doesn't matter whether

655
00:21:22,210 --> 00:21:24,845
internally I say dispatch the
Web Intent to edit an image,

656
00:21:24,845 --> 00:21:27,340
or somebody else says
dispatch the Web

657
00:21:27,340 --> 00:21:28,590
Intent to edit an image.

658
00:21:28,590 --> 00:21:28,760
PAUL KINLAN: It's
all the same.

659
00:21:28,760 --> 00:21:30,565
PAUL LEWIS: It's all kind
of handled the same way.

660
00:21:30,565 --> 00:21:33,740
It kind of standardizes and
homogenizes that interface to

661
00:21:33,740 --> 00:21:34,745
your application, doesn't
it, I suppose.

662
00:21:34,745 --> 00:21:36,400
PAUL KINLAN: Yeah, and uses
the same logic that an

663
00:21:36,400 --> 00:21:38,800
external party would
use as well.

664
00:21:38,800 --> 00:21:39,510
It's kind of nice.

665
00:21:39,510 --> 00:21:40,932
It didn't work.

666
00:21:40,932 --> 00:21:42,110
PAUL LEWIS: But it
will, right?

667
00:21:42,110 --> 00:21:42,850
PAUL KINLAN: Yeah, it will.

668
00:21:42,850 --> 00:21:44,820
There was a bug where you
couldn't fire an intent on

669
00:21:44,820 --> 00:21:47,680
your application, which
I hope will be fixed.

670
00:21:47,680 --> 00:21:49,340
At least it should be.

671
00:21:49,340 --> 00:21:51,783
Otherwise, I'll go and
crack some whips.

672
00:21:51,783 --> 00:21:52,156
PAUL LEWIS: Yeah.

673
00:21:52,156 --> 00:21:53,940
Well, that'll be fun.

674
00:21:53,940 --> 00:21:55,080
PAUL KINLAN: That'll
work, won't it?

675
00:21:55,080 --> 00:21:57,420
PAUL LEWIS: Yeah, it's never
going to be a problem.

676
00:21:57,420 --> 00:21:58,620
PAUL KINLAN: But yeah, we were
talking about this with

677
00:21:58,620 --> 00:21:59,370
Angular as well.

678
00:21:59,370 --> 00:22:00,080
PAUL LEWIS: Yes.

679
00:22:00,080 --> 00:22:01,610
PAUL KINLAN: We haven't quite
worked it out just yet.

680
00:22:01,610 --> 00:22:05,220
But we were talking about having
your entire application

681
00:22:05,220 --> 00:22:07,750
user interface defined
in one HTML file.

682
00:22:07,750 --> 00:22:09,010
And then certain directives--

683
00:22:09,010 --> 00:22:10,640
and those directives, for
instance, in Angular, which

684
00:22:10,640 --> 00:22:14,310
say make this area
a modal dialog.

685
00:22:14,310 --> 00:22:15,990
You basically call it.

686
00:22:15,990 --> 00:22:18,120
It makes a modal dialog
inside your page.

687
00:22:18,120 --> 00:22:20,960
Well, if we can inject content
into web pages, why can't we

688
00:22:20,960 --> 00:22:23,390
inject that kind of
modal dialogue?

689
00:22:23,390 --> 00:22:24,640
It's not necessarily
a modal dialog.

690
00:22:24,640 --> 00:22:27,500
We haven't got modal
dialog in this.

691
00:22:27,500 --> 00:22:29,580
It doesn't directly
inject them in.

692
00:22:29,580 --> 00:22:31,855
It just basically says, well,
I'm going to inject the HTML

693
00:22:31,855 --> 00:22:34,330
and JavaScript content in my
controller, and my view, and

694
00:22:34,330 --> 00:22:34,940
all that type of stuff in.

695
00:22:34,940 --> 00:22:38,330
And you've got it coming out,
and you've just got one HTML

696
00:22:38,330 --> 00:22:39,660
resource as the window.

697
00:22:39,660 --> 00:22:42,430
And we're open to
experimentation, right?

698
00:22:42,430 --> 00:22:43,680
PAUL LEWIS: I was going
to say this.

699
00:22:43,680 --> 00:22:46,870
And I'm glad you said this.

700
00:22:46,870 --> 00:22:48,750
We're keen to get feedback.

701
00:22:48,750 --> 00:22:49,750
The question is--

702
00:22:49,750 --> 00:22:52,130
coming back around,
is NVC dead?

703
00:22:52,130 --> 00:22:53,150
Should we move on?

704
00:22:53,150 --> 00:22:54,100
No, it's not dead.

705
00:22:54,100 --> 00:22:54,860
Should we move on?

706
00:22:54,860 --> 00:22:56,310
No.

707
00:22:56,310 --> 00:22:59,490
Go with the methodologies that
you're comfortable with.

708
00:22:59,490 --> 00:23:02,950
We're keen to see
how you get on.

709
00:23:02,950 --> 00:23:03,950
So just let us know.

710
00:23:03,950 --> 00:23:06,320
That's really the general
gist, but no, I

711
00:23:06,320 --> 00:23:07,910
don't consider it dead.

712
00:23:07,910 --> 00:23:08,960
Next question, then.

713
00:23:08,960 --> 00:23:11,300
PAUL KINLAN: So the next
question, "Does multiple

714
00:23:11,300 --> 00:23:13,760
window message pass-in require
the Beta version of Chrome?

715
00:23:13,760 --> 00:23:17,080
Or will it work with the current
Stable version?"

716
00:23:17,080 --> 00:23:19,140
That's from Chris from
Philadelphia.

717
00:23:19,140 --> 00:23:22,220
So this is very much in the
Dev channel at the moment.

718
00:23:22,220 --> 00:23:26,870
The Chrome Apps system
which are--

719
00:23:26,870 --> 00:23:29,050
well, the aim is to make these
applications look and feel

720
00:23:29,050 --> 00:23:31,050
native on the desktop, right?

721
00:23:31,050 --> 00:23:33,360
They're not quite ready for
Stable channel just yet.

722
00:23:33,360 --> 00:23:34,680
The APIs are still evolving.

723
00:23:34,680 --> 00:23:38,020
So they're very much behind
the Canary branch and Dev.

724
00:23:38,020 --> 00:23:39,950
At some point soon, they should
roll out into Beta.

725
00:23:39,950 --> 00:23:42,360
And once they roll out into
Beta, they go into Stable.

726
00:23:42,360 --> 00:23:46,226
The interesting thing just
generally is that--

727
00:23:46,226 --> 00:23:48,250
sorry, I'm just seeing a
Web Intent question.

728
00:23:48,250 --> 00:23:51,070
I should not look at
other screens.

729
00:23:51,070 --> 00:23:52,650
So the thing is they're
not there just yet.

730
00:23:52,650 --> 00:23:54,790
They will come soon.

731
00:23:54,790 --> 00:23:56,710
And then this will be available
for those types of

732
00:23:56,710 --> 00:23:58,200
applications also.

733
00:23:58,200 --> 00:23:58,910
So it's pretty cool.

734
00:23:58,910 --> 00:24:01,020
PAUL LEWIS: What was that Web
Intents question then? "Chrome

735
00:24:01,020 --> 00:24:02,630
extensions on Web Intents?

736
00:24:02,630 --> 00:24:05,720
Best mates or oil and water?"

737
00:24:05,720 --> 00:24:06,370
PAUL KINLAN: Best mates.

738
00:24:06,370 --> 00:24:07,490
PAUL LEWIS: Oh, there's
a shock.

739
00:24:07,490 --> 00:24:08,750
PAUL KINLAN: Yes.

740
00:24:08,750 --> 00:24:10,130
PAUL LEWIS: Color
me surprised.

741
00:24:10,130 --> 00:24:11,700
Why are they best mates?

742
00:24:11,700 --> 00:24:13,910
PAUL KINLAN: Because the whole
of Chrome is a best mate with

743
00:24:13,910 --> 00:24:14,540
Web Intents.

744
00:24:14,540 --> 00:24:15,110
PAUL LEWIS: I like it.

745
00:24:15,110 --> 00:24:17,680
PAUL KINLAN: So when you look at
a lot of things to do with

746
00:24:17,680 --> 00:24:19,070
Web Intents-- can we
just try actually?

747
00:24:19,070 --> 00:24:21,590

748
00:24:21,590 --> 00:24:22,570
Go back to the screen.

749
00:24:22,570 --> 00:24:22,880
PAUL LEWIS: Yeah?

750
00:24:22,880 --> 00:24:23,840
Where are we going?

751
00:24:23,840 --> 00:24:24,280
What are we doing?

752
00:24:24,280 --> 00:24:24,590
PAUL KINLAN: Right.

753
00:24:24,590 --> 00:24:27,030
Can we go to a site,
your blog.

754
00:24:27,030 --> 00:24:29,290
Can we go to your blog?

755
00:24:29,290 --> 00:24:31,130
aerotwist.com.

756
00:24:31,130 --> 00:24:31,960
PAUL LEWIS: Oh, interesting.

757
00:24:31,960 --> 00:24:32,710
Excellent.

758
00:24:32,710 --> 00:24:33,410
Look at that.

759
00:24:33,410 --> 00:24:34,090
I'm joining Google.

760
00:24:34,090 --> 00:24:35,250
PAUL KINLAN: When are
you joining Google?

761
00:24:35,250 --> 00:24:36,280
PAUL LEWIS: already did.

762
00:24:36,280 --> 00:24:36,650
PAUL KINLAN: Really?

763
00:24:36,650 --> 00:24:37,510
PAUL LEWIS: Yeah.

764
00:24:37,510 --> 00:24:37,850
Oh, look at these!

765
00:24:37,850 --> 00:24:39,080
Some tutorials.

766
00:24:39,080 --> 00:24:39,720
PAUL KINLAN: Sweet.

767
00:24:39,720 --> 00:24:41,850
So click on the little
plus button.

768
00:24:41,850 --> 00:24:42,580
Share this page.

769
00:24:42,580 --> 00:24:43,170
PAUL LEWIS: I would love to.

770
00:24:43,170 --> 00:24:44,700
PAUL KINLAN: This
fires Intents.

771
00:24:44,700 --> 00:24:46,310
So we don't have any
of these installed.

772
00:24:46,310 --> 00:24:48,250
So what happens here is there's
actually three or four

773
00:24:48,250 --> 00:24:49,410
different applications.

774
00:24:49,410 --> 00:24:51,080
None of them are installed.

775
00:24:51,080 --> 00:24:52,670
Share to--

776
00:24:52,670 --> 00:24:53,510
is this--

777
00:24:53,510 --> 00:24:54,750
what type of email is this?

778
00:24:54,750 --> 00:24:56,220
Is this a--

779
00:24:56,220 --> 00:24:56,620
PAUL LEWIS: No.

780
00:24:56,620 --> 00:24:57,510
PAUL KINLAN: --personal
email address?

781
00:24:57,510 --> 00:24:58,995
PAUL LEWIS: This is
completely fresh.

782
00:24:58,995 --> 00:25:01,140
PAUL KINLAN: OK, we'll
give it a go, right?

783
00:25:01,140 --> 00:25:04,710
Oh wait, tell you what.

784
00:25:04,710 --> 00:25:06,260
Let's share with Gmail.

785
00:25:06,260 --> 00:25:06,840
See what happens.

786
00:25:06,840 --> 00:25:10,300
We won't actually see any data
come through, but add it and

787
00:25:10,300 --> 00:25:10,680
come through.

788
00:25:10,680 --> 00:25:14,010
So what's happened here is
that we've redirected.

789
00:25:14,010 --> 00:25:16,465
Could we jump back from the code
now and then just go to

790
00:25:16,465 --> 00:25:17,715
our pretty face?

791
00:25:17,715 --> 00:25:21,340

792
00:25:21,340 --> 00:25:23,110
So what's actually happened here
is that we've actually

793
00:25:23,110 --> 00:25:25,880
passed the data from the share
intent straight through to an

794
00:25:25,880 --> 00:25:26,830
application.

795
00:25:26,830 --> 00:25:30,020
It can be a Chrome application,
old packaged app,

796
00:25:30,020 --> 00:25:32,210
new packaged app,
hosted website.

797
00:25:32,210 --> 00:25:34,573
So it could be say, a cloud
file, [INAUDIBLE].

798
00:25:34,573 --> 00:25:35,975
PAUL LEWIS: Could it
be an extension?

799
00:25:35,975 --> 00:25:37,540
PAUL KINLAN: And an extension.

800
00:25:37,540 --> 00:25:40,970
So this is not Gmail directly
supporting Intents right now.

801
00:25:40,970 --> 00:25:45,850
This is me writing an extension
which uses Intents.

802
00:25:45,850 --> 00:25:46,720
PAUL LEWIS: So it
passes through.

803
00:25:46,720 --> 00:25:47,490
PAUL KINLAN: Yeah, basically.

804
00:25:47,490 --> 00:25:49,050
So all of the Intents
system is built

805
00:25:49,050 --> 00:25:51,100
off the back of Chrome.

806
00:25:51,100 --> 00:25:53,940
And irregardless of whether it's
an extension, the host of

807
00:25:53,940 --> 00:25:58,170
that normal web application or
website, or an application,

808
00:25:58,170 --> 00:25:59,470
they will all work together.

809
00:25:59,470 --> 00:25:59,940
PAUL LEWIS: Wow.

810
00:25:59,940 --> 00:26:00,690
Best mates, indeed.

811
00:26:00,690 --> 00:26:01,580
PAUL KINLAN: Best buddies.

812
00:26:01,580 --> 00:26:02,600
Definitely not oil and water.

813
00:26:02,600 --> 00:26:04,000
PAUL LEWIS: No.

814
00:26:04,000 --> 00:26:04,300
PAUL KINLAN: OK.

815
00:26:04,300 --> 00:26:06,720
So next question--

816
00:26:06,720 --> 00:26:08,840
"How do I manage supporting
users-- we might as well

817
00:26:08,840 --> 00:26:09,360
answer this question.

818
00:26:09,360 --> 00:26:11,780
We're not going to have a good
answer, I don't think.

819
00:26:11,780 --> 00:26:14,100
"How do I manage supporting
users on all the Chrome

820
00:26:14,100 --> 00:26:17,875
versions, eg, 15 on Ubuntu.

821
00:26:17,875 --> 00:26:20,460
I can see breaking changes
around Version 18, but the

822
00:26:20,460 --> 00:26:24,420
docs pre-18 are no
longer available.

823
00:26:24,420 --> 00:26:26,825
My specific problem is around
send message and send

824
00:26:26,825 --> 00:26:27,300
request."

825
00:26:27,300 --> 00:26:29,320
I think the best thing to do
is send that to the Chrome

826
00:26:29,320 --> 00:26:36,670
Extensions group or the Chrome
Apps group on Google Groups of

827
00:26:36,670 --> 00:26:37,600
all places.

828
00:26:37,600 --> 00:26:39,920
Or ask on Stack Overflow,
because we monitor Stack

829
00:26:39,920 --> 00:26:40,500
Overflow as well.

830
00:26:40,500 --> 00:26:43,070
The actual documentations, we
try to keep the documentation

831
00:26:43,070 --> 00:26:46,460
in line with what is mostly
in production.

832
00:26:46,460 --> 00:26:50,340
So Stable is where, I presume,
like 99.9% of

833
00:26:50,340 --> 00:26:50,890
all our users are.

834
00:26:50,890 --> 00:26:53,660
I don't know the exact
figures there.

835
00:26:53,660 --> 00:26:55,600
But the majority of everyone's
on Stable, which at the

836
00:26:55,600 --> 00:26:57,370
moment is on 22.

837
00:26:57,370 --> 00:26:59,400
Beta, I believe, is
still 22 as well.

838
00:26:59,400 --> 00:27:01,270
It might change to
23 at some point.

839
00:27:01,270 --> 00:27:04,350
Dev is 23 going on 24, those
types of things.

840
00:27:04,350 --> 00:27:07,550
So we tend to only keep
documentations for what is

841
00:27:07,550 --> 00:27:08,860
really, really applicable.

842
00:27:08,860 --> 00:27:11,470
Because we're an auto-updating
framework, the number of users

843
00:27:11,470 --> 00:27:14,340
outside is pretty small.

844
00:27:14,340 --> 00:27:16,890
But that being said, we want to
make sure you can have your

845
00:27:16,890 --> 00:27:17,860
questions answered.

846
00:27:17,860 --> 00:27:20,930
And you could do that
in Stack Overflow.

847
00:27:20,930 --> 00:27:23,250
Tag it with either Google
Chrome or Chrome

848
00:27:23,250 --> 00:27:24,460
App I think is the--

849
00:27:24,460 --> 00:27:25,100
PAUL LEWIS: Google Chrome App.

850
00:27:25,100 --> 00:27:26,436
PAUL KINLAN: Google
Chrome App, is it?

851
00:27:26,436 --> 00:27:26,830
PAUL LEWIS: I think so.

852
00:27:26,830 --> 00:27:28,290
PAUL KINLAN: Or Chrome
Extensions.

853
00:27:28,290 --> 00:27:31,270
Google Chrome Extension,
I believe it will be.

854
00:27:31,270 --> 00:27:32,900
Tag them up there, and
away you will go.

855
00:27:32,900 --> 00:27:35,440
And someone will try and answer
your question as best

856
00:27:35,440 --> 00:27:36,690
as possible.

857
00:27:36,690 --> 00:27:40,480

858
00:27:40,480 --> 00:27:41,970
So do we have any
more questions?

859
00:27:41,970 --> 00:27:42,430
PAUL LEWIS: We do.

860
00:27:42,430 --> 00:27:43,970
Sorry if this is out of topic.

861
00:27:43,970 --> 00:27:46,695
It says Luciano. "What
are the deploy

862
00:27:46,695 --> 00:27:49,210
options for Chrome Apps?

863
00:27:49,210 --> 00:27:52,120
If I'm using Google Apps for
Business can I deploy only on

864
00:27:52,120 --> 00:27:54,970
my organization?

865
00:27:54,970 --> 00:27:56,330
PAUL KINLAN: This is
a good question.

866
00:27:56,330 --> 00:27:59,860
So we have good support for
Apps organizations.

867
00:27:59,860 --> 00:28:02,025
If you go to the developer
dashboard, chrome.google.co

868
00:28:02,025 --> 00:28:09,850
m/webstore/developer/dashboard,
That's where basically you

869
00:28:09,850 --> 00:28:10,940
manage your applications.

870
00:28:10,940 --> 00:28:14,310
And if you're inside a Google
Apps domain, I believe it very

871
00:28:14,310 --> 00:28:16,710
much depends on the policy that
your admins have set.

872
00:28:16,710 --> 00:28:17,660
PAUL LEWIS: Absolutely
it does, yes.

873
00:28:17,660 --> 00:28:20,820
PAUL KINLAN: So you can either
publish locally to your own

874
00:28:20,820 --> 00:28:25,500
/a/yourdomain kind of web store,
which will have the

875
00:28:25,500 --> 00:28:27,800
rest of the web store in
if the administrator's

876
00:28:27,800 --> 00:28:29,640
technically enabled it.

877
00:28:29,640 --> 00:28:32,890
But it'll have just your
applications and only your

878
00:28:32,890 --> 00:28:34,180
users will be able
to see them.

879
00:28:34,180 --> 00:28:36,240
That being said, if you make an
application and you want to

880
00:28:36,240 --> 00:28:40,970
host it, publish it using your
own Google Apps domain, you

881
00:28:40,970 --> 00:28:42,190
can still do that, and
you can still publish

882
00:28:42,190 --> 00:28:43,230
it publicly as well.

883
00:28:43,230 --> 00:28:43,980
PAUL LEWIS: Awesome.

884
00:28:43,980 --> 00:28:45,690
PAUL KINLAN: So, yeah,
that should work.

885
00:28:45,690 --> 00:28:48,280
And the thing right now is we
don't have the ability to

886
00:28:48,280 --> 00:28:50,270
support these new Chrome
apps just yet.

887
00:28:50,270 --> 00:28:51,820
I hope it's soon.

888
00:28:51,820 --> 00:28:54,860
And we'll let you know as soon
as that happens because it

889
00:28:54,860 --> 00:28:56,245
will be a joyous day.

890
00:28:56,245 --> 00:28:57,870
PAUL LEWIS: But do start
playing with it.

891
00:28:57,870 --> 00:29:02,300
Because when that does happen,
you can have your

892
00:29:02,300 --> 00:29:03,150
apps ready to fly.

893
00:29:03,150 --> 00:29:05,670
And that's a lot of users
that get to play with

894
00:29:05,670 --> 00:29:07,200
your shiny new app.

895
00:29:07,200 --> 00:29:07,960
PAUL KINLAN: Yes.

896
00:29:07,960 --> 00:29:12,040
So I'm apologizing for looking
away from the camera.

897
00:29:12,040 --> 00:29:13,740
PAUL LEWIS: Got any
more questions?

898
00:29:13,740 --> 00:29:15,670
PAUL KINLAN: So Terry Davis.
"With this practice, can you

899
00:29:15,670 --> 00:29:18,600
code a floating YouTube video
that can have an adjusted

900
00:29:18,600 --> 00:29:19,770
transparency?"

901
00:29:19,770 --> 00:29:22,450
PAUL LEWIS: So the floating
window thing--

902
00:29:22,450 --> 00:29:23,000
PAUL KINLAN: Yes.

903
00:29:23,000 --> 00:29:25,360
PAUL LEWIS: --yes, we
can do because--

904
00:29:25,360 --> 00:29:25,830
PAUL KINLAN: The transparency,
no.

905
00:29:25,830 --> 00:29:26,200
PAUL LEWIS: The transparency,
no.

906
00:29:26,200 --> 00:29:27,750
PAUL KINLAN: There is actually
an open book about this.

907
00:29:27,750 --> 00:29:29,870
We would like you to be able to
have the ability for you to

908
00:29:29,870 --> 00:29:33,160
say, well, different parts of
your Chrome are transparent.

909
00:29:33,160 --> 00:29:36,210
We can have the ability to do a
lot with the Chrome in your

910
00:29:36,210 --> 00:29:38,020
Chrome application right now.

911
00:29:38,020 --> 00:29:39,160
But not transparency.

912
00:29:39,160 --> 00:29:40,880
PAUL LEWIS: But the floating
window thing, you can, for

913
00:29:40,880 --> 00:29:41,900
example, set.

914
00:29:41,900 --> 00:29:44,660
When you create that window,
if you remember back to my

915
00:29:44,660 --> 00:29:48,500
code, I had the createWindow
going on.

916
00:29:48,500 --> 00:29:51,580
In the object that you pass
through where I had the width

917
00:29:51,580 --> 00:29:54,410
on the left, you can actually
add frame as an extra property

918
00:29:54,410 --> 00:29:55,420
and then set none.

919
00:29:55,420 --> 00:29:58,240
And that will get rid of the
bar at the top and all the

920
00:29:58,240 --> 00:30:01,110
rest of it, so it's actually
just a window.

921
00:30:01,110 --> 00:30:06,100
So you can then drop in some
YouTube goodness into there.

922
00:30:06,100 --> 00:30:07,140
So you can do that.

923
00:30:07,140 --> 00:30:10,300
And then also we've got a bug
open for transparency.

924
00:30:10,300 --> 00:30:11,030
PAUL KINLAN: Yep.

925
00:30:11,030 --> 00:30:11,710
PAUL LEWIS: Cool.

926
00:30:11,710 --> 00:30:13,000
PAUL KINLAN: I think
we're at the end

927
00:30:13,000 --> 00:30:14,060
of our general questions.

928
00:30:14,060 --> 00:30:17,520
I do want to talk one more time
about the windows and the

929
00:30:17,520 --> 00:30:18,790
window in APIs.

930
00:30:18,790 --> 00:30:22,910
We are definitely open for
consideration of how you want

931
00:30:22,910 --> 00:30:25,710
to build applications with
the window in API.

932
00:30:25,710 --> 00:30:27,990
We do have some examples on
GitHub, and we'll share them

933
00:30:27,990 --> 00:30:29,320
out later on.

934
00:30:29,320 --> 00:30:30,780
I'm just cleaning some of
them up little bit.

935
00:30:30,780 --> 00:30:34,500
But both Censure and Kendo
made two applications.

936
00:30:34,500 --> 00:30:39,120
One is a video streamer that
connects to your media center

937
00:30:39,120 --> 00:30:40,470
on your local network.

938
00:30:40,470 --> 00:30:41,550
Pretty cool.

939
00:30:41,550 --> 00:30:42,430
PAUL LEWIS: That
sounds amazing.

940
00:30:42,430 --> 00:30:43,750
PAUL KINLAN: Yeah, it does
UPnP broadcast, all

941
00:30:43,750 --> 00:30:44,130
that type of stuff.

942
00:30:44,130 --> 00:30:45,090
PAUL LEWIS: Sweet!

943
00:30:45,090 --> 00:30:47,850
PAUL KINLAN: It's nice.

944
00:30:47,850 --> 00:30:51,460
They actually built their own
method for routing messages

945
00:30:51,460 --> 00:30:52,120
between them.

946
00:30:52,120 --> 00:30:53,920
So there's some pop-up
frameworks you can get in

947
00:30:53,920 --> 00:30:55,180
JavaScript.

948
00:30:55,180 --> 00:30:58,240
I think it's JPopup
of all names.

949
00:30:58,240 --> 00:31:01,150
And basically, the idea behind
that was to have this

950
00:31:01,150 --> 00:31:04,433
background page orchestrate all
the logic, especially when

951
00:31:04,433 --> 00:31:05,270
you're in sandbox.

952
00:31:05,270 --> 00:31:06,440
We didn't really touch that
today with the sandbox.

953
00:31:06,440 --> 00:31:07,020
PAUL LEWIS: No.

954
00:31:07,020 --> 00:31:08,620
PAUL KINLAN: If your application
is in sandbox, I

955
00:31:08,620 --> 00:31:09,936
don't believe you can actually
get access to

956
00:31:09,936 --> 00:31:10,940
the background page.

957
00:31:10,940 --> 00:31:11,320
PAUL LEWIS: No.

958
00:31:11,320 --> 00:31:12,570
PAUL KINLAN: You have
to post message.

959
00:31:12,570 --> 00:31:12,740
PAUL LEWIS: Post message.

960
00:31:12,740 --> 00:31:13,080
PAUL KINLAN: Yeah.

961
00:31:13,080 --> 00:31:16,650
So if you need to use eval and a
new function and you have to

962
00:31:16,650 --> 00:31:18,170
have the sandbox attribute
for your

963
00:31:18,170 --> 00:31:20,070
application, you will be--

964
00:31:20,070 --> 00:31:21,270
I think you have to use--

965
00:31:21,270 --> 00:31:21,880
PAUL LEWIS: Kind of
what I was saying.

966
00:31:21,880 --> 00:31:24,655
Actually, that does apply
if you are using say, a

967
00:31:24,655 --> 00:31:25,820
templating engine.

968
00:31:25,820 --> 00:31:29,160
Most of the time, they use
eval or new function.

969
00:31:29,160 --> 00:31:32,750
To get those to work seamlessly,
then you do put

970
00:31:32,750 --> 00:31:33,890
them into a sandbox.

971
00:31:33,890 --> 00:31:37,480
So you would use that, as Paul
said, the post message thing.

972
00:31:37,480 --> 00:31:41,610
I think the only framework I'm
aware of is Angular right now,

973
00:31:41,610 --> 00:31:43,890
that It doesn't need--

974
00:31:43,890 --> 00:31:44,710
PAUL KINLAN: Backbone.

975
00:31:44,710 --> 00:31:46,640
You can use Backbone
to some extent.

976
00:31:46,640 --> 00:31:48,960
The only thing is the
[INAUDIBLE] on the template,

977
00:31:48,960 --> 00:31:51,080
which you can work around
quite easily.

978
00:31:51,080 --> 00:31:54,020
But generally, Backbone
work perfectly.

979
00:31:54,020 --> 00:31:56,230
Kendo, I believe, censured
the use of the sandbox

980
00:31:56,230 --> 00:31:57,770
system, so they use--

981
00:31:57,770 --> 00:32:01,030
but it's kind of cool because
it abstracts your view and

982
00:32:01,030 --> 00:32:04,270
your logic, awake quite nicely
inside the background page, so

983
00:32:04,270 --> 00:32:04,660
it's pretty cool.

984
00:32:04,660 --> 00:32:07,060
PAUL LEWIS: Also, what we didn't
cover today, I believe

985
00:32:07,060 --> 00:32:10,370
we covered in a previous week,
was the minimize and maximize.

986
00:32:10,370 --> 00:32:12,980
You've got also other methods
that you can call on the

987
00:32:12,980 --> 00:32:16,340
windows, which as I say,
we didn't cover today.

988
00:32:16,340 --> 00:32:18,090
But you can find the
documentation on

989
00:32:18,090 --> 00:32:23,140
developers.chrome.com/apps.

990
00:32:23,140 --> 00:32:25,600
And that covers things like
minimize, maximize, and--

991
00:32:25,600 --> 00:32:27,755
PAUL KINLAN: You know what is
interesting I found the other

992
00:32:27,755 --> 00:32:28,795
day scanning the docs?

993
00:32:28,795 --> 00:32:29,080
PAUL LEWIS: Shoot.

994
00:32:29,080 --> 00:32:30,980
PAUL KINLAN: If you put "trunk"
before "apps," you get

995
00:32:30,980 --> 00:32:33,110
the very latest documentation.

996
00:32:33,110 --> 00:32:38,410
And TCP Listener looks like it
is in the latest version.

997
00:32:38,410 --> 00:32:40,940

998
00:32:40,940 --> 00:32:42,100
PAUL LEWIS: Service
in the browser.

999
00:32:42,100 --> 00:32:42,590
PAUL KINLAN: Yes.

1000
00:32:42,590 --> 00:32:45,150
So we have the ability to do
UDP service in the browser

1001
00:32:45,150 --> 00:32:46,916
because we have BIND, which
is pretty cool.

1002
00:32:46,916 --> 00:32:47,610
PAUL LEWIS: It is amazing.

1003
00:32:47,610 --> 00:32:50,060
PAUL KINLAN: The biggest one
people want, though, is the

1004
00:32:50,060 --> 00:32:52,420
ability to do a TCP server
in the background.

1005
00:32:52,420 --> 00:32:55,570
So you could basically run an
HTTP server inside your

1006
00:32:55,570 --> 00:32:57,400
application.

1007
00:32:57,400 --> 00:32:59,190
PAUL LEWIS: And the web
serving the web--

1008
00:32:59,190 --> 00:32:59,480
PAUL KINLAN: Indeed.

1009
00:32:59,480 --> 00:32:59,860
PAUL LEWIS: Oh!

1010
00:32:59,860 --> 00:33:01,840
PAUL KINLAN: It's like oh!

1011
00:33:01,840 --> 00:33:02,570
PAUL LEWIS: Wow.

1012
00:33:02,570 --> 00:33:03,100
PAUL KINLAN: It's pretty cool.

1013
00:33:03,100 --> 00:33:04,640
But that's actually pretty
cool because we get the

1014
00:33:04,640 --> 00:33:06,120
ability to do nice things.

1015
00:33:06,120 --> 00:33:08,100
I haven't tested it to
see if it works.

1016
00:33:08,100 --> 00:33:09,770
I'm presuming, though, the
documentation is there.

1017
00:33:09,770 --> 00:33:12,155
Then there's a good chance that
at least the AP-- well,

1018
00:33:12,155 --> 00:33:13,120
I'll rephrase it.

1019
00:33:13,120 --> 00:33:16,010
The documentation generates
off the API information.

1020
00:33:16,010 --> 00:33:17,540
So at least it means the
stubs are there.

1021
00:33:17,540 --> 00:33:19,200
Whether the actual
implementation is there is a

1022
00:33:19,200 --> 00:33:20,520
different thing.

1023
00:33:20,520 --> 00:33:22,990
But yeah, we have this ability
to do some really potentially

1024
00:33:22,990 --> 00:33:26,600
awesome stuff around
networking.

1025
00:33:26,600 --> 00:33:28,660
Eric Bidelman-- so we ran
a hackathon internally.

1026
00:33:28,660 --> 00:33:29,250
PAUL LEWIS: Certainly did.

1027
00:33:29,250 --> 00:33:30,380
PAUL KINLAN: Eric Bidelman
was trying to

1028
00:33:30,380 --> 00:33:31,150
do something similar.

1029
00:33:31,150 --> 00:33:32,180
We couldn't do it.

1030
00:33:32,180 --> 00:33:34,710
Basically he was saying I want
to be able to develop a My

1031
00:33:34,710 --> 00:33:35,550
Chromebook.

1032
00:33:35,550 --> 00:33:38,190
So My Chromebook.

1033
00:33:38,190 --> 00:33:41,170
We always get questions
about Chromebooks.

1034
00:33:41,170 --> 00:33:43,100
He wants to be able to develop
on his Chromebook, but also

1035
00:33:43,100 --> 00:33:44,780
host it and test his
application.

1036
00:33:44,780 --> 00:33:45,210
PAUL LEWIS: Absolutely.

1037
00:33:45,210 --> 00:33:46,796
PAUL KINLAN: So the idea is
basically like I don't want to

1038
00:33:46,796 --> 00:33:49,500
have to go out, FTP it
up somewhere, and

1039
00:33:49,500 --> 00:33:50,040
test it that way.

1040
00:33:50,040 --> 00:33:52,410
I just want to be able to run a
basic web server to test my

1041
00:33:52,410 --> 00:33:54,070
content and view it inside
the browser.

1042
00:33:54,070 --> 00:33:55,540
PAUL LEWIS: So TCP Listener
is exactly what

1043
00:33:55,540 --> 00:33:56,120
you need for that.

1044
00:33:56,120 --> 00:33:56,340
PAUL KINLAN: Yeah.

1045
00:33:56,340 --> 00:34:00,780
That's the aim , is TCP Listener
is that exact thing.

1046
00:34:00,780 --> 00:34:03,200
That's the first use case
I can think of.

1047
00:34:03,200 --> 00:34:04,300
PAUL LEWIS: Yeah, it's
a good one in all.

1048
00:34:04,300 --> 00:34:04,960
PAUL KINLAN: I think
it's pretty cool.

1049
00:34:04,960 --> 00:34:05,610
PAUL LEWIS: All right.

1050
00:34:05,610 --> 00:34:07,880
PAUL KINLAN: I can't imagine
SMTP servers in the browser.

1051
00:34:07,880 --> 00:34:09,070
PAUL LEWIS: There's a
whole world there.

1052
00:34:09,070 --> 00:34:10,000
PAUL KINLAN: Yeah,
it's pretty cool.

1053
00:34:10,000 --> 00:34:12,780
PAUL LEWIS: It's
pretty awesome.

1054
00:34:12,780 --> 00:34:15,420
PAUL KINLAN: So anyway, we would
actually like to know

1055
00:34:15,420 --> 00:34:17,850
what type of things that
you want to hear

1056
00:34:17,850 --> 00:34:18,760
from us in the future.

1057
00:34:18,760 --> 00:34:19,600
PAUL LEWIS: Yes.

1058
00:34:19,600 --> 00:34:21,270
PAUL KINLAN: Will I be
on my own next time?

1059
00:34:21,270 --> 00:34:22,000
PAUL LEWIS: I don't know.

1060
00:34:22,000 --> 00:34:22,800
We'll find out, won't we?

1061
00:34:22,800 --> 00:34:23,230
PAUL KINLAN: Yeah.

1062
00:34:23,230 --> 00:34:23,610
We'll see what happens.

1063
00:34:23,610 --> 00:34:24,320
PAUL LEWIS: Tune in.

1064
00:34:24,320 --> 00:34:26,080
Oh, to find out.

1065
00:34:26,080 --> 00:34:29,429
PAUL KINLAN: Ideally, we want
to try and get more very

1066
00:34:29,429 --> 00:34:31,070
specific application
information--

1067
00:34:31,070 --> 00:34:33,350
so show you applications running
rather than just show

1068
00:34:33,350 --> 00:34:34,610
some of the raw APIs.

1069
00:34:34,610 --> 00:34:36,219
I will deep dive into
those APIs.

1070
00:34:36,219 --> 00:34:37,820
But we'll give you a
good overview of

1071
00:34:37,820 --> 00:34:38,620
what's going to happen.

1072
00:34:38,620 --> 00:34:40,400
I really want to talk about
the browser type, because

1073
00:34:40,400 --> 00:34:41,370
that's one of those things
that's going

1074
00:34:41,370 --> 00:34:42,530
to be pretty cool.

1075
00:34:42,530 --> 00:34:43,400
PAUL LEWIS: Yeah, especially
how that differs

1076
00:34:43,400 --> 00:34:46,060
from like my an iFrame.

1077
00:34:46,060 --> 00:34:47,409
Because that has
come up before.

1078
00:34:47,409 --> 00:34:49,219
How does this differ?

1079
00:34:49,219 --> 00:34:49,730
So we can cover up
that as well.

1080
00:34:49,730 --> 00:34:50,960
PAUL KINLAN: We'll
cover up that.

1081
00:34:50,960 --> 00:34:53,130
We'll do a whole load of
stuff around storage.

1082
00:34:53,130 --> 00:34:56,380
You'll do some playing
around with that.

1083
00:34:56,380 --> 00:34:57,870
Image downloading
at one point.

1084
00:34:57,870 --> 00:34:58,380
PAUL LEWIS: Absolutely.

1085
00:34:58,380 --> 00:34:58,670
PAUL KINLAN: Yes.

1086
00:34:58,670 --> 00:34:59,870
I know Eric Bidelman
covered it.

1087
00:34:59,870 --> 00:35:01,540
But hopefully, we'll get
a library out at some

1088
00:35:01,540 --> 00:35:02,895
point soon I hope.

1089
00:35:02,895 --> 00:35:05,890

1090
00:35:05,890 --> 00:35:07,520
PAUL LEWIS: Thank you very
much for joining us.

1091
00:35:07,520 --> 00:35:08,150
PAUL KINLAN: It's a little
bit short today.

1092
00:35:08,150 --> 00:35:11,370
I'm very sorry about the
questions and answers, just

1093
00:35:11,370 --> 00:35:12,630
pure because I--

1094
00:35:12,630 --> 00:35:15,590
So what It was, I didn't set
it up correctly completely.

1095
00:35:15,590 --> 00:35:18,400
I set the questions to
end as we started,

1096
00:35:18,400 --> 00:35:20,060
not end as we finished.

1097
00:35:20,060 --> 00:35:21,600
PAUL LEWIS: This is quite
cathartic for you, isn't it?

1098
00:35:21,600 --> 00:35:24,245
To just share this out
to the internet.

1099
00:35:24,245 --> 00:35:25,070
PAUL KINLAN: Yes.

1100
00:35:25,070 --> 00:35:25,790
PAUL LEWIS: Dear internet--

1101
00:35:25,790 --> 00:35:26,000
PAUL KINLAN: Dear internet--

1102
00:35:26,000 --> 00:35:26,730
PAUL LEWIS: I'm sorry.

1103
00:35:26,730 --> 00:35:27,390
PAUL KINLAN: --I'm sorry.

1104
00:35:27,390 --> 00:35:28,260
PAUL LEWIS: There
you go, you see?

1105
00:35:28,260 --> 00:35:28,910
Feel better?

1106
00:35:28,910 --> 00:35:29,165
PAUL KINLAN: Yes.

1107
00:35:29,165 --> 00:35:31,840
And also--

1108
00:35:31,840 --> 00:35:32,270
ooh!

1109
00:35:32,270 --> 00:35:33,280
We have another question.

1110
00:35:33,280 --> 00:35:34,090
Can we continue?

1111
00:35:34,090 --> 00:35:35,000
I think we can.

1112
00:35:35,000 --> 00:35:36,090
PAUL LEWIS: Well, we haven't
said goodbye.

1113
00:35:36,090 --> 00:35:37,120
PAUL KINLAN: We haven't
said goodbye.

1114
00:35:37,120 --> 00:35:38,750
PAUL LEWIS: This is the
joy of the liveness.

1115
00:35:38,750 --> 00:35:42,370
PAUL KINLAN: So if you're into
British comedy, we have a

1116
00:35:42,370 --> 00:35:43,240
surprise for you later.

1117
00:35:43,240 --> 00:35:44,460
PAUL LEWIS: No, don't do that.

1118
00:35:44,460 --> 00:35:45,420
Yeah, we did it.

1119
00:35:45,420 --> 00:35:47,320
PAUL KINLAN: We did it.

1120
00:35:47,320 --> 00:35:48,750
It's put the pressure on.

1121
00:35:48,750 --> 00:35:49,075
PAUL LEWIS: No, I like it.

1122
00:35:49,075 --> 00:35:49,820
And we'll forget.

1123
00:35:49,820 --> 00:35:50,690
I'll be fine.

1124
00:35:50,690 --> 00:35:52,370
PAUL KINLAN: So it's "Heymonth."
I think that's how

1125
00:35:52,370 --> 00:35:53,412
we pronounced it.

1126
00:35:53,412 --> 00:35:56,230
I got it from, I think,
Bangalore again.

1127
00:35:56,230 --> 00:35:58,295
PAUL LEWIS: "What was that
about magic iFrames?"

1128
00:35:58,295 --> 00:36:00,720
PAUL KINLAN: "Magic iFrames.
"I saw a proposal to remove

1129
00:36:00,720 --> 00:36:05,410
it." Yes, I heard about a
proposal to remove the magic

1130
00:36:05,410 --> 00:36:08,536
iFrames work as well.

1131
00:36:08,536 --> 00:36:10,140
The reason why-- well,
I say the reason why.

1132
00:36:10,140 --> 00:36:11,810
I don't know the full
reason why.

1133
00:36:11,810 --> 00:36:14,680
I wouldn't be surprised because
no one really knew how

1134
00:36:14,680 --> 00:36:15,390
it ever worked.

1135
00:36:15,390 --> 00:36:16,440
I never saw any documentation.

1136
00:36:16,440 --> 00:36:17,160
PAUL LEWIS: Right.

1137
00:36:17,160 --> 00:36:19,980
PAUL KINLAN: You search Google
for magic iFrames.

1138
00:36:19,980 --> 00:36:22,620
You get a page mention in magic
iFrames and not exactly

1139
00:36:22,620 --> 00:36:23,030
what it was.

1140
00:36:23,030 --> 00:36:25,450
But that was the idea, is you
could start to inject content

1141
00:36:25,450 --> 00:36:28,310
and bridge an iFrame between
two windows.

1142
00:36:28,310 --> 00:36:31,720
So you've got open window, well,
the window reference off

1143
00:36:31,720 --> 00:36:32,490
window.open.

1144
00:36:32,490 --> 00:36:36,190
You basically put
the iFrame in.

1145
00:36:36,190 --> 00:36:38,640
But no one ever knew
how to do it.

1146
00:36:38,640 --> 00:36:41,500
But if you ever saw that's live,
share them, out and I'll

1147
00:36:41,500 --> 00:36:42,920
share them on Google
and Twitter.

1148
00:36:42,920 --> 00:36:44,455
I'm Paul Kinlan on Google+.

1149
00:36:44,455 --> 00:36:46,250
PAUL LEWIS: I'm Paul
Lewis on Google+.

1150
00:36:46,250 --> 00:36:48,080
PAUL KINLAN: But you have a
funny name on Twitter, right?

1151
00:36:48,080 --> 00:36:48,700
PAUL LEWIS: Aerotwist.

1152
00:36:48,700 --> 00:36:48,950
PAUL KINLAN: Aerotwist.

1153
00:36:48,950 --> 00:36:50,600
Why is that?

1154
00:36:50,600 --> 00:36:52,160
PAUL LEWIS: It's just because
they're apparently--

1155
00:36:52,160 --> 00:36:54,410
and this was a shock
to me, but there

1156
00:36:54,410 --> 00:36:56,970
are other Paul Lewises.

1157
00:36:56,970 --> 00:36:59,810
And some of them are like a
famous pianist, a journalist.

1158
00:36:59,810 --> 00:37:02,530

1159
00:37:02,530 --> 00:37:03,505
So that left me no choice.

1160
00:37:03,505 --> 00:37:04,660
I had to come up with
another name.

1161
00:37:04,660 --> 00:37:05,920
So Aerotwist it is.

1162
00:37:05,920 --> 00:37:06,600
PAUL KINLAN: That's a
pretty cool name.

1163
00:37:06,600 --> 00:37:08,120
PAUL LEWIS: It's all
right, yeah.

1164
00:37:08,120 --> 00:37:10,210
It sort of works.

1165
00:37:10,210 --> 00:37:11,385
PAUL KINLAN: I'm lucky
that Kinlan is not a

1166
00:37:11,385 --> 00:37:12,090
very popular name.

1167
00:37:12,090 --> 00:37:13,830
PAUL LEWIS: No.

1168
00:37:13,830 --> 00:37:15,160
So what are you going to do?

1169
00:37:15,160 --> 00:37:17,990
Roll with it I think is what
you're going to do.

1170
00:37:17,990 --> 00:37:18,140
PAUL KINLAN: Yes, yes.

1171
00:37:18,140 --> 00:37:20,840
There was an actor called
Jim Kinlan.

1172
00:37:20,840 --> 00:37:21,590
But that doesn't
mean anything.

1173
00:37:21,590 --> 00:37:22,535
It's not really the same.

1174
00:37:22,535 --> 00:37:24,540
PAUL LEWIS: Well, this is a
thrilling end-on topic.

1175
00:37:24,540 --> 00:37:26,520
So with that said--

1176
00:37:26,520 --> 00:37:28,290
PAUL KINLAN: So with
that said--

1177
00:37:28,290 --> 00:37:29,280
PAUL LEWIS: It's goodnight
from me--

1178
00:37:29,280 --> 00:37:30,530
PAUL KINLAN: And it's
goodnight from him.

1179
00:37:30,530 --> 00:37:31,780
PAUL KINLAN: Yes!

1180
00:37:31,780 --> 00:37:44,733

