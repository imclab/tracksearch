1
00:00:00,000 --> 00:00:07,000
>> TORI: I am Andraz Tori, Co-Founder and
CTO at Zemanta. I've been coding since I was

2
00:00:10,769 --> 00:00:16,020
10 but always did other stuff too including
being a TV host on National Television in

3
00:00:16,020 --> 00:00:23,020
Slovenia. Naturally, the show was about consumer
electronics. Zemanta is a Slovenian company

4
00:00:23,720 --> 00:00:30,490
trying to change how text is being written
on the web, worldwide. We want to make text

5
00:00:30,490 --> 00:00:36,160
editor smart, making them understand what
people are writing so that editors can help

6
00:00:36,160 --> 00:00:41,620
us with additional images, links, text, and
maybe someday even fact checking.

7
00:00:41,620 --> 00:00:46,760
>> What is your extension about?
>> TORI: Our extension makes text editors

8
00:00:46,760 --> 00:00:52,210
of all major blogging platforms better and
more interesting. When the extension sees

9
00:00:52,210 --> 00:00:57,129
that you're trying to write a blog post, it
extends the editor with additional functionality,

10
00:00:57,129 --> 00:01:02,670
suggesting images, related articles, links,
and text you can include in your post.

11
00:01:02,670 --> 00:01:07,690
>> What are the challenges and benefits of
embedding your UI on another site?

12
00:01:07,690 --> 00:01:13,110
>> TORI: It's really hard to maintain an extension
that integrates with UIs of various blogging

13
00:01:13,110 --> 00:01:20,090
tools keeping compatibility with over 10 rich
text editors. In exchange for that effort

14
00:01:20,090 --> 00:01:26,530
on our site, the user gets seamless integration
without needing to invoke any special comment,

15
00:01:26,530 --> 00:01:33,530
site, or menu. Zemanta just works and that's
how software should be. Chrome makes life

16
00:01:33,770 --> 00:01:39,140
for this kind of extensions easier since the
extension API is built on the paradigm that

17
00:01:39,140 --> 00:01:46,140
extensions want to modify web pages and not
just sit on the side. Generally, we'd like

18
00:01:46,720 --> 00:01:52,110
to see more web standards that would make
extensions like ours easier. For example,

19
00:01:52,110 --> 00:01:56,340
a standard way to extend a rich text editor
on the web would be nice.

20
00:01:56,340 --> 00:01:59,409
>> What got you interested in Google Chrome
extensions?

21
00:01:59,409 --> 00:02:06,229
>> TORI: Our existing base of users was migrating
to Chrome. So we naturally had to follow them.

22
00:02:06,229 --> 00:02:12,450
Our first Chrome extension was developed as
an internal company hack day project, in a

23
00:02:12,450 --> 00:02:19,450
single day. The first time we tried developing
an extension was in September '09. The documentation

24
00:02:19,660 --> 00:02:26,169
was very sparse. We were wondering in the
dark, but the open source nature of Chrome,

25
00:02:26,169 --> 00:02:33,169
allowed us to create a functioning prototype.
The second time around, it was one day before

26
00:02:33,470 --> 00:02:38,919
the general availability of extensions in
the beta channel. Luckily, with development

27
00:02:38,919 --> 00:02:44,320
based in Slovenia and due to the time zone
difference, we were able to get from prototype

28
00:02:44,320 --> 00:02:49,949
to final extension while people here in the
U.S. were sleeping and we had it ready by

29
00:02:49,949 --> 00:02:53,540
morning U.S. time.
>> How did your vision evolve as you were

30
00:02:53,540 --> 00:02:57,350
working on your extension?
>> TORI: We had to make a few compromises

31
00:02:57,350 --> 00:03:03,810
to our extension because of our specific needs.
A couple of things come to mind. We could

32
00:03:03,810 --> 00:03:09,470
expose only one function from extension to
the widget. We preferred to be able to expose

33
00:03:09,470 --> 00:03:16,470
many of them so we had to reengineer the approach.
We used window.name hack for making cross-domain

34
00:03:18,040 --> 00:03:25,040
POST calls. We'd prefer using something non-hackish.
Also based on our users' feedback, we changed

35
00:03:26,040 --> 00:03:32,750
the browser action menu to page action with
our second release. Toolbar space is precious,

36
00:03:32,750 --> 00:03:37,440
and your extension really has to be used all
the time to earn a permanent space there.

37
00:03:37,440 --> 00:03:41,040
>> What did you enjoy the most about writing
your extension?

38
00:03:41,040 --> 00:03:45,840
>> TORI: The thing we enjoyed the most was
that the extension is very much like creating

39
00:03:45,840 --> 00:03:52,229
a webpage and the compactness of the API is
also great. You can include any JavaScript

40
00:03:52,229 --> 00:03:58,259
library you need and don't need to reinvent
the wheel. The web-like environment also makes

41
00:03:58,259 --> 00:04:03,479
it easy to include more people in development
without having them to all learn a new environment

42
00:04:03,479 --> 00:04:10,479
immediately, even though, it's easy. Also
restarting a browser is a web version of compiling.

43
00:04:11,220 --> 00:04:15,140
Not being forced to do so speeds up development
immensely.

44
00:04:15,140 --> 00:04:19,430
>> What were some challenges you faced when
writing your extension?

45
00:04:19,430 --> 00:04:25,880
>> TORI: Our biggest problem was and still
is that our homepage widget needs to communicate

46
00:04:25,880 --> 00:04:32,370
with our extension. But for security reasons,
there is no support for that from the extensions

47
00:04:32,370 --> 00:04:37,620
framework. We found a hack that works for
now, but we're still looking for a better

48
00:04:37,620 --> 00:04:43,260
way to solve this. Chrome is being developed
for many different operating systems but not

49
00:04:43,260 --> 00:04:48,080
with the same speed. So in the early days,
it could happen that features described in

50
00:04:48,080 --> 00:04:54,280
the documentation didn't work everywhere or
at least not as described. This stopped being

51
00:04:54,280 --> 00:05:00,490
a problem after we realized this and started
to expect it. Lately, we don't see it anymore.

52
00:05:00,490 --> 00:05:05,660
>> Was there a particular technical challenge
you faced in which you gave an innovative

53
00:05:05,660 --> 00:05:08,450
solution?
>> TORI: We are proud of what we did but at

54
00:05:08,450 --> 00:05:13,530
the same time we are building on knowledge
freely shared within the web community. Hence,

55
00:05:13,530 --> 00:05:20,530
it feels odd to take credits for it. For example,
our widget needs two things, an API key from

56
00:05:21,030 --> 00:05:26,630
our extension and the ability to communicate
with our servers. We achieved the first by

57
00:05:26,630 --> 00:05:33,630
using a hack by Aaron Boodman and the second
by piggybacking on window.name as first described

58
00:05:33,830 --> 00:05:39,900
by Chris Zipp. We still had to write a bunch
of our code and I think we did a good job.

59
00:05:39,900 --> 00:05:45,670
But glorious contribution wasn't really ours.
>> What do you think about Google Chrome's

60
00:05:45,670 --> 00:05:51,480
decision to use CSS, HTML and JavaScript as
the basis of its extension framework?

61
00:05:51,480 --> 00:05:56,840
>> TORI: Using HTML, JavaScript, and CSS to
a variety of extensions lowers the barrier

62
00:05:56,840 --> 00:06:02,400
to entry significantly. Existing skills can
be used and even some code can be shared between

63
00:06:02,400 --> 00:06:08,080
browsers. There is no need to hire external
specialized developers since companies can

64
00:06:08,080 --> 00:06:11,630
use a lot of internal expertise in standard
web technologies.

65
00:06:11,630 --> 00:06:17,060
>> What advice can you give someone before
starting to work on a Google Chrome extension?

66
00:06:17,060 --> 00:06:22,840
>> TORI: To start working on a Chrome extension,
read the documentation first. Not scan it.

67
00:06:22,840 --> 00:06:28,610
Really read it since it's really concise.
It's highly likely that your answer is already

68
00:06:28,610 --> 00:06:34,759
there. You will waste a lot of time, like
we did, if you don't follow this simple advice.

69
00:06:34,759 --> 00:06:39,050
>> Were you able to share code with the other
browser extensions you released?

70
00:06:39,050 --> 00:06:44,410
>> TORI: We tried to share as much code as
possible between Chrome, Firefox, and Internet

71
00:06:44,410 --> 00:06:49,660
Explorer extensions. And even with server
site platforms like WordPress, Joomla, Movable

72
00:06:49,660 --> 00:06:55,940
Type, and Drupal. Over the years, we noticed
that browsers are becoming more and more compatible

73
00:06:55,940 --> 00:07:02,940
with each other. Unfortunately, we are still
far from having full cross-browser extensions.

74
00:07:03,169 --> 00:07:08,200
But one can dream.
>> Come meet the Zemanta team at the Google

75
00:07:08,200 --> 00:07:09,000
IO conference.

