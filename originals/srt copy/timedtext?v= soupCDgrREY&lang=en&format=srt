1
00:00:00,000 --> 00:00:00,800

2
00:00:00,800 --> 00:00:01,650
BORIS SMUS: Cool.

3
00:00:01,650 --> 00:00:04,193
So, hey everyone that's
listening.

4
00:00:04,193 --> 00:00:05,890
We have no idea who is.

5
00:00:05,890 --> 00:00:07,670
This is fantastic.

6
00:00:07,670 --> 00:00:08,360
But welcome.

7
00:00:08,360 --> 00:00:12,020
This is the first official
Chrome developer hangout.

8
00:00:12,020 --> 00:00:16,630
And today's topic is Chrome for
Android Beta, which, as

9
00:00:16,630 --> 00:00:20,440
you may or may not know,
we launched last week.

10
00:00:20,440 --> 00:00:22,840
So maybe we'll go around
the table.

11
00:00:22,840 --> 00:00:24,510
We have a few guests here.

12
00:00:24,510 --> 00:00:26,130
And we'll do some
introductions.

13
00:00:26,130 --> 00:00:27,590
So Marcos.

14
00:00:27,590 --> 00:00:28,840
MARCOS: Hello, I'm Marcos.

15
00:00:28,840 --> 00:00:31,060
I'm working in the Google
London office.

16
00:00:31,060 --> 00:00:33,525
And I'm here for a
couple of weeks.

17
00:00:33,525 --> 00:00:35,360
Nice to see you everybody.

18
00:00:35,360 --> 00:00:36,393
BORIS SMUS: Peter.

19
00:00:36,393 --> 00:00:37,675
PETER BEVERLOO: My name
is Peter Beverloo.

20
00:00:37,675 --> 00:00:40,230
I'm a software engineer on
the Google Chrome team,

21
00:00:40,230 --> 00:00:42,240
also based in London.

22
00:00:42,240 --> 00:00:45,615
And I'll be here to
answer questions.

23
00:00:45,615 --> 00:00:47,180
JOHN: I'm John [? Uffenbeck. ?]

24
00:00:47,180 --> 00:00:48,660
And I'm also here from
the London office.

25
00:00:48,660 --> 00:00:51,780

26
00:00:51,780 --> 00:01:00,490
I've mainly been working on
various JavaScript APIs with a

27
00:01:00,490 --> 00:01:02,402
support team.

28
00:01:02,402 --> 00:01:04,950
BORIS SMUS: And I'm Boris Smus,
an engineer for Chrome

29
00:01:04,950 --> 00:01:08,780
developer relations, based
here in Mountain View.

30
00:01:08,780 --> 00:01:12,330
My focus has been on
[UNINTELLIGIBLE].

31
00:01:12,330 --> 00:01:14,460
So I guess we'll start off.

32
00:01:14,460 --> 00:01:17,090
Just as an intro, we
launched last week.

33
00:01:17,090 --> 00:01:21,312
And the current state of affairs
is it's Ice Cream

34
00:01:21,312 --> 00:01:22,470
Sandwich only.

35
00:01:22,470 --> 00:01:25,770
So you can get into the market
but only if you have an Ice

36
00:01:25,770 --> 00:01:27,440
Cream Sandwich device.

37
00:01:27,440 --> 00:01:29,520
And it's only launched
in some countries.

38
00:01:29,520 --> 00:01:32,790
And we're working hard
to expand that list.

39
00:01:32,790 --> 00:01:36,610
So I think I'll start off with
just giving you a quick

40
00:01:36,610 --> 00:01:39,500
overview of some of
the user features.

41
00:01:39,500 --> 00:01:42,770
Hopefully you can see
this phone here.

42
00:01:42,770 --> 00:01:44,980
So I'll unlock it.

43
00:01:44,980 --> 00:01:46,350
And this is the basic interface

44
00:01:46,350 --> 00:01:50,250
of Chrome for Android.

45
00:01:50,250 --> 00:01:55,530
You can see we've completely
redesigned the UI to suit the

46
00:01:55,530 --> 00:01:56,870
mobile form factor.

47
00:01:56,870 --> 00:01:59,620
But essentially it's the same
Chrome experience on your

48
00:01:59,620 --> 00:02:00,870
Android device.

49
00:02:00,870 --> 00:02:03,510

50
00:02:03,510 --> 00:02:06,960
One of the key integrations
here is that we have sync

51
00:02:06,960 --> 00:02:08,750
enabled in Chrome for Android.

52
00:02:08,750 --> 00:02:13,450
And that brings your Chrome
bookmarks, Chrome history, and

53
00:02:13,450 --> 00:02:17,750
tab sync to your
Android device.

54
00:02:17,750 --> 00:02:19,550
Just as a quick illustration
here.

55
00:02:19,550 --> 00:02:24,235
I can see the same recent viewed
page as on the desktop.

56
00:02:24,235 --> 00:02:25,865
And this is all synchronized.

57
00:02:25,865 --> 00:02:29,500
I can see my bookmarks, again
also synchronized.

58
00:02:29,500 --> 00:02:32,210
And this is a new feature,
tab sync.

59
00:02:32,210 --> 00:02:35,970
And here this is a list of both
machines that are logged

60
00:02:35,970 --> 00:02:38,350
into my account.

61
00:02:38,350 --> 00:02:43,080
And I can see all the open tabs
from the last sync that

62
00:02:43,080 --> 00:02:46,780
happened on those machines.

63
00:02:46,780 --> 00:02:49,830
That's sort of the functionality
you get from

64
00:02:49,830 --> 00:02:52,550
Chrome sync.

65
00:02:52,550 --> 00:02:56,200
One of the most important
features of Chrome though is

66
00:02:56,200 --> 00:02:57,450
speed, right?

67
00:02:57,450 --> 00:03:00,590

68
00:03:00,590 --> 00:03:04,450
The engine team has put in a lot
of effort to make this a

69
00:03:04,450 --> 00:03:06,180
truly fast browsing
experience.

70
00:03:06,180 --> 00:03:09,850
And one of the great things here
is we have pre-rendering.

71
00:03:09,850 --> 00:03:16,750
So if I go to start typing a URL
in the Omnibox, set to the

72
00:03:16,750 --> 00:03:21,510
New York Times, and visit
that, then loading is

73
00:03:21,510 --> 00:03:25,780
accelerated by pre-caching while
I'm typing, so that when

74
00:03:25,780 --> 00:03:30,270
we actually load the page,
it's immediately loaded.

75
00:03:30,270 --> 00:03:33,410
And when the page is actually
rendered, you can see

76
00:03:33,410 --> 00:03:35,840
scrolling is very
performant here.

77
00:03:35,840 --> 00:03:40,900
So as I'm sure these guys will
tell you, the last three or so

78
00:03:40,900 --> 00:03:45,230
months have been largely
spent on getting this

79
00:03:45,230 --> 00:03:46,830
to 60 frames a second.

80
00:03:46,830 --> 00:03:47,990
And they've done a great job.

81
00:03:47,990 --> 00:03:52,330
So this is really
great to see.

82
00:03:52,330 --> 00:03:53,150
Let's see.

83
00:03:53,150 --> 00:03:55,750
Also we have this tab
management UI.

84
00:03:55,750 --> 00:03:57,770
And it supports a
whole bunch of--

85
00:03:57,770 --> 00:04:00,970
you can have a lot
of tabs open.

86
00:04:00,970 --> 00:04:02,770
I don't even know if
there's a limit.

87
00:04:02,770 --> 00:04:04,490
Maybe there is.

88
00:04:04,490 --> 00:04:07,510
But the great thing that Chrome
does to make this

89
00:04:07,510 --> 00:04:13,650
happen is it's very aggressive
about storing inactive tabs,

90
00:04:13,650 --> 00:04:17,210
essentially saving them to--

91
00:04:17,210 --> 00:04:21,470
like swapping the amount of
memory and only keeping one or

92
00:04:21,470 --> 00:04:24,010
two active tabs in
the program.

93
00:04:24,010 --> 00:04:27,150
So this makes the experience
very fast even if you have a

94
00:04:27,150 --> 00:04:28,400
lot of tabs open.

95
00:04:28,400 --> 00:04:31,470

96
00:04:31,470 --> 00:04:37,630
But I must say, my favorite
feature, as a web developer,

97
00:04:37,630 --> 00:04:38,510
remote debugging.

98
00:04:38,510 --> 00:04:44,080
So I'll quickly give you a run
through of how this looks.

99
00:04:44,080 --> 00:04:49,160
So I guess I should screen share
at this point, yeah?

100
00:04:49,160 --> 00:04:50,410
OK, I'll screen share.

101
00:04:50,410 --> 00:04:54,060

102
00:04:54,060 --> 00:04:58,470
And my screen share is
not showing up here.

103
00:04:58,470 --> 00:05:03,470
So the way you can get this
going is you run this command

104
00:05:03,470 --> 00:05:05,640
to forward the port.

105
00:05:05,640 --> 00:05:07,140
First, I have my device
obviously

106
00:05:07,140 --> 00:05:08,945
plugged in through USB.

107
00:05:08,945 --> 00:05:10,810
Run the command.

108
00:05:10,810 --> 00:05:15,450
And then this will enable
forwarding.

109
00:05:15,450 --> 00:05:19,070
And you then need to enable the
feature of the switch back

110
00:05:19,070 --> 00:05:21,490
to the camera here.

111
00:05:21,490 --> 00:05:23,890
You need to enable
remote debugging

112
00:05:23,890 --> 00:05:27,480
inside Chrome for Android.

113
00:05:27,480 --> 00:05:30,000
And here it's already enabled.

114
00:05:30,000 --> 00:05:32,445
And at this point I can
go back to my browser.

115
00:05:32,445 --> 00:05:35,800

116
00:05:35,800 --> 00:05:40,380
I'll just share my Chrome
Window here.

117
00:05:40,380 --> 00:05:41,490
Whoa.

118
00:05:41,490 --> 00:05:43,690
[LAUGHTER]

119
00:05:43,690 --> 00:05:46,428
Hope you like that one.

120
00:05:46,428 --> 00:05:47,172
PETER BEVERLOO: And that's
all from the

121
00:05:47,172 --> 00:05:48,940
developer tools right?

122
00:05:48,940 --> 00:05:49,912
That's amazing.

123
00:05:49,912 --> 00:05:52,340
BORIS SMUS: You get this
inception view.

124
00:05:52,340 --> 00:05:54,330
PETER BEVERLOO: We need
to go deeper.

125
00:05:54,330 --> 00:05:56,655
BORIS SMUS: So hopefully
people can see this.

126
00:05:56,655 --> 00:06:00,670
I'll just hit local host on the
port that I forward it to.

127
00:06:00,670 --> 00:06:07,640
And here we now have a list of
all the open tabs in Chrome.

128
00:06:07,640 --> 00:06:10,440
At this point I can go
into any of these

129
00:06:10,440 --> 00:06:11,980
tabs and inspect them.

130
00:06:11,980 --> 00:06:16,890
And here I have full access to
the Chrome developer tools.

131
00:06:16,890 --> 00:06:20,310

132
00:06:20,310 --> 00:06:25,400
I wish I could show you both
screens at once, but--

133
00:06:25,400 --> 00:06:28,540
whoa, here we go again.

134
00:06:28,540 --> 00:06:33,380
Anyway, you can see I
can inspect pages.

135
00:06:33,380 --> 00:06:37,580
And when I select this element,
the same hover effect

136
00:06:37,580 --> 00:06:40,880
happens in Chrome for Android.

137
00:06:40,880 --> 00:06:43,790
So let me just, I'll do an
alert in the JavaScript

138
00:06:43,790 --> 00:06:48,920
console, and switch cameras
and then prove to you that

139
00:06:48,920 --> 00:06:50,170
this is actually working.

140
00:06:50,170 --> 00:06:52,730

141
00:06:52,730 --> 00:06:54,980
So there's my alert.

142
00:06:54,980 --> 00:06:56,500
And this is great.

143
00:06:56,500 --> 00:06:59,660
So you can pull the instrument,
your Android

144
00:06:59,660 --> 00:07:04,720
browser, and get everything you
need as if you're actually

145
00:07:04,720 --> 00:07:10,300
running a mobile website on
the [UNINTELLIGIBLE].

146
00:07:10,300 --> 00:07:13,120
JOHN: Boris, if you slide
through the elements on the

147
00:07:13,120 --> 00:07:16,330
HTML, you should be able
to see them go blue.

148
00:07:16,330 --> 00:07:16,980
BORIS SMUS: Yeah.

149
00:07:16,980 --> 00:07:18,360
JOHN: I think that's a
really cool feature.

150
00:07:18,360 --> 00:07:18,900
BORIS SMUS: Yeah, for sure.

151
00:07:18,900 --> 00:07:19,460
It's a great feature.

152
00:07:19,460 --> 00:07:20,880
I would love to show it.

153
00:07:20,880 --> 00:07:23,140
The thing is I can't
figure out a way

154
00:07:23,140 --> 00:07:26,500
right now to show both.

155
00:07:26,500 --> 00:07:27,750
JOHN: Scroll on down.

156
00:07:27,750 --> 00:07:30,164

157
00:07:30,164 --> 00:07:32,110
Scroll on.

158
00:07:32,110 --> 00:07:35,370
Why don't you try scrolling on
the laptop, and we can see as

159
00:07:35,370 --> 00:07:40,394
things sort of get highlighted
on the Android phone.

160
00:07:40,394 --> 00:07:42,910
BORIS SMUS: OK, I'll try this.

161
00:07:42,910 --> 00:07:46,390
So you can guys can see, I'm
scrolling now on the laptop.

162
00:07:46,390 --> 00:07:49,190
You can't see me scrolling, but
you can certainly see the

163
00:07:49,190 --> 00:07:50,670
highlights.

164
00:07:50,670 --> 00:07:55,400
So a very, very handy feature.

165
00:07:55,400 --> 00:08:02,380
OK, so as far as other HTML 5
features go, I've got some

166
00:08:02,380 --> 00:08:04,790
basic demos here just to give
you a sense of what the

167
00:08:04,790 --> 00:08:06,040
platform is capable of.

168
00:08:06,040 --> 00:08:08,490

169
00:08:08,490 --> 00:08:13,280
First method fixed positioning
and overflow scrolling.

170
00:08:13,280 --> 00:08:17,790
This is a pretty common pattern
in a lot of mobile web

171
00:08:17,790 --> 00:08:19,620
user interfaces.

172
00:08:19,620 --> 00:08:22,020
Here you can see a really
simple test page.

173
00:08:22,020 --> 00:08:25,430
I've got a header
and a footer.

174
00:08:25,430 --> 00:08:30,740
And they're fixed, whereas the
middle section is scrolling.

175
00:08:30,740 --> 00:08:32,280
So here this is implemented--

176
00:08:32,280 --> 00:08:35,690
the header is implemented
with the position fixed.

177
00:08:35,690 --> 00:08:37,500
Same with the footer.

178
00:08:37,500 --> 00:08:41,260
And then the middle section,
this div element, has like an

179
00:08:41,260 --> 00:08:45,650
overflow scroll or overflow
auto maybe on it.

180
00:08:45,650 --> 00:08:48,780
So this just gives you this
native like experience.

181
00:08:48,780 --> 00:08:53,490
And you'll notice also that if
I scroll and let go, I get

182
00:08:53,490 --> 00:08:57,690
this inertial feel, which is the
same as what you'd expect

183
00:08:57,690 --> 00:08:59,310
in the native application.

184
00:08:59,310 --> 00:09:03,054

185
00:09:03,054 --> 00:09:03,530
Let's see.

186
00:09:03,530 --> 00:09:05,880
Flexbox Model.

187
00:09:05,880 --> 00:09:09,660
Maybe you guys can talk a little
bit about Flexbox.

188
00:09:09,660 --> 00:09:13,760
But basically, we have support
for the first version of

189
00:09:13,760 --> 00:09:17,170
Flexbox, not yet the second.

190
00:09:17,170 --> 00:09:19,390
But this spec is pretty neat.

191
00:09:19,390 --> 00:09:23,010

192
00:09:23,010 --> 00:09:25,530
PETER BEVERLOO: The Flexbox
Model basically allows you to

193
00:09:25,530 --> 00:09:30,950
do a much more declarative way
of defining the shape of your

194
00:09:30,950 --> 00:09:35,220
layouts, thinking more in terms
of objects which you can

195
00:09:35,220 --> 00:09:40,290
rearrange using CSS, position
the scale using CSS instead of

196
00:09:40,290 --> 00:09:44,630
fixed width or even
percentage-based widths.

197
00:09:44,630 --> 00:09:48,670
And it basically allows you to
create complex layouts, update

198
00:09:48,670 --> 00:09:52,410
them really easily with much
less effort than before.

199
00:09:52,410 --> 00:09:56,530
BORIS SMUS: Yeah, like, for
example, this one here.

200
00:09:56,530 --> 00:10:01,590
There's a Flexbox indicated in
the top level that says, I

201
00:10:01,590 --> 00:10:03,450
want a vertical flow
from header to this

202
00:10:03,450 --> 00:10:05,010
middle section to footer.

203
00:10:05,010 --> 00:10:06,990
And in the middle section,
there's a new method for the

204
00:10:06,990 --> 00:10:09,600
horizontal flow saying,
go from nav

205
00:10:09,600 --> 00:10:10,850
to content to sidebar.

206
00:10:10,850 --> 00:10:13,140
So instead of doing things
like CSS [? slopes ?]

207
00:10:13,140 --> 00:10:17,000
and then worrying about clear
fixes, you can just implement

208
00:10:17,000 --> 00:10:17,800
things declaratively.

209
00:10:17,800 --> 00:10:20,896
And the markup here
is beautiful.

210
00:10:20,896 --> 00:10:22,080
It's very simple.

211
00:10:22,080 --> 00:10:23,884
It's clear and very
[UNINTELLIGIBLE].

212
00:10:23,884 --> 00:10:26,850

213
00:10:26,850 --> 00:10:27,700
OK.

214
00:10:27,700 --> 00:10:31,990
Oh yes, my favorite,
so multi-touch.

215
00:10:31,990 --> 00:10:33,390
We've come a long way here.

216
00:10:33,390 --> 00:10:38,490

217
00:10:38,490 --> 00:10:42,160
Android Gingerbread
had a lot of--

218
00:10:42,160 --> 00:10:43,590
MALE SPEAKER: Can you
move it up a little?

219
00:10:43,590 --> 00:10:44,370
BORIS SMUS: Yeah.

220
00:10:44,370 --> 00:10:45,270
Sorry.

221
00:10:45,270 --> 00:10:48,580
So Gingerbread had a lot
of multi-touch issues.

222
00:10:48,580 --> 00:10:50,430
It supported single-touch
very well.

223
00:10:50,430 --> 00:10:54,070
But this is the Android
browser.

224
00:10:54,070 --> 00:10:56,180
But there were definitely
issues with

225
00:10:56,180 --> 00:10:57,890
tracking multiple fingers.

226
00:10:57,890 --> 00:11:01,600
So this is just an example of
a game here that pretty much

227
00:11:01,600 --> 00:11:03,230
relies on multi-touch.

228
00:11:03,230 --> 00:11:07,260
Because one finger controls
the motion, the

229
00:11:07,260 --> 00:11:08,655
direction of my chip.

230
00:11:08,655 --> 00:11:16,870
The other finger is like
a shoot button.

231
00:11:16,870 --> 00:11:17,925
This is a nice demo.

232
00:11:17,925 --> 00:11:20,880
It's by a guy named
[UNINTELLIGIBLE]

233
00:11:20,880 --> 00:11:21,495
from--

234
00:11:21,495 --> 00:11:22,650
I think he's from
[UNINTELLIGIBLE].

235
00:11:22,650 --> 00:11:23,904
MALE SPEAKER: I think
he's from Brighton.

236
00:11:23,904 --> 00:11:24,322
BORIS SMUS: Brighton?

237
00:11:24,322 --> 00:11:25,160
Yeah.

238
00:11:25,160 --> 00:11:27,290
Anyway he made this cool demo.

239
00:11:27,290 --> 00:11:29,777
So this is what I do know.

240
00:11:29,777 --> 00:11:33,500
[LAUGHTER]

241
00:11:33,500 --> 00:11:35,730
We have good multi-touch
support,

242
00:11:35,730 --> 00:11:38,520
tracking multiple fingers.

243
00:11:38,520 --> 00:11:40,710
I've tried it for, like,
five or six.

244
00:11:40,710 --> 00:11:42,826
I'm sure we can do more.

245
00:11:42,826 --> 00:11:44,076
It's good.

246
00:11:44,076 --> 00:11:47,240

247
00:11:47,240 --> 00:11:51,980
Oh, and we've also made great
leaps in hover acceleration.

248
00:11:51,980 --> 00:11:57,880
So Canvas is now a
[UNINTELLIGIBLE].

249
00:11:57,880 --> 00:12:02,150
And this is partly due to Ice
Cream Sandwich's native

250
00:12:02,150 --> 00:12:03,930
hardware acceleration support.

251
00:12:03,930 --> 00:12:07,200
So now we do very well on
benchmarks like these.

252
00:12:07,200 --> 00:12:12,660
This is a speed-reading
benchmark from the IE team.

253
00:12:12,660 --> 00:12:15,800
Essentially what this does is it
just flips through a bunch

254
00:12:15,800 --> 00:12:18,010
of letters.

255
00:12:18,010 --> 00:12:21,680
And you can see we're getting,
like, nearly 60 frames here,

256
00:12:21,680 --> 00:12:25,350
which is pretty much on
par for my testing.

257
00:12:25,350 --> 00:12:28,350
It's like
[UNINTELLIGIBLE PHRASE].

258
00:12:28,350 --> 00:12:31,950
So we've done huge progress
in the last three

259
00:12:31,950 --> 00:12:34,740
months of hard work.

260
00:12:34,740 --> 00:12:37,160
So this is super exciting,
because now you can start

261
00:12:37,160 --> 00:12:43,380
building very rich, dynamic
experiences on your device.

262
00:12:43,380 --> 00:12:47,620
Yeah, so, I don't know.

263
00:12:47,620 --> 00:12:50,486
Are there any questions
that people have yet?

264
00:12:50,486 --> 00:12:53,940
Maybe we can talk about
something that they're

265
00:12:53,940 --> 00:12:56,890
interested in before
we jump into more.

266
00:12:56,890 --> 00:13:00,236
PETE: Uh, are there other ways
for people to try Chrome for

267
00:13:00,236 --> 00:13:03,900
Android if they don't have an
Ice Cream Sandwich device?

268
00:13:03,900 --> 00:13:09,290
BORIS SMUS: Yeah, so I believe
there may be unofficial ways.

269
00:13:09,290 --> 00:13:12,710
But I don't really know.

270
00:13:12,710 --> 00:13:14,490
I haven't really tried.

271
00:13:14,490 --> 00:13:17,928
So you're on your own.

272
00:13:17,928 --> 00:13:21,970
PETE: Um, and then the other
question is just to confirm

273
00:13:21,970 --> 00:13:26,380
that you need the Android
emulator installed on your

274
00:13:26,380 --> 00:13:29,490
machine to use the
debug features.

275
00:13:29,490 --> 00:13:31,176
BORIS SMUS: I don't really think
you need think you need

276
00:13:31,176 --> 00:13:31,400
the emulator.

277
00:13:31,400 --> 00:13:31,810
MARCOS: [UNINTELLIGIBLE]

278
00:13:31,810 --> 00:13:34,310
You need, basically,
just the [? DB2 ?]

279
00:13:34,310 --> 00:13:36,710
which is the thing
that connects.

280
00:13:36,710 --> 00:13:39,595
And then the important thing
that, I think we just briefly

281
00:13:39,595 --> 00:13:42,580
passed this up, the
Chrome side of it,

282
00:13:42,580 --> 00:13:43,640
you don't need anything.

283
00:13:43,640 --> 00:13:46,535
It's just the
[UNINTELLIGIBLE PHRASE]

284
00:13:46,535 --> 00:13:48,080
developer tools in there.

285
00:13:48,080 --> 00:13:51,810
So there's nothing special on
the developer side, so you

286
00:13:51,810 --> 00:13:54,090
should be able to use all the
tools that you are already

287
00:13:54,090 --> 00:13:56,410
familiar with.

288
00:13:56,410 --> 00:13:59,450
PETER BEVERLOO: [? A DB ?] is
part of the Android SDK.

289
00:13:59,450 --> 00:14:01,660
So it should be fairly easy
to find and install.

290
00:14:01,660 --> 00:14:07,840

291
00:14:07,840 --> 00:14:11,000
PETE: So that's the end of the
questions for now, but I'm

292
00:14:11,000 --> 00:14:14,360
sure we'll get more
as we progress.

293
00:14:14,360 --> 00:14:17,250
BORIS SMUS: Cool, sounds good.

294
00:14:17,250 --> 00:14:20,135
So maybe we can just chat about
more on the engineering

295
00:14:20,135 --> 00:14:21,450
side of things.

296
00:14:21,450 --> 00:14:24,270
Like what were some of
the big challenges?

297
00:14:24,270 --> 00:14:27,040
We talked a bit about GPU.

298
00:14:27,040 --> 00:14:30,290
PETER BEVERLOO: Obviously a
phone, in terms of hardware,

299
00:14:30,290 --> 00:14:32,810
is completely different from
a desktop machine.

300
00:14:32,810 --> 00:14:37,680
It's much more limited in terms
of available memory.

301
00:14:37,680 --> 00:14:40,570
It has a lot less CPU power.

302
00:14:40,570 --> 00:14:42,590
The memory bandwidth
is different.

303
00:14:42,590 --> 00:14:46,180
And Chrome has this multiple
process architecture,

304
00:14:46,180 --> 00:14:49,830
separating the browser and the
renderer in several different

305
00:14:49,830 --> 00:14:53,470
processes for various
reasons, which

306
00:14:53,470 --> 00:14:56,070
made this a real challenge.

307
00:14:56,070 --> 00:14:59,300
The multiple process model is
something we did implement in

308
00:14:59,300 --> 00:15:00,550
Chrome in Androids.

309
00:15:00,550 --> 00:15:04,810

310
00:15:04,810 --> 00:15:09,970
It does work fine, but in terms
of resources on the

311
00:15:09,970 --> 00:15:12,480
mobile phone, that did impose
some really interesting

312
00:15:12,480 --> 00:15:14,620
challenges.

313
00:15:14,620 --> 00:15:18,380
Another thing which we ran into
is the readability of

314
00:15:18,380 --> 00:15:19,560
text and websites.

315
00:15:19,560 --> 00:15:23,535
Obviously the hardware for a
mobile phone and Android

316
00:15:23,535 --> 00:15:28,210
device is much smaller than
your computer's monitor.

317
00:15:28,210 --> 00:15:30,930
And in that sense websites
will load in

318
00:15:30,930 --> 00:15:33,170
the zoomed out way.

319
00:15:33,170 --> 00:15:36,400
In order to compensate for that,
we've come up with a

320
00:15:36,400 --> 00:15:38,600
technique that's called
Font Boosting.

321
00:15:38,600 --> 00:15:43,700
And Font Boosting basically is
a way to increase a text size

322
00:15:43,700 --> 00:15:48,730
for important parts of a web
page to make sure that you can

323
00:15:48,730 --> 00:15:52,250
read them regardless
of the zoom level.

324
00:15:52,250 --> 00:15:57,450
We already talked about GPU
acceleration on the phone, and

325
00:15:57,450 --> 00:15:58,700
then the tablet as
well, of course.

326
00:15:58,700 --> 00:16:01,940

327
00:16:01,940 --> 00:16:05,360
Part of that allowed
[UNINTELLIGIBLE]

328
00:16:05,360 --> 00:16:10,410
Chrome GPU team to implement
incredibly well multiple

329
00:16:10,410 --> 00:16:15,110
[UNINTELLIGIBLE], which
separates scrolling from

330
00:16:15,110 --> 00:16:17,820
actual rendering, which is one
of the main things which

331
00:16:17,820 --> 00:16:21,810
allowed us to achieve 60 frames
per second scrolling

332
00:16:21,810 --> 00:16:26,000
and fixed position elements
on pages in a smooth

333
00:16:26,000 --> 00:16:28,355
and workable way.

334
00:16:28,355 --> 00:16:32,210
BORIS SMUS: Is there something
people need to be aware of to

335
00:16:32,210 --> 00:16:34,500
make their sites more
accessible for

336
00:16:34,500 --> 00:16:35,570
Font Boosting purposes?

337
00:16:35,570 --> 00:16:38,070
Or is this just something
that comes free?

338
00:16:38,070 --> 00:16:39,970
PETER BEVERLOO: Font Boosting
comes for free.

339
00:16:39,970 --> 00:16:44,440
And there are a number of
heuristics which decide which

340
00:16:44,440 --> 00:16:46,160
areas of the page need
to be boosted.

341
00:16:46,160 --> 00:16:49,740

342
00:16:49,740 --> 00:16:54,570
There is not really a menu
about it so far.

343
00:16:54,570 --> 00:16:57,210
But the algorithm is still
under development.

344
00:16:57,210 --> 00:17:00,650
We're still making many
improvements.

345
00:17:00,650 --> 00:17:04,516
And so there still are a number
of changes underway.

346
00:17:04,516 --> 00:17:06,408
BORIS SMUS: Cool, good.

347
00:17:06,408 --> 00:17:09,730

348
00:17:09,730 --> 00:17:13,119
Yeah, so I guess that's sort
of relates to your talking

349
00:17:13,119 --> 00:17:16,619
about basically rendering
of sites that aren't

350
00:17:16,619 --> 00:17:17,690
designed for mobile.

351
00:17:17,690 --> 00:17:19,490
PETER BEVERLOO: Uh huh.

352
00:17:19,490 --> 00:17:22,319
BORIS SMUS: But what about some
of the strategies for

353
00:17:22,319 --> 00:17:25,500
making your site more responsive
for mobile, is this

354
00:17:25,500 --> 00:17:26,756
something we support as well?

355
00:17:26,756 --> 00:17:28,089
PETER BEVERLOO: Yeah.

356
00:17:28,089 --> 00:17:31,800
Transit has been quite popular
over the past few years.

357
00:17:31,800 --> 00:17:34,440
It's implementing response
[UNINTELLIGIBLE]

358
00:17:34,440 --> 00:17:38,831
for a website, for example
using media queries.

359
00:17:38,831 --> 00:17:41,380
Media queries are something
Chrome and Android support,

360
00:17:41,380 --> 00:17:44,790
both on Android phones and
on Android tablets.

361
00:17:44,790 --> 00:17:48,270
And it basically allows you to
provide a good, clean way of

362
00:17:48,270 --> 00:17:53,560
targeting a certain subset
of [UNINTELLIGIBLE]

363
00:17:53,560 --> 00:17:58,140
to certain devices, allowing
you to optimize the website

364
00:17:58,140 --> 00:18:03,490
more for, say, a tablet or an
Android phone, and making it

365
00:18:03,490 --> 00:18:06,170
more readable without having to
depend on [UNINTELLIGIBLE].

366
00:18:06,170 --> 00:18:10,620

367
00:18:10,620 --> 00:18:14,860
BORIS SMUS: So you can do that
with both CSS, with media

368
00:18:14,860 --> 00:18:16,220
queries in [? text, ?]

369
00:18:16,220 --> 00:18:20,570
or you do it in JavaScript,
right?

370
00:18:20,570 --> 00:18:23,690
PETER BEVERLOO: There is
JavaScript API to actually

371
00:18:23,690 --> 00:18:27,790
listen to media queries, and
actually listen to changes in

372
00:18:27,790 --> 00:18:29,230
media queries as well.

373
00:18:29,230 --> 00:18:32,170
And it allows you to have
JavaScript events listening

374
00:18:32,170 --> 00:18:33,950
to, for example, an orientation
change.

375
00:18:33,950 --> 00:18:36,570

376
00:18:36,570 --> 00:18:39,160
BORIS SMUS: And the
standard-- sorry.

377
00:18:39,160 --> 00:18:43,120
The standard thing is you
would just usually have

378
00:18:43,120 --> 00:18:46,710
division points based on the
size of your device.

379
00:18:46,710 --> 00:18:50,550
Remember we just walked through
the other styles.

380
00:18:50,550 --> 00:18:52,120
PETER BEVERLOO: Generally
that's the case.

381
00:18:52,120 --> 00:18:55,680
Of course, depending on the
browsers you may target, it's

382
00:18:55,680 --> 00:19:01,295
also a solution to have a rough
size estimate for phone

383
00:19:01,295 --> 00:19:04,080
layouts, tablet layouts, and
desktop layouts using

384
00:19:04,080 --> 00:19:07,350
percentages for widths, which
allows just slightly more

385
00:19:07,350 --> 00:19:11,980
flexibility over the Android
phones which might be used to

386
00:19:11,980 --> 00:19:12,781
visit your website.

387
00:19:12,781 --> 00:19:13,252
BORIS SMUS: Mm Hm.

388
00:19:13,252 --> 00:19:15,140
Cool.

389
00:19:15,140 --> 00:19:16,060
MARCOS: Sorry.

390
00:19:16,060 --> 00:19:19,520
One thing that I was going to
mention is that we are very

391
00:19:19,520 --> 00:19:24,010
data-driven with the
developer tools.

392
00:19:24,010 --> 00:19:26,730
It's a real game changer,
because now we can actually

393
00:19:26,730 --> 00:19:32,630
see what's going on and optimize
real deep the overall

394
00:19:32,630 --> 00:19:36,570
experience and use the same
tools to get our data and the

395
00:19:36,570 --> 00:19:39,010
performance data, and
then investigate and

396
00:19:39,010 --> 00:19:42,000
inspect all the page.

397
00:19:42,000 --> 00:19:45,629
The development side of it,
it's a real game changer.

398
00:19:45,629 --> 00:19:50,097
I think it's a really cool tool
to optimize further using

399
00:19:50,097 --> 00:19:52,990
all of this technology
we just mentioned.

400
00:19:52,990 --> 00:19:54,400
BORIS SMUS: Yeah.

401
00:19:54,400 --> 00:19:56,750
PETE: A couple of questions
from folks who are reading

402
00:19:56,750 --> 00:19:58,214
questions in the comments.

403
00:19:58,214 --> 00:20:00,895
Are you going to talk about some
of the new input fields

404
00:20:00,895 --> 00:20:02,810
and native behaviors
like [? Apex, ?] or

405
00:20:02,810 --> 00:20:03,860
anything like that?

406
00:20:03,860 --> 00:20:07,115
BORIS SMUS: Oh yeah, sure,
we can talk about that.

407
00:20:07,115 --> 00:20:12,770
Yeah, this is a pretty often
requested feature.

408
00:20:12,770 --> 00:20:14,950
The back story here is--

409
00:20:14,950 --> 00:20:19,080
let's see, I have the
forms list here.

410
00:20:19,080 --> 00:20:22,120
The input tag can have a bunch
of different types.

411
00:20:22,120 --> 00:20:24,790
There's text inputs.

412
00:20:24,790 --> 00:20:31,150
Here is just a regular text
input and various other kinds.

413
00:20:31,150 --> 00:20:35,270
In mobile browsers, typically,
at least in IOS and other

414
00:20:35,270 --> 00:20:38,770
platforms, you've had this
customization based on the

415
00:20:38,770 --> 00:20:40,100
type of input.

416
00:20:40,100 --> 00:20:42,826
So in the password field--

417
00:20:42,826 --> 00:20:43,505
that's a bad example.

418
00:20:43,505 --> 00:20:47,850
In the telephone field, your
keyboard now switches to a

419
00:20:47,850 --> 00:20:52,220
number pad, because telephones
are numeric.

420
00:20:52,220 --> 00:20:56,320
But there's also this class of
input fields that are date

421
00:20:56,320 --> 00:20:57,790
related, date/time related.

422
00:20:57,790 --> 00:21:00,630
So here there's a date/time
picker.

423
00:21:00,630 --> 00:21:03,610
And you can see when I
click it, we get the

424
00:21:03,610 --> 00:21:06,200
native Android control.

425
00:21:06,200 --> 00:21:10,750
Similar for months and
weeks and times.

426
00:21:10,750 --> 00:21:14,600
This is all new in Chrome
for Android.

427
00:21:14,600 --> 00:21:17,180
And we support it.

428
00:21:17,180 --> 00:21:19,890
You see a whole bunch of
other kinds of inputs.

429
00:21:19,890 --> 00:21:21,790
Does that answer the
question there?

430
00:21:21,790 --> 00:21:23,200
PETE: Yeah, I think
that answers the

431
00:21:23,200 --> 00:21:24,215
question quite well.

432
00:21:24,215 --> 00:21:24,800
BORIS SMUS: Great.

433
00:21:24,800 --> 00:21:28,581
PETE: One of the other questions
that came up is what

434
00:21:28,581 --> 00:21:30,400
about the UA string?

435
00:21:30,400 --> 00:21:31,830
Are there any modifications
to that?

436
00:21:31,830 --> 00:21:34,127
What is the UA string today?

437
00:21:34,127 --> 00:21:36,929
And what do developers
know about that?

438
00:21:36,929 --> 00:21:38,730
BORIS SMUS: Anyone
want to get this?

439
00:21:38,730 --> 00:21:40,450
I can talk about
it too I think.

440
00:21:40,450 --> 00:21:41,320
MALE SPEAKER: OK.

441
00:21:41,320 --> 00:21:43,290
BORIS SMUS: OK.

442
00:21:43,290 --> 00:21:46,640
Let me just, actually, open up
the [UNINTELLIGIBLE] here.

443
00:21:46,640 --> 00:21:50,730

444
00:21:50,730 --> 00:21:57,140
So we have a code site,
code.google.com/chrome/mobile.

445
00:21:57,140 --> 00:22:01,450
And if you go there, then
there's an FAQ section.

446
00:22:01,450 --> 00:22:04,100
And I'm not sharing this
screen, I think.

447
00:22:04,100 --> 00:22:05,350
Let me do that.

448
00:22:05,350 --> 00:22:07,532

449
00:22:07,532 --> 00:22:10,340
Screen share.

450
00:22:10,340 --> 00:22:12,560
Whoa.

451
00:22:12,560 --> 00:22:13,930
Inception notice.

452
00:22:13,930 --> 00:22:18,990
OK, so we have a user agent.

453
00:22:18,990 --> 00:22:22,280
So this is all pretty
well documented.

454
00:22:22,280 --> 00:22:24,490
Hopefully you can see this.

455
00:22:24,490 --> 00:22:27,060
Basically we support--

456
00:22:27,060 --> 00:22:30,910
there's a tablet version and
a mobile phone version.

457
00:22:30,910 --> 00:22:37,360
So here is the UA string or
the mobile phone version.

458
00:22:37,360 --> 00:22:39,630
This is pretty much public
information.

459
00:22:39,630 --> 00:22:44,270
And I guess the key feature
here is the CRMO.

460
00:22:44,270 --> 00:22:47,840
So if you're doing UA sniffing
and you want to detect Chrome

461
00:22:47,840 --> 00:22:50,130
[UNINTELLIGIBLE] specifically,
I guess this is

462
00:22:50,130 --> 00:22:53,150
what you would get.

463
00:22:53,150 --> 00:22:57,430
I mean, we can talk about best
practices and the pitfalls of

464
00:22:57,430 --> 00:22:58,330
UA sniffing, etc.

465
00:22:58,330 --> 00:23:01,390
JOHN: Of course, future
detection is much better.

466
00:23:01,390 --> 00:23:02,360
BORIS SMUS: Correct.

467
00:23:02,360 --> 00:23:04,800
So using things like
Modernizr--

468
00:23:04,800 --> 00:23:07,700
we'll just open that up--

469
00:23:07,700 --> 00:23:11,240
is generally the thing
that we at Chrome

470
00:23:11,240 --> 00:23:14,330
developer relations recommend.

471
00:23:14,330 --> 00:23:17,110
So this thing, instead of
looking at user agent strings,

472
00:23:17,110 --> 00:23:19,700
you can detect based on the
actual functionality that your

473
00:23:19,700 --> 00:23:24,070
browser provides and
include or not

474
00:23:24,070 --> 00:23:25,320
include various features.

475
00:23:25,320 --> 00:23:29,690

476
00:23:29,690 --> 00:23:30,415
PETE: Cool.

477
00:23:30,415 --> 00:23:34,750
We got a couple others
that came in.

478
00:23:34,750 --> 00:23:37,540
What about the web RTC
camera APIs, are they

479
00:23:37,540 --> 00:23:39,670
accessible right now?

480
00:23:39,670 --> 00:23:42,462
It says they're supported in the
docks, but Mark was saying

481
00:23:42,462 --> 00:23:45,210
he was having some trouble
accessing them with his code.

482
00:23:45,210 --> 00:23:48,840
BORIS SMUS: Yeah, so web RTC
is not currently supported.

483
00:23:48,840 --> 00:23:54,150
The thing we do support
is this Android

484
00:23:54,150 --> 00:23:57,030
browser style camera.

485
00:23:57,030 --> 00:23:59,960
So basically there's
a way to--

486
00:23:59,960 --> 00:24:02,490
this is a quick demo
of that in action.

487
00:24:02,490 --> 00:24:06,280
And the thing that's happening
here is there's an input box.

488
00:24:06,280 --> 00:24:07,190
And it's got a--

489
00:24:07,190 --> 00:24:09,700
I think it's like--

490
00:24:09,700 --> 00:24:10,950
[INTERPOSING  VOICES]

491
00:24:10,950 --> 00:24:13,420

492
00:24:13,420 --> 00:24:14,670
PETER BEVERLOO: It's
actually--

493
00:24:14,670 --> 00:24:18,010

494
00:24:18,010 --> 00:24:20,150
we have implemented
[UNINTELLIGIBLE]

495
00:24:20,150 --> 00:24:21,560
API.

496
00:24:21,560 --> 00:24:23,820
A link to that you can find
on chrome.google.co

497
00:24:23,820 --> 00:24:25,070
m/chrome/mobile.

498
00:24:25,070 --> 00:24:28,340

499
00:24:28,340 --> 00:24:33,330
And part of that API allows you
to use an input type file

500
00:24:33,330 --> 00:24:37,840
element, which you get your
attribute which allows you to

501
00:24:37,840 --> 00:24:43,016
toggle between video or steady
image save photo input.

502
00:24:43,016 --> 00:24:47,820
BORIS SMUS: So if I click
here, this should

503
00:24:47,820 --> 00:24:50,411
essentially pick the--

504
00:24:50,411 --> 00:24:53,120
it forces the [UNINTELLIGIBLE]

505
00:24:53,120 --> 00:24:55,200
to open the camera,
essentially.

506
00:24:55,200 --> 00:24:58,320
And then this particular demo,
I'll quickly take a

507
00:24:58,320 --> 00:25:00,190
picture of my face.

508
00:25:00,190 --> 00:25:04,880
And there's a picture
of my face.

509
00:25:04,880 --> 00:25:07,531
And then I'll OK it.

510
00:25:07,531 --> 00:25:10,790
And we have demo effect.

511
00:25:10,790 --> 00:25:12,700
Sorry guys, let's
try that again.

512
00:25:12,700 --> 00:25:15,800
I swear it worked before.

513
00:25:15,800 --> 00:25:23,480
So the point of this demo is it
will take my face and put a

514
00:25:23,480 --> 00:25:26,620
panda face on top of
my face instead.

515
00:25:26,620 --> 00:25:29,675
Hopefully this works.

516
00:25:29,675 --> 00:25:30,998
So there you go.

517
00:25:30,998 --> 00:25:31,934
My face is now pandafied.

518
00:25:31,934 --> 00:25:34,750
And you can check it out.

519
00:25:34,750 --> 00:25:38,106
Well, this is the URL.

520
00:25:38,106 --> 00:25:39,600
Oh, it's out of focus.

521
00:25:39,600 --> 00:25:42,270
But anyway, it's out there.

522
00:25:42,270 --> 00:25:44,106
So hope that answers
your question.

523
00:25:44,106 --> 00:25:46,940
[LAUGHTER]

524
00:25:46,940 --> 00:25:49,730
Anything else there Pete?

525
00:25:49,730 --> 00:25:51,895
PETE: Why don't you move on to
some of the next things, and

526
00:25:51,895 --> 00:25:54,330
we'll come back to some of
the next ones shortly.

527
00:25:54,330 --> 00:25:56,250
BORIS SMUS: Sure, sounds good.

528
00:25:56,250 --> 00:25:57,680
So let's talk about--

529
00:25:57,680 --> 00:26:00,110
I'll find some [UNINTELLIGIBLE].

530
00:26:00,110 --> 00:26:01,720
Maybe you just want to like--

531
00:26:01,720 --> 00:26:02,890
JOHN: Yeah, sure.

532
00:26:02,890 --> 00:26:07,220
So we support all the off-line

533
00:26:07,220 --> 00:26:11,580
technologies that Chrome supports.

534
00:26:11,580 --> 00:26:16,090
And that's file API, the
[UNINTELLIGIBLE]

535
00:26:16,090 --> 00:26:20,230
XTP, web SQL, section storage,
local storage.

536
00:26:20,230 --> 00:26:23,320
So it's all there.

537
00:26:23,320 --> 00:26:29,760
And you can manage that in the
user interface as well and

538
00:26:29,760 --> 00:26:32,170
clear out the storage as well.

539
00:26:32,170 --> 00:26:35,620
BORIS SMUS: So like,
how do you--

540
00:26:35,620 --> 00:26:35,895
[INTERPOSING VOICES]

541
00:26:35,895 --> 00:26:37,120
JOHN: You go into
Settings and--

542
00:26:37,120 --> 00:26:39,822
BORIS SMUS: Oh, OK.

543
00:26:39,822 --> 00:26:40,780
Cool.

544
00:26:40,780 --> 00:26:42,440
JOHN: It's a much more coarsely

545
00:26:42,440 --> 00:26:46,040
grain than the desktop.

546
00:26:46,040 --> 00:26:51,170
But you don't have a lot of
space user interface wise.

547
00:26:51,170 --> 00:26:54,765
But it's possible to create
storage, and see which sites

548
00:26:54,765 --> 00:26:57,050
are using how much
data and so on.

549
00:26:57,050 --> 00:26:57,996
BORIS SMUS: Oh, cool.

550
00:26:57,996 --> 00:26:59,470
[UNINTELLIGIBLE]?

551
00:26:59,470 --> 00:27:00,190
JOHN: Yeah.

552
00:27:00,190 --> 00:27:00,630
BORIS SMUS: [UNINTELLIGIBLE]?

553
00:27:00,630 --> 00:27:01,860
JOHN: Yeah, that's
exactly it, yeah.

554
00:27:01,860 --> 00:27:02,770
BORIS SMUS: Oh, sweet.

555
00:27:02,770 --> 00:27:04,850
JOHN: So there you are.

556
00:27:04,850 --> 00:27:08,140
That icon on the right,
there, is--

557
00:27:08,140 --> 00:27:11,170
so yeah, you can see it up.

558
00:27:11,170 --> 00:27:14,400
Some of those sites are
losing a bit of data.

559
00:27:14,400 --> 00:27:15,540
BORIS SMUS: And this
means geolocation?

560
00:27:15,540 --> 00:27:16,790
JOHN: Right, right.

561
00:27:16,790 --> 00:27:18,480
BORIS SMUS: So that means you're
granted access for that

562
00:27:18,480 --> 00:27:21,340
site to access your
geolocation?

563
00:27:21,340 --> 00:27:22,550
JOHN: Exactly, exactly.

564
00:27:22,550 --> 00:27:24,010
BORIS SMUS: Oh wow, this
is really cool.

565
00:27:24,010 --> 00:27:25,280
I didn't know about this.

566
00:27:25,280 --> 00:27:27,860
JOHN: So, yeah.

567
00:27:27,860 --> 00:27:35,226
All the storage APIs are there,
and are good to go.

568
00:27:35,226 --> 00:27:37,710
BORIS SMUS: And we also have
app cache support right?

569
00:27:37,710 --> 00:27:38,580
JOHN: Right, right.

570
00:27:38,580 --> 00:27:40,902
App cache also.

571
00:27:40,902 --> 00:27:42,690
And [UNINTELLIGIBLE PHRASE]

572
00:27:42,690 --> 00:27:46,412

573
00:27:46,412 --> 00:27:50,780
Gmail and calendar
applications.

574
00:27:50,780 --> 00:27:53,550
BORIS SMUS: Oh, and by the
way, we do have cache--

575
00:27:53,550 --> 00:27:55,490
I believe we have app
cache internals

576
00:27:55,490 --> 00:27:57,630
available here as well.

577
00:27:57,630 --> 00:27:59,522
Like if you want to clear
an app cache.

578
00:27:59,522 --> 00:28:00,440
Do you know?

579
00:28:00,440 --> 00:28:02,400
JOHN: Um, we should have
some available.

580
00:28:02,400 --> 00:28:02,925
BORIS SMUS: Yeah OK.

581
00:28:02,925 --> 00:28:05,450
It's kind of unstable.

582
00:28:05,450 --> 00:28:08,130
All right, anyway.

583
00:28:08,130 --> 00:28:10,315
Basically there's two things
you want to do with a

584
00:28:10,315 --> 00:28:10,650
[UNINTELLIGIBLE], right?

585
00:28:10,650 --> 00:28:12,912
You want to store assets.

586
00:28:12,912 --> 00:28:15,280
Or you want to store data.

587
00:28:15,280 --> 00:28:17,000
So there's a whole bunch of--

588
00:28:17,000 --> 00:28:18,840
we pretty much support
the whole thing?

589
00:28:18,840 --> 00:28:20,096
JOHN: The whole thing.

590
00:28:20,096 --> 00:28:20,582
Yeah.

591
00:28:20,582 --> 00:28:22,210
[INTERPOSING VOICES]

592
00:28:22,210 --> 00:28:23,450
BORIS SMUS: So, read
and write?

593
00:28:23,450 --> 00:28:23,820
JOHN: Yeah.

594
00:28:23,820 --> 00:28:25,405
MARCOS: Yeah.

595
00:28:25,405 --> 00:28:26,430
Awesome.

596
00:28:26,430 --> 00:28:30,040
PETER BEVERLOO: And, of course,
file system API, which

597
00:28:30,040 --> 00:28:33,428
allows you to go even further.

598
00:28:33,428 --> 00:28:35,420
BORIS SMUS: Cool.

599
00:28:35,420 --> 00:28:40,930
JOHN: So there is also one
aspect which we'd like to

600
00:28:40,930 --> 00:28:46,490
improve in the future, which
is working pretty well

601
00:28:46,490 --> 00:28:48,660
already, is to input
[UNINTELLIGIBLE]

602
00:28:48,660 --> 00:28:54,970
file, so you can upload files
from your own device.

603
00:28:54,970 --> 00:28:58,660
And one of the things I would
like to support in the future

604
00:28:58,660 --> 00:29:03,820
is uploading your own files,
like your Picassa web images

605
00:29:03,820 --> 00:29:05,780
and things like that.

606
00:29:05,780 --> 00:29:06,410
[UNINTELLIGIBLE]

607
00:29:06,410 --> 00:29:10,690
files, but it's on the
radar at some point.

608
00:29:10,690 --> 00:29:12,000
[LAUGHTER]

609
00:29:12,000 --> 00:29:12,770
[UNINTELLIGIBLE].

610
00:29:12,770 --> 00:29:13,330
BORIS SMUS: Cool.

611
00:29:13,330 --> 00:29:14,580
Sounds like an awesome
feature.

612
00:29:14,580 --> 00:29:17,236

613
00:29:17,236 --> 00:29:19,440
Let's see.

614
00:29:19,440 --> 00:29:20,410
Any pressing questions?

615
00:29:20,410 --> 00:29:21,980
Or should we carry on here?

616
00:29:21,980 --> 00:29:24,470
[INTERPOSING VOICES].

617
00:29:24,470 --> 00:29:28,450
BORIS SMUS: One of the things
that we now include for

618
00:29:28,450 --> 00:29:33,070
game-type applications or
experiences with rich

619
00:29:33,070 --> 00:29:35,160
interactive elements
is a request

620
00:29:35,160 --> 00:29:36,320
animation frame, right?

621
00:29:36,320 --> 00:29:39,080
So this is one of the first
mobile browsers to support

622
00:29:39,080 --> 00:29:39,720
this feature.

623
00:29:39,720 --> 00:29:41,730
And do you want to talk
a bit about it?

624
00:29:41,730 --> 00:29:42,060
PETER BEVERLOO: Sure.

625
00:29:42,060 --> 00:29:46,930
Request animation frame is
basically a relatively new API

626
00:29:46,930 --> 00:29:53,350
which allows you to instead of
using a JavaScript timer or a

627
00:29:53,350 --> 00:29:54,250
[UNINTELLIGIBLE]

628
00:29:54,250 --> 00:29:56,390
to trigger renderings or
change [UNINTELLIGIBLE]

629
00:29:56,390 --> 00:30:02,200
for, say, CSS animations or
Canvas elements, it allows you

630
00:30:02,200 --> 00:30:06,490
to ask the browser to decide
the best possible moment to

631
00:30:06,490 --> 00:30:08,860
open a new draw for you.

632
00:30:08,860 --> 00:30:10,150
That has a number of benefits.

633
00:30:10,150 --> 00:30:15,465
For example, it allows the
browser to inform your web

634
00:30:15,465 --> 00:30:18,220
page that it's currently on the
background, so not usable

635
00:30:18,220 --> 00:30:19,210
to the end user.

636
00:30:19,210 --> 00:30:22,600
And especially on the
[UNINTELLIGIBLE] with limited

637
00:30:22,600 --> 00:30:28,650
battery and limited CPU usage,
you don't want to see it on

638
00:30:28,650 --> 00:30:31,810
the website and have another
website on the background

639
00:30:31,810 --> 00:30:37,390
create all these awesome,
3-dimensional effects.

640
00:30:37,390 --> 00:30:41,696
I don't know what API, which
is making everything slow.

641
00:30:41,696 --> 00:30:44,770
And using the request animation
frame can actually

642
00:30:44,770 --> 00:30:48,470
help you in saving battery
power and increasing

643
00:30:48,470 --> 00:30:50,360
performance.

644
00:30:50,360 --> 00:30:54,595
For example the GP accelerated
Canvas users.

645
00:30:54,595 --> 00:30:55,670
BORIS SMUS: Cool.

646
00:30:55,670 --> 00:30:56,720
Yeah.

647
00:30:56,720 --> 00:30:58,560
Actually you reminded me
of a thing that I'd

648
00:30:58,560 --> 00:31:00,080
like to show here.

649
00:31:00,080 --> 00:31:03,690
You said 3D stuff,
cool 3D stuff.

650
00:31:03,690 --> 00:31:06,990
So there is a quick demo that
I'd just like to show.

651
00:31:06,990 --> 00:31:07,763
This is not Canvas.

652
00:31:07,763 --> 00:31:09,690
This is CSS animation.

653
00:31:09,690 --> 00:31:12,970
But just to give you a
sense of the sorts of

654
00:31:12,970 --> 00:31:14,020
things you can do.

655
00:31:14,020 --> 00:31:17,360
This is just using CSS
animations, no JavaScript at

656
00:31:17,360 --> 00:31:18,810
all, just key frames.

657
00:31:18,810 --> 00:31:21,010
And it's pretty much running
very smooth.

658
00:31:21,010 --> 00:31:24,030
I don't know if the stream
is good enough to tell.

659
00:31:24,030 --> 00:31:27,710
But I think it's like 30, 60,
somewhere in between, frames

660
00:31:27,710 --> 00:31:29,060
per second.

661
00:31:29,060 --> 00:31:30,390
So this is really cool.

662
00:31:30,390 --> 00:31:33,890
It opens up a whole world of
possibilities for developers.

663
00:31:33,890 --> 00:31:36,210
PETER BEVERLOO: And the sites,
the CSS animation, are

664
00:31:36,210 --> 00:31:37,890
actually animating it.

665
00:31:37,890 --> 00:31:41,520
The 3D pics can be created using
the CSS 3D transforms

666
00:31:41,520 --> 00:31:42,996
[UNINTELLIGIBLE].

667
00:31:42,996 --> 00:31:45,272
BORIS SMUS: Yeah, as far as
the transitions, right?

668
00:31:45,272 --> 00:31:46,224
PETER BEVERLOO: Yeah.

669
00:31:46,224 --> 00:31:47,430
3D transitions here.

670
00:31:47,430 --> 00:31:49,590
But you could also
use transitions.

671
00:31:49,590 --> 00:31:52,760
There are a number of websites
which have, for example, a

672
00:31:52,760 --> 00:31:55,175
tilted menu in 3D space.

673
00:31:55,175 --> 00:31:58,750

674
00:31:58,750 --> 00:31:59,840
BORIS SMUS: Cool.

675
00:31:59,840 --> 00:32:01,530
So we had a question
I think about--

676
00:32:01,530 --> 00:32:08,680
PETE: Yeah, so Bernard wanted
to know, which countries and

677
00:32:08,680 --> 00:32:13,800
devices are supported with
Chrome for Android?

678
00:32:13,800 --> 00:32:15,120
BORIS SMUS: Countries,
I think there's a

679
00:32:15,120 --> 00:32:18,570
list probably on our--

680
00:32:18,570 --> 00:32:21,400
the Chrome consumer site?

681
00:32:21,400 --> 00:32:25,810
PETER BEVERLOO: Yeah, there is a
list available on the Chrome

682
00:32:25,810 --> 00:32:28,510
help pages on google.com.

683
00:32:28,510 --> 00:32:30,640
PETE: We'll post that
in the comments

684
00:32:30,640 --> 00:32:31,650
in a couple of minutes.

685
00:32:31,650 --> 00:32:32,795
BORIS SMUS: Yeah, sounds good.

686
00:32:32,795 --> 00:32:34,550
PETE: And what about
devices or--

687
00:32:34,550 --> 00:32:39,180
BORIS SMUS: Devices, I think
pretty much all the official

688
00:32:39,180 --> 00:32:41,310
Ice Cream Sandwich devices
support it.

689
00:32:41,310 --> 00:32:41,610
PETER BEVERLOO: Yeah.

690
00:32:41,610 --> 00:32:45,930
BORIS SMUS: Which is Galaxy
Nexus, Nexus S, and the Zoom

691
00:32:45,930 --> 00:32:46,910
[UNINTELLIGIBLE].

692
00:32:46,910 --> 00:32:51,750
PETER BEVERLOO: Yeah, and new
devices which will be updated

693
00:32:51,750 --> 00:32:55,557
to Ice Cream Sandwich should
also come with the ability to

694
00:32:55,557 --> 00:32:57,760
install Chrome.

695
00:32:57,760 --> 00:33:00,760
MARCOS: And one thing to
remember is that we literally

696
00:33:00,760 --> 00:33:03,860
just launched this, this
last week or last week.

697
00:33:03,860 --> 00:33:06,420
We're going to expand this.

698
00:33:06,420 --> 00:33:08,840
It's on our radar to expand.

699
00:33:08,840 --> 00:33:10,730
But a little patience
just because

700
00:33:10,730 --> 00:33:12,463
we really just released.

701
00:33:12,463 --> 00:33:14,640
BORIS SMUS: Yeah, it's
been nine days.

702
00:33:14,640 --> 00:33:16,320
MARCOS: Exciting, very
exciting things.

703
00:33:16,320 --> 00:33:19,040

704
00:33:19,040 --> 00:33:20,180
It's a baby.

705
00:33:20,180 --> 00:33:21,430
It's just born.

706
00:33:21,430 --> 00:33:24,090

707
00:33:24,090 --> 00:33:25,610
BORIS SMUS: Anything
else there Pete?

708
00:33:25,610 --> 00:33:27,490
PETE: No, that's it for now.

709
00:33:27,490 --> 00:33:31,170
But keep your questions coming
in the comments on the

710
00:33:31,170 --> 00:33:35,580
pro-developers page, and we'll
keep going from there.

711
00:33:35,580 --> 00:33:37,390
BORIS SMUS: Cool.

712
00:33:37,390 --> 00:33:38,900
Let's talk about device APIs.

713
00:33:38,900 --> 00:33:39,720
MARCOS: OK.

714
00:33:39,720 --> 00:33:43,600
BORIS SMUS: What sort of sensor
access do we have in

715
00:33:43,600 --> 00:33:44,565
Chrome for Android?

716
00:33:44,565 --> 00:33:48,930
MARCOS: Yeah, so we have
basically the same APIs that

717
00:33:48,930 --> 00:33:51,840
we have on our own
Chrome desktop.

718
00:33:51,840 --> 00:33:54,170
Geolocation we already
had on the Chrome

719
00:33:54,170 --> 00:33:56,040
desktop for a while.

720
00:33:56,040 --> 00:34:00,050
And then on the device you can
request for a high accuracy.

721
00:34:00,050 --> 00:34:03,510
And that would turn
on the GPS sensor.

722
00:34:03,510 --> 00:34:05,900
Of course that's if you have
that sensor on the device.

723
00:34:05,900 --> 00:34:08,820
And then you have far
greater accuracy on

724
00:34:08,820 --> 00:34:12,120
the geolocation position.

725
00:34:12,120 --> 00:34:16,010
And then another cool thing
is the device orientation.

726
00:34:16,010 --> 00:34:19,230
So we implemented on desktop
first. And it was kind of

727
00:34:19,230 --> 00:34:22,949
tough to test, because we
tested on notebook.

728
00:34:22,949 --> 00:34:25,560
And it doesn't make much
sense for you to turn

729
00:34:25,560 --> 00:34:26,787
your notebook around.

730
00:34:26,787 --> 00:34:30,350
And by then you probably broke
some hard drives just like

731
00:34:30,350 --> 00:34:32,260
moving things around
and trying to

732
00:34:32,260 --> 00:34:34,409
see if it was working.

733
00:34:34,409 --> 00:34:38,477
It makes far, far more sense in
a real small device that we

734
00:34:38,477 --> 00:34:41,880
can literally turn around and
move around, and see where

735
00:34:41,880 --> 00:34:44,550
you're heading to and your
bearings and everything.

736
00:34:44,550 --> 00:34:45,330
BORIS SMUS: Yeah, yeah, yeah.

737
00:34:45,330 --> 00:34:50,199
MARCOS: So all this device APIs
are available for Android

738
00:34:50,199 --> 00:34:55,560
and exactly the same for
desktop, only more useful.

739
00:34:55,560 --> 00:34:57,110
BORIS SMUS: There's
a cool demo.

740
00:34:57,110 --> 00:34:58,660
MARCOS: Let me show that one.

741
00:34:58,660 --> 00:34:59,920
Just one second.

742
00:34:59,920 --> 00:35:03,100

743
00:35:03,100 --> 00:35:06,360
So this is a cool demo.

744
00:35:06,360 --> 00:35:07,580
There you go.

745
00:35:07,580 --> 00:35:11,140
So this is like a compass.

746
00:35:11,140 --> 00:35:13,210
And using device orientation.

747
00:35:13,210 --> 00:35:16,550
I don't think so.

748
00:35:16,550 --> 00:35:20,110
And then, yeah, you can see
where North is just using

749
00:35:20,110 --> 00:35:22,280
device orientation.

750
00:35:22,280 --> 00:35:25,380
Here, try to move around.

751
00:35:25,380 --> 00:35:27,230
So this is a great
little demo.

752
00:35:27,230 --> 00:35:30,580
I just found out like five
minutes before I came in.

753
00:35:30,580 --> 00:35:31,700
But it's really cool.

754
00:35:31,700 --> 00:35:33,220
And it shows all the
[UNINTELLIGIBLE]

755
00:35:33,220 --> 00:35:34,540
of the device.

756
00:35:34,540 --> 00:35:37,520
And it's so much nicer
to do this on my

757
00:35:37,520 --> 00:35:38,540
phone than my desktop.

758
00:35:38,540 --> 00:35:39,790
BORIS SMUS: Right.

759
00:35:39,790 --> 00:35:42,568

760
00:35:42,568 --> 00:35:43,464
MARCOS: Oh, sorry.

761
00:35:43,464 --> 00:35:45,940
BORIS SMUS: No problem.

762
00:35:45,940 --> 00:35:48,490
Cool.

763
00:35:48,490 --> 00:35:52,670
And then we also talked about
already, basic camera access.

764
00:35:52,670 --> 00:35:57,250
So that's what we have today.

765
00:35:57,250 --> 00:36:00,150
We'll see about the future.

766
00:36:00,150 --> 00:36:02,710
OK.

767
00:36:02,710 --> 00:36:04,870
Oh yeah, wait.

768
00:36:04,870 --> 00:36:09,500
I was going to show a
demo in a tablet.

769
00:36:09,500 --> 00:36:11,069
But I forgot that.

770
00:36:11,069 --> 00:36:12,400
OK.

771
00:36:12,400 --> 00:36:15,490
Can't do that one.

772
00:36:15,490 --> 00:36:16,370
Let's see.

773
00:36:16,370 --> 00:36:19,450
What else did we have?

774
00:36:19,450 --> 00:36:19,800
Right.

775
00:36:19,800 --> 00:36:24,200
So maybe just small things for
developers to think about when

776
00:36:24,200 --> 00:36:27,530
they build mobile web apps,
mobile websites or

777
00:36:27,530 --> 00:36:28,540
experiences.

778
00:36:28,540 --> 00:36:32,570
So I guess the first thing
that comes to mind is

779
00:36:32,570 --> 00:36:33,250
[UNINTELLIGIBLE]

780
00:36:33,250 --> 00:36:35,440
considerations.

781
00:36:35,440 --> 00:36:41,350
So the basic idea there is you
want to be able to specify

782
00:36:41,350 --> 00:36:43,180
which part of the screen
to show up on the

783
00:36:43,180 --> 00:36:44,610
smaller display right?

784
00:36:44,610 --> 00:36:47,200
Maybe you can elaborate
a little.

785
00:36:47,200 --> 00:36:50,000
PETER BEVERLOO: Well, one of
things to keep in mind, there

786
00:36:50,000 --> 00:36:53,650
is the meta viewport element,
which is also supported by

787
00:36:53,650 --> 00:36:54,410
Chrome Android.

788
00:36:54,410 --> 00:36:58,840
And it allows you to set
the initial zoom level.

789
00:36:58,840 --> 00:37:01,625
If you really need to, you can
decide the minimum and the

790
00:37:01,625 --> 00:37:02,580
maximum zoom levels there.

791
00:37:02,580 --> 00:37:05,320
You could even disable
zooming.

792
00:37:05,320 --> 00:37:08,370
Of course, you should only do
that if it's really critical

793
00:37:08,370 --> 00:37:12,110
for your website to only be
available in your zoom of

794
00:37:12,110 --> 00:37:17,040
choice, especially with
different screen sizes or, for

795
00:37:17,040 --> 00:37:19,410
example, make comparison
between Android phones,

796
00:37:19,410 --> 00:37:22,600
Android tablets that
could end up pretty

797
00:37:22,600 --> 00:37:24,930
nasty for the end user.

798
00:37:24,930 --> 00:37:30,660
But using that technique you
can also decide the initial

799
00:37:30,660 --> 00:37:33,320
width of the viewport, whether
it should be equal to the

800
00:37:33,320 --> 00:37:38,205
space width or basically
a width of your choice.

801
00:37:38,205 --> 00:37:41,030

802
00:37:41,030 --> 00:37:45,350
And together with meta viewport
element and, say,

803
00:37:45,350 --> 00:37:49,600
media queries and using just
general responsive layout

804
00:37:49,600 --> 00:37:54,480
percentage space widths, you
should be able to also use the

805
00:37:54,480 --> 00:37:58,130
developer tools of course to
quickly get up to speed to

806
00:37:58,130 --> 00:38:02,584
develop for mobile
[UNINTELLIGIBLE] devices.

807
00:38:02,584 --> 00:38:04,550
BORIS SMUS: Cool.

808
00:38:04,550 --> 00:38:07,810
Any other things come to mind
as far as mobile specific

809
00:38:07,810 --> 00:38:09,722
considerations?

810
00:38:09,722 --> 00:38:13,750
PETER BEVERLOO: Um,
not specifically.

811
00:38:13,750 --> 00:38:14,510
MARCOS: I think [UNINTELLIGIBLE]

812
00:38:14,510 --> 00:38:16,100
users is one thing.

813
00:38:16,100 --> 00:38:23,150
Try to avoid type loops or use
request. Yeah, I think that's

814
00:38:23,150 --> 00:38:24,610
an important consideration.

815
00:38:24,610 --> 00:38:28,870

816
00:38:28,870 --> 00:38:29,380
BORIS SMUS: Cool.

817
00:38:29,380 --> 00:38:33,290
Maybe let's talk about the dev
tools and maybe some of the

818
00:38:33,290 --> 00:38:37,500
coolest features that you guys
think are most interesting or

819
00:38:37,500 --> 00:38:39,100
the mobile focus.

820
00:38:39,100 --> 00:38:41,730
PETER BEVERLOO: I think one of
the main interesting things to

821
00:38:41,730 --> 00:38:45,640
witness in the mobile phone is
the developer tools network

822
00:38:45,640 --> 00:38:50,120
panel, because it allows you
to see the latencies and

823
00:38:50,120 --> 00:38:54,880
basically the loading
performance of the resources

824
00:38:54,880 --> 00:38:58,465
available for mobile websites.

825
00:38:58,465 --> 00:39:02,600
And especially in terms of
optimizing for mobile

826
00:39:02,600 --> 00:39:06,400
connections in which a route
we're trying to the server, so

827
00:39:06,400 --> 00:39:10,710
to get in this file is much
more expensive than to

828
00:39:10,710 --> 00:39:13,030
actually get a bigger file.

829
00:39:13,030 --> 00:39:15,750
It's worth spending on the
network which you're on.

830
00:39:15,750 --> 00:39:17,080
BORIS SMUS: Yeah.

831
00:39:17,080 --> 00:39:18,240
PETER BEVERLOO: That can get
real [UNINTELLIGIBLE].

832
00:39:18,240 --> 00:39:21,400
But I think that the network
panel can give some really

833
00:39:21,400 --> 00:39:24,480
valuable insights.

834
00:39:24,480 --> 00:39:26,590
Besides that, there is, of
course, the resource panel,

835
00:39:26,590 --> 00:39:28,470
which allows you to see
everything which is being

836
00:39:28,470 --> 00:39:29,860
loaded on the page.

837
00:39:29,860 --> 00:39:32,300
You can see the
[UNINTELLIGIBLE], all the

838
00:39:32,300 --> 00:39:34,330
elements on the page, the
scripting panel for the

839
00:39:34,330 --> 00:39:36,392
scripts, and modify
them in real time.

840
00:39:36,392 --> 00:39:38,190
As far as [INAUDIBLE]

841
00:39:38,190 --> 00:39:41,170
alerts, model dialogue.

842
00:39:41,170 --> 00:39:42,615
BORIS SMUS: Right,
so the resources.

843
00:39:42,615 --> 00:39:44,670
The resources gives
you a full list of

844
00:39:44,670 --> 00:39:46,420
everything that's loaded.

845
00:39:46,420 --> 00:39:49,880
PETER BEVERLOO: You can also see
the storage APIs, and the

846
00:39:49,880 --> 00:39:52,474
various web SQL databases and
[UNINTELLIGIBLE PHRASE].

847
00:39:52,474 --> 00:39:56,382

848
00:39:56,382 --> 00:39:57,861
BORIS SMUS: This is
right [INAUDIBLE].

849
00:39:57,861 --> 00:40:01,312

850
00:40:01,312 --> 00:40:02,562
Look at that.

851
00:40:02,562 --> 00:40:06,160

852
00:40:06,160 --> 00:40:07,410
Very cool.

853
00:40:07,410 --> 00:40:11,790

854
00:40:11,790 --> 00:40:13,770
Profiling also is a big deal,
right, for mobile?

855
00:40:13,770 --> 00:40:14,900
MARCOS: Yeah.

856
00:40:14,900 --> 00:40:17,590
BORIS SMUS: Before this was
like very different.

857
00:40:17,590 --> 00:40:18,840
[INTERPOSING VOICES]

858
00:40:18,840 --> 00:40:20,570

859
00:40:20,570 --> 00:40:23,760
MARCOS: You have the day time,
you can actually make your

860
00:40:23,760 --> 00:40:26,700
trade-offs and decisions and
optimize for the real thing

861
00:40:26,700 --> 00:40:28,330
rather than just wishful
thinking.

862
00:40:28,330 --> 00:40:31,850
You have concrete tools.

863
00:40:31,850 --> 00:40:33,810
BORIS SMUS: Yeah, so you can
get a full breakdown of

864
00:40:33,810 --> 00:40:35,936
exactly what part of
your app is slow.

865
00:40:35,936 --> 00:40:37,265
So if I start profiling.

866
00:40:37,265 --> 00:40:39,190
Let's see if this
actually works.

867
00:40:39,190 --> 00:40:41,330
Scroll around.

868
00:40:41,330 --> 00:40:44,150
We're profiling Google
Maps here.

869
00:40:44,150 --> 00:40:46,350
Wow.

870
00:40:46,350 --> 00:40:47,690
We have a full breakdown here.

871
00:40:47,690 --> 00:40:50,970

872
00:40:50,970 --> 00:40:52,220
Whoa.

873
00:40:52,220 --> 00:40:56,390

874
00:40:56,390 --> 00:40:58,680
We get the full line
members as well?

875
00:40:58,680 --> 00:40:59,170
MARCOS: Yeah.

876
00:40:59,170 --> 00:41:00,250
BORIS SMUS: The code is
[UNINTELLIGIBLE].

877
00:41:00,250 --> 00:41:04,030
MARCOS: Yeah, [UNINTELLIGIBLE],
but you get

878
00:41:04,030 --> 00:41:08,620
a complete picture
of your profile.

879
00:41:08,620 --> 00:41:13,370

880
00:41:13,370 --> 00:41:14,290
BORIS SMUS: Whoa.

881
00:41:14,290 --> 00:41:15,460
PETER BEVERLOO: And, of course,
the [UNINTELLIGIBLE]

882
00:41:15,460 --> 00:41:19,370
profiler there is also the
timeline panel, which allows

883
00:41:19,370 --> 00:41:22,080
you to get a graph of
[UNINTELLIGIBLE] loading times

884
00:41:22,080 --> 00:41:22,610
and [UNINTELLIGIBLE]

885
00:41:22,610 --> 00:41:24,995
times of every familiar page.

886
00:41:24,995 --> 00:41:26,290
And script execute sometimes.

887
00:41:26,290 --> 00:41:28,120
And they're really quite
insightful as well.

888
00:41:28,120 --> 00:41:30,750
MARCOS: Yeah.

889
00:41:30,750 --> 00:41:33,262
BORIS SMUS: Actually going back
to the scripts here, and

890
00:41:33,262 --> 00:41:34,220
see if this works.

891
00:41:34,220 --> 00:41:36,390
Oh no.

892
00:41:36,390 --> 00:41:38,810
Basically there's this-- one of
my favorite features here

893
00:41:38,810 --> 00:41:43,240
is this pretty print thing.

894
00:41:43,240 --> 00:41:47,080
It may be a bit ambitious to try
to print this little map

895
00:41:47,080 --> 00:41:47,910
[UNINTELLIGIBLE].

896
00:41:47,910 --> 00:41:50,824
But we'll see what happens
just for fun.

897
00:41:50,824 --> 00:41:54,130

898
00:41:54,130 --> 00:41:57,150
So I pressed the pretty
print button.

899
00:41:57,150 --> 00:41:59,160
This is going to take a while.

900
00:41:59,160 --> 00:42:02,010
Oh.

901
00:42:02,010 --> 00:42:03,760
So now we have, like--

902
00:42:03,760 --> 00:42:06,663
now go ahead and debug
Google Maps.

903
00:42:06,663 --> 00:42:07,590
You're set.

904
00:42:07,590 --> 00:42:09,750
You can just set a breakpoint
online.

905
00:42:09,750 --> 00:42:10,135
Wow.

906
00:42:10,135 --> 00:42:15,440
We have 9,000 or 10,000 there.

907
00:42:15,440 --> 00:42:16,580
MARCOS: This is pretty cool.

908
00:42:16,580 --> 00:42:18,550
BORIS SMUS: Anyway, this is
a [? must ?] feature.

909
00:42:18,550 --> 00:42:20,720
I mean all of these
things are game

910
00:42:20,720 --> 00:42:23,380
changers for mobile devices.

911
00:42:23,380 --> 00:42:27,170
MARCOS: Yeah, not just mobile
but right across the board

912
00:42:27,170 --> 00:42:29,040
this is exactly the same
tools that you

913
00:42:29,040 --> 00:42:30,290
would use on the desktop.

914
00:42:30,290 --> 00:42:33,040
So you're going to have just one
single, very comfortable

915
00:42:33,040 --> 00:42:35,735
environment to target everything
in the world.

916
00:42:35,735 --> 00:42:38,360
So that is really very cool.

917
00:42:38,360 --> 00:42:41,130

918
00:42:41,130 --> 00:42:41,650
BORIS SMUS: Cool.

919
00:42:41,650 --> 00:42:43,400
PETE: So, there's a question.

920
00:42:43,400 --> 00:42:46,770
Again this is Mark, who's been
a great participant today.

921
00:42:46,770 --> 00:42:47,450
Thanks to Mark.

922
00:42:47,450 --> 00:42:50,860
He wants to know what the
difference is between how

923
00:42:50,860 --> 00:42:53,732
elements are rendered in Chrome
for Android and the

924
00:42:53,732 --> 00:42:55,210
stock Android browser.

925
00:42:55,210 --> 00:43:00,760
For example he says, I
know Chrome supports

926
00:43:00,760 --> 00:43:02,700
fixed position elements.

927
00:43:02,700 --> 00:43:06,475
How does that all sort
of fit together?

928
00:43:06,475 --> 00:43:08,930
PETER BEVERLOO: Of course the
Android browser and Chrome in

929
00:43:08,930 --> 00:43:13,190
Android both share the WebKit
rendering engine.

930
00:43:13,190 --> 00:43:19,050
But besides sharing, WebKit
basically has two main layers

931
00:43:19,050 --> 00:43:22,320
in its web core, which is the
rendering part and then in its

932
00:43:22,320 --> 00:43:26,530
WebKit, which is an API
browser itself.

933
00:43:26,530 --> 00:43:31,390
And that API is important
because it allows the browser

934
00:43:31,390 --> 00:43:34,080
to determine how a website
should be displayed.

935
00:43:34,080 --> 00:43:38,170
For example, how rendering
works, how scrolling works.

936
00:43:38,170 --> 00:43:43,790
And the Android browser has a
different API implementation

937
00:43:43,790 --> 00:43:46,270
than Chrome for Android.

938
00:43:46,270 --> 00:43:50,570
We actually share that API with
a normal desktop Chrome.

939
00:43:50,570 --> 00:43:54,760
And it definitely can explain
the differences in how we

940
00:43:54,760 --> 00:43:59,030
handle things, how we implement
APIs, and for

941
00:43:59,030 --> 00:44:02,390
example you can change setting
with [UNINTELLIGIBLE].

942
00:44:02,390 --> 00:44:06,000
It's one of the reasons why
we're able to provide a

943
00:44:06,000 --> 00:44:10,110
consistent and nice overview
of everything the

944
00:44:10,110 --> 00:44:12,880
base is able to do.

945
00:44:12,880 --> 00:44:14,744
BORIS SMUS: Yeah, that's
this one right?

946
00:44:14,744 --> 00:44:16,725
PETER BEVERLOO: Yeah, so cool.

947
00:44:16,725 --> 00:44:19,680

948
00:44:19,680 --> 00:44:22,190
BORIS SMUS: Yeah, and I guess
also there may be differences

949
00:44:22,190 --> 00:44:23,480
in the web [? conversions ?]

950
00:44:23,480 --> 00:44:25,650
that the two respective
browsers use.

951
00:44:25,650 --> 00:44:26,570
PETER BEVERLOO: Yeah.

952
00:44:26,570 --> 00:44:30,545
BORIS SMUS: We may be poised
to be more ahead.

953
00:44:30,545 --> 00:44:36,420
I think because of Chrome for
Android being bundled.

954
00:44:36,420 --> 00:44:38,200
It's available for the market.

955
00:44:38,200 --> 00:44:41,520
Updates are available
from the market.

956
00:44:41,520 --> 00:44:43,460
MARCOS: That's an important
point, because

957
00:44:43,460 --> 00:44:45,190
it comes from Android.

958
00:44:45,190 --> 00:44:46,470
It's [UNINTELLIGIBLE].

959
00:44:46,470 --> 00:44:50,510
So we'll be getting all the
feature support-- all the

960
00:44:50,510 --> 00:44:54,570
features that make sense on a
mobile device that we get from

961
00:44:54,570 --> 00:44:57,550
Chrome desktop, because we're
sharing exactly the same web

962
00:44:57,550 --> 00:44:57,930
[UNINTELLIGIBLE]

963
00:44:57,930 --> 00:44:59,786
as at home.

964
00:44:59,786 --> 00:45:03,290
And the other browser shows
a slightly different--

965
00:45:03,290 --> 00:45:05,640
we share the same web
core, but we might

966
00:45:05,640 --> 00:45:07,290
get it slightly different.

967
00:45:07,290 --> 00:45:10,600
But Chrome for Android is
exactly the same as Chrome

968
00:45:10,600 --> 00:45:13,560
desktop with, of course,
some additions.

969
00:45:13,560 --> 00:45:17,710
And this is very important going
forward, that we will be

970
00:45:17,710 --> 00:45:21,130
following Chrome model.

971
00:45:21,130 --> 00:45:23,430
BORIS SMUS: And I guess it's
important to point out that

972
00:45:23,430 --> 00:45:27,040
lately the focus of the
engineering team has been to

973
00:45:27,040 --> 00:45:30,030
upstream as much code as
possible to the open source

974
00:45:30,030 --> 00:45:31,510
Chrome project.

975
00:45:31,510 --> 00:45:34,050
MARCOS: That's the reason
we're here in sunny

976
00:45:34,050 --> 00:45:35,740
California.

977
00:45:35,740 --> 00:45:38,970
PETER BEVERLOO: Right now what
we're doing is if you go to

978
00:45:38,970 --> 00:45:42,540
chrome.google.co
m/chrome/mobile, on the

979
00:45:42,540 --> 00:45:45,450
frequently asked questions
page, there is a link.

980
00:45:45,450 --> 00:45:49,670
If you want to see the source
code, at least the important

981
00:45:49,670 --> 00:45:54,430
source code right now of Chrome
on Androids, what we're

982
00:45:54,430 --> 00:45:57,680
doing right now is getting rid
of the differences and adding

983
00:45:57,680 --> 00:46:02,030
all our source codes to Chromium
and [UNINTELLIGIBLE]

984
00:46:02,030 --> 00:46:05,730
to make sure that we can become

985
00:46:05,730 --> 00:46:07,080
consistent as soon as possible.

986
00:46:07,080 --> 00:46:09,790

987
00:46:09,790 --> 00:46:11,360
BORIS SMUS: Whoa.

988
00:46:11,360 --> 00:46:11,645
Sorry.

989
00:46:11,645 --> 00:46:15,450
I was just trying to show that
[UNINTELLIGIBLE] page.

990
00:46:15,450 --> 00:46:16,700
[UNINTELLIGIBLE].

991
00:46:16,700 --> 00:46:19,340

992
00:46:19,340 --> 00:46:20,590
Anyway, [UNINTELLIGIBLE].

993
00:46:20,590 --> 00:46:24,640

994
00:46:24,640 --> 00:46:26,320
Sorry.

995
00:46:26,320 --> 00:46:27,570
Anyway--

996
00:46:27,570 --> 00:46:30,960

997
00:46:30,960 --> 00:46:33,685
yeah, so there's a question,
right Pete?

998
00:46:33,685 --> 00:46:39,200
PETE: Yeah, so there was a
question wanting to know--

999
00:46:39,200 --> 00:46:41,400
sorry, I'll try to find it.

1000
00:46:41,400 --> 00:46:44,510

1001
00:46:44,510 --> 00:46:47,360
When will it be available
for other countries?

1002
00:46:47,360 --> 00:46:51,040
And then as well, can you say
anything about supporting the

1003
00:46:51,040 --> 00:46:53,100
Chrome web store?

1004
00:46:53,100 --> 00:46:54,960
BORIS SMUS: So we're
working hard to

1005
00:46:54,960 --> 00:46:56,390
expand to other countries.

1006
00:46:56,390 --> 00:46:59,150
But I don't think there's
any concrete plans--

1007
00:46:59,150 --> 00:47:01,490
MARCOS: Anytime soon, I think,
is the real answer.

1008
00:47:01,490 --> 00:47:02,060
But--

1009
00:47:02,060 --> 00:47:03,000
BORIS SMUS: Sometime
hopefully.

1010
00:47:03,000 --> 00:47:05,750
MARCOS: --we'll be everywhere.

1011
00:47:05,750 --> 00:47:08,520
It's literally just a baby,
so please bear with us.

1012
00:47:08,520 --> 00:47:11,740
BORIS SMUS: Yeah, it's
been nine days.

1013
00:47:11,740 --> 00:47:12,950
MARCOS: Read your [? feet, ?]

1014
00:47:12,950 --> 00:47:18,690
like babies poems. It won't
be available anytime soon.

1015
00:47:18,690 --> 00:47:19,610
BORIS SMUS: Hey Mark.

1016
00:47:19,610 --> 00:47:20,180
MARK: Hey guys.

1017
00:47:20,180 --> 00:47:21,930
Thanks for doing this hangout.

1018
00:47:21,930 --> 00:47:24,630
BORIS SMUS: So anyway, I'm
trying to screen share this,

1019
00:47:24,630 --> 00:47:25,920
but I can't.

1020
00:47:25,920 --> 00:47:31,610
The other question was to do
with the Chrome web store and

1021
00:47:31,610 --> 00:47:33,060
support for that.

1022
00:47:33,060 --> 00:47:35,370
So yeah, there's no plans.

1023
00:47:35,370 --> 00:47:42,390
Again, we launched nine days
ago, so no plans for this.

1024
00:47:42,390 --> 00:47:46,130
And I would love to share a page
with a bunch of resources

1025
00:47:46,130 --> 00:47:51,235
where you can log bugs,
ask questions.

1026
00:47:51,235 --> 00:47:52,890
MARCOS: We can send the
links on anytime.

1027
00:47:52,890 --> 00:47:54,930
PETE: Yeah, so we'll go through
the links after.

1028
00:47:54,930 --> 00:47:57,333
But Mark had another
question that he

1029
00:47:57,333 --> 00:47:58,255
posted in the comments.

1030
00:47:58,255 --> 00:48:01,610
Mark, how about you ask
it actually in person?

1031
00:48:01,610 --> 00:48:02,680
MARK: OK.

1032
00:48:02,680 --> 00:48:06,250
So I've been using it out
of Transformer Prime.

1033
00:48:06,250 --> 00:48:08,072
PETE: Mark, I think
you're muted.

1034
00:48:08,072 --> 00:48:09,308
Oh, there we go.

1035
00:48:09,308 --> 00:48:11,340
MARK: Oh, great, OK.

1036
00:48:11,340 --> 00:48:12,370
I have a Transformer Prime.

1037
00:48:12,370 --> 00:48:16,210
And I've been using Chrome on
that for the last few days.

1038
00:48:16,210 --> 00:48:17,965
It's been working great.

1039
00:48:17,965 --> 00:48:19,665
But I have had a few
times where it's

1040
00:48:19,665 --> 00:48:20,620
had some weird bugs.

1041
00:48:20,620 --> 00:48:23,170
And I was wondering what is the
best way to report those

1042
00:48:23,170 --> 00:48:24,420
to you guys?

1043
00:48:24,420 --> 00:48:31,678

1044
00:48:31,678 --> 00:48:33,080
BORIS SMUS: Mark, could
you repeat?

1045
00:48:33,080 --> 00:48:34,900
We missed the first part.

1046
00:48:34,900 --> 00:48:36,600
MARK: Oh, sure.

1047
00:48:36,600 --> 00:48:38,578
So basically I've just been
using Chrome over

1048
00:48:38,578 --> 00:48:38,890
the last few days.

1049
00:48:38,890 --> 00:48:39,760
BORIS SMUS: The last,
file bugs.

1050
00:48:39,760 --> 00:48:45,790
So the best way to file bugs
is we've made a short link.

1051
00:48:45,790 --> 00:48:51,600
Basically, you go to
new.mcrbug.com, and that will

1052
00:48:51,600 --> 00:48:57,290
take you directly to the
Chromium bug tracker with the

1053
00:48:57,290 --> 00:48:59,430
correct bug template.

1054
00:48:59,430 --> 00:49:01,230
And then you just fill
that form in.

1055
00:49:01,230 --> 00:49:02,560
And you're set.

1056
00:49:02,560 --> 00:49:04,760
On that note, actually what I
was trying to show, and I

1057
00:49:04,760 --> 00:49:07,320
still am failing to
screen share.

1058
00:49:07,320 --> 00:49:13,330
If you go to mcrbug.com, it will
give you a list of all

1059
00:49:13,330 --> 00:49:16,500
the bugs logged against ASOS
Android, which is the new

1060
00:49:16,500 --> 00:49:21,590
component, in the Chromium bug
track that tracks mobile

1061
00:49:21,590 --> 00:49:24,200
issues, or that tracks Chrome
for Android issues.

1062
00:49:24,200 --> 00:49:27,040
And the cool thing there
is you can see

1063
00:49:27,040 --> 00:49:28,200
the number of stars.

1064
00:49:28,200 --> 00:49:32,130
And it's actually by default
ranked in star order.

1065
00:49:32,130 --> 00:49:38,200
So you'll see things like web
DL support, which is highly

1066
00:49:38,200 --> 00:49:40,650
ranked, as well as
other things that

1067
00:49:40,650 --> 00:49:41,900
people have been logging.

1068
00:49:41,900 --> 00:49:45,270

1069
00:49:45,270 --> 00:49:48,750
Those are the two bug
logging venues.

1070
00:49:48,750 --> 00:49:51,770
And if you have developer
questions, we're trying to

1071
00:49:51,770 --> 00:49:55,510
encourage people to ask them on
stack overflow, using both

1072
00:49:55,510 --> 00:49:58,910
the Google-Chrome tag, as
well as the Android tag.

1073
00:49:58,910 --> 00:50:04,990
So if you log your question
with both tags, then that

1074
00:50:04,990 --> 00:50:09,190
automatically goes into
my inbox basically.

1075
00:50:09,190 --> 00:50:12,150
And we have other people looking
at that as well.

1076
00:50:12,150 --> 00:50:16,880
So that's the best
way to do that.

1077
00:50:16,880 --> 00:50:17,110
OK.

1078
00:50:17,110 --> 00:50:20,701
So we're pretty close
to the end actually.

1079
00:50:20,701 --> 00:50:25,910
Oh yeah, so I heard there's an
Easter egg somewhere in the--

1080
00:50:25,910 --> 00:50:26,774
MARCOS: Is there?

1081
00:50:26,774 --> 00:50:30,380
PETER BEVERLOO: We've
heard that too.

1082
00:50:30,380 --> 00:50:31,630
BORIS SMUS: OK.

1083
00:50:31,630 --> 00:50:33,510

1084
00:50:33,510 --> 00:50:34,440
All right.

1085
00:50:34,440 --> 00:50:36,675
Well, maybe you guys will
find it sometime.

1086
00:50:36,675 --> 00:50:39,180

1087
00:50:39,180 --> 00:50:40,430
MARCOS: [INAUDIBLE]

1088
00:50:40,430 --> 00:50:42,870

1089
00:50:42,870 --> 00:50:46,210
BORIS SMUS: Anyway, so we
talked about feedback.

1090
00:50:46,210 --> 00:50:49,830
Give feedback to the eng team.

1091
00:50:49,830 --> 00:50:51,515
We talked about the
code sites.

1092
00:50:51,515 --> 00:50:55,480
So
code.google.com/chrome/mobile.

1093
00:50:55,480 --> 00:50:57,040
PETER BEVERLOO: And in addition
to that, the Chrome

1094
00:50:57,040 --> 00:51:00,750
site also has excellent
documentation available on how

1095
00:51:00,750 --> 00:51:05,040
to install the Android SDK,
and to start using the

1096
00:51:05,040 --> 00:51:06,130
developer tools.

1097
00:51:06,130 --> 00:51:06,460
BORIS SMUS: Right.

1098
00:51:06,460 --> 00:51:07,510
That's a good guide.

1099
00:51:07,510 --> 00:51:14,570
There's also a video, just
walking through, as well as

1100
00:51:14,570 --> 00:51:16,970
[UNINTELLIGIBLE] a site for
Chrome developer tools.

1101
00:51:16,970 --> 00:51:20,460
So there's a whole page about
how to use that stuff.

1102
00:51:20,460 --> 00:51:24,250
And we should include that
as a link in here.

1103
00:51:24,250 --> 00:51:25,270
Other things--

1104
00:51:25,270 --> 00:51:26,330
oh yes.

1105
00:51:26,330 --> 00:51:27,550
HTML5 Rocks.

1106
00:51:27,550 --> 00:51:32,170
So HTML5 Rocks is a great
resource for a lot of the

1107
00:51:32,170 --> 00:51:35,240
HTML5 features that we
talked about here.

1108
00:51:35,240 --> 00:51:38,760
There's actually a specific
mobile page that, again, will

1109
00:51:38,760 --> 00:51:40,110
link you to.

1110
00:51:40,110 --> 00:51:44,890
But there's general web platform
features such as

1111
00:51:44,890 --> 00:51:46,530
index DB and [UNINTELLIGIBLE]
will go to

1112
00:51:46,530 --> 00:51:48,220
index DB on that page.

1113
00:51:48,220 --> 00:51:51,825
So if you have questions
related to that kind of

1114
00:51:51,825 --> 00:51:55,810
technology, it's a good
go-to place for you.

1115
00:51:55,810 --> 00:51:58,620
So maybe we'll take any
last-minute questions

1116
00:51:58,620 --> 00:52:00,080
if there are any.

1117
00:52:00,080 --> 00:52:07,180

1118
00:52:07,180 --> 00:52:09,790
PETE: Looks like we've addressed
pretty much all the

1119
00:52:09,790 --> 00:52:13,690
questions that everybody's
asked.

1120
00:52:13,690 --> 00:52:14,910
BORIS SMUS: Great.

1121
00:52:14,910 --> 00:52:16,840
PETE: Thanks everybody
for participating.

1122
00:52:16,840 --> 00:52:18,160
I'll let you--

1123
00:52:18,160 --> 00:52:19,700
BORIS SMUS: Yeah, I don't
know if you guys have

1124
00:52:19,700 --> 00:52:23,040
anything else to add.

1125
00:52:23,040 --> 00:52:25,470
PETER BEVERLOO: If you can,
try Chrome for Android.

1126
00:52:25,470 --> 00:52:27,772
It's really good.

1127
00:52:27,772 --> 00:52:30,630
BORIS SMUS: Yeah, I'll
second that.

1128
00:52:30,630 --> 00:52:32,060
MARCOS: And we're here
for a long term.

1129
00:52:32,060 --> 00:52:33,280
So don't worry.

1130
00:52:33,280 --> 00:52:34,220
Just nine days.

1131
00:52:34,220 --> 00:52:35,470
We will expand.

1132
00:52:35,470 --> 00:52:38,330

1133
00:52:38,330 --> 00:52:39,710
BORIS SMUS: One more thing.

1134
00:52:39,710 --> 00:52:42,600
We have a Google+ page.

1135
00:52:42,600 --> 00:52:46,330
You can follow the Chrome
developers Google+ page.

1136
00:52:46,330 --> 00:52:50,350
And we post a bunch of links,
multiple times a day I think,

1137
00:52:50,350 --> 00:52:53,890
around various things
with Chrome.

1138
00:52:53,890 --> 00:52:56,376
There's something else
I wanted to say.

1139
00:52:56,376 --> 00:52:58,991
Oh yeah, we're going to try to
do more of these hangouts in

1140
00:52:58,991 --> 00:52:59,900
the future.

1141
00:52:59,900 --> 00:53:02,950
So right, we have a schedule
every Thursday.

1142
00:53:02,950 --> 00:53:07,610
We will talk about things other
than Chrome for Android,

1143
00:53:07,610 --> 00:53:12,030
as well as Chrome for Android,
so join us then.

1144
00:53:12,030 --> 00:53:13,390
All right.

1145
00:53:13,390 --> 00:53:15,180
See you guys later.

1146
00:53:15,180 --> 00:53:16,430
Bye bye.

1147
00:53:16,430 --> 00:53:18,967

