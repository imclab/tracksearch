1
00:00:00,000 --> 00:00:39,600

2
00:00:39,600 --> 00:00:40,130
PAUL KINLAN: Hi, everyone.

3
00:00:40,130 --> 00:00:41,710
I'm Paul Kinlan.

4
00:00:41,710 --> 00:00:44,633
I'm here with one of my
good friends Glenn.

5
00:00:44,633 --> 00:00:46,990
GLENN JONES: Hi, everybody.

6
00:00:46,990 --> 00:00:52,240
So excuse some of the angles
that we've got at the moment.

7
00:00:52,240 --> 00:00:55,100
We've just opened a brand new
recording studio in London.

8
00:00:55,100 --> 00:00:57,320
I believe you're actually our
first external guest.

9
00:00:57,320 --> 00:00:58,100
GLENN JONES: That's nice.

10
00:00:58,100 --> 00:00:58,730
PAUL KINLAN: Yeah, it's cool.

11
00:00:58,730 --> 00:01:00,820
So today is Web Intents
Wednesday.

12
00:01:00,820 --> 00:01:04,800
This is all fortnightly or
biweekly coverage of what's

13
00:01:04,800 --> 00:01:07,040
happening in the world
of Web Intents.

14
00:01:07,040 --> 00:01:10,150
So, yep, this is our first week
in our new office with an

15
00:01:10,150 --> 00:01:12,700
external guest, which
is pretty cool.

16
00:01:12,700 --> 00:01:13,400
Just a bit about me.

17
00:01:13,400 --> 00:01:15,200
So I'm a developer advocate
at Google.

18
00:01:15,200 --> 00:01:16,950
I work at Chrome.

19
00:01:16,950 --> 00:01:19,190
And in particular, I work on a
project called Web Intents,

20
00:01:19,190 --> 00:01:21,320
which is what we're going
to talk about today.

21
00:01:21,320 --> 00:01:24,410
And our first talk that we had,
I think it was about four

22
00:01:24,410 --> 00:01:26,680
weeks ago, I had to
go on holiday.

23
00:01:26,680 --> 00:01:27,535
I shouldn't say I had
to go on holiday.

24
00:01:27,535 --> 00:01:30,380
I wasn't forced to
go on holiday.

25
00:01:30,380 --> 00:01:33,610
My first one of these we did
in a different room.

26
00:01:33,610 --> 00:01:35,880
We had Alex Kormorske, and we
were talking generally about

27
00:01:35,880 --> 00:01:36,960
the project.

28
00:01:36,960 --> 00:01:39,150
And we didn't actually get to
tell you anything about--

29
00:01:39,150 --> 00:01:40,800
well, we did get to tell you
about Web Intents, but we

30
00:01:40,800 --> 00:01:45,110
didn't get to show you kind of
how Web Intents worked in real

31
00:01:45,110 --> 00:01:46,600
life inside the browser.

32
00:01:46,600 --> 00:01:48,680
I know it was because my
machine wasn't set up

33
00:01:48,680 --> 00:01:51,410
properly, but today, I think
we're all set up.

34
00:01:51,410 --> 00:01:52,580
We're good to go, and I'll
give you a little

35
00:01:52,580 --> 00:01:55,030
demonstration about what
Web Intents are.

36
00:01:55,030 --> 00:01:58,170
But before we do that, I'd just
like to ask Glenn to talk

37
00:01:58,170 --> 00:02:00,600
about himself kind of what
you're working on, what you've

38
00:02:00,600 --> 00:02:02,260
been working in the past,
and what you've

39
00:02:02,260 --> 00:02:03,010
done with Web Intents.

40
00:02:03,010 --> 00:02:05,225
GLENN JONES: So I'm an
independent developer.

41
00:02:05,225 --> 00:02:07,650
I've had my company in the
past, and I've been doing

42
00:02:07,650 --> 00:02:09,479
JavaScript for quite
a long time.

43
00:02:09,479 --> 00:02:12,740
And I became interested in Web
Intents about well over a year

44
00:02:12,740 --> 00:02:15,990
ago, actually, a place in
Portland, IndieWebCamp, where

45
00:02:15,990 --> 00:02:18,140
there was a big discussion that
went on about Web Intents

46
00:02:18,140 --> 00:02:19,490
and the possibility there.

47
00:02:19,490 --> 00:02:22,390
Chris Messini actually brought
the subject up, and that's

48
00:02:22,390 --> 00:02:24,710
really where my fascination
started with it.

49
00:02:24,710 --> 00:02:27,300
Now, my background is really
design and user experience as

50
00:02:27,300 --> 00:02:28,710
well as doing coding.

51
00:02:28,710 --> 00:02:30,790
So in the beginning of this
year, I tried to bring

52
00:02:30,790 --> 00:02:33,490
together a group of people in
Brighton the event called

53
00:02:33,490 --> 00:02:38,340
Design Push where we looked at
some more UI elements of this.

54
00:02:38,340 --> 00:02:40,740
And I mean UI not just in terms
of what goes on in the

55
00:02:40,740 --> 00:02:43,330
browser, but how you create
buttons, and the verbs you'd

56
00:02:43,330 --> 00:02:46,360
use, and the language you would
use around it as well.

57
00:02:46,360 --> 00:02:47,390
So that's one element of it.

58
00:02:47,390 --> 00:02:50,390
But I've also been doing quite
a lot of experimenting with

59
00:02:50,390 --> 00:02:53,050
the code as it progressed as
it's gone along, because I'm

60
00:02:53,050 --> 00:02:55,280
quite interested to start using
it as soon as possible.

61
00:02:55,280 --> 00:02:55,570
PAUL KINLAN: Yeah.

62
00:02:55,570 --> 00:02:57,380
I think it was full
frontal last year?

63
00:02:57,380 --> 00:02:57,470
GLENN JONES: Yeah.

64
00:02:57,470 --> 00:02:58,690
I think they talked
full frontal.

65
00:02:58,690 --> 00:03:01,020
I did actually manage at the end
of the talk to do a little

66
00:03:01,020 --> 00:03:03,810
demo with some contact stuff,
because I'm quite interested

67
00:03:03,810 --> 00:03:07,440
in how to use contacts and
information you find business

68
00:03:07,440 --> 00:03:09,465
people's information and you
want to exchange backwards and

69
00:03:09,465 --> 00:03:10,770
forwards between applications.

70
00:03:10,770 --> 00:03:13,790
So I did a little demo
there by contacts.

71
00:03:13,790 --> 00:03:15,380
PAUL KINLAN: So just to put, I
think, in a wider picture as

72
00:03:15,380 --> 00:03:17,110
well, you were using a couple
of different APIs

73
00:03:17,110 --> 00:03:18,110
like drag and drop--

74
00:03:18,110 --> 00:03:18,530
GLENN JONES: Yeah.

75
00:03:18,530 --> 00:03:20,390
PAUL KINLAN: And then hooking up
these applications together

76
00:03:20,390 --> 00:03:24,042
with Web Intents and then did
you also use a protocol

77
00:03:24,042 --> 00:03:25,400
handler or--

78
00:03:25,400 --> 00:03:27,527
GLENN JONES: I have done some
work with the protocol

79
00:03:27,527 --> 00:03:28,695
handlers around picking
up telephone numbers

80
00:03:28,695 --> 00:03:29,474
and things like that.

81
00:03:29,474 --> 00:03:31,200
It's also to bring that
information in.

82
00:03:31,200 --> 00:03:31,460
PAUL KINLAN: Yes.

83
00:03:31,460 --> 00:03:33,110
So that's kind of interesting,
really.

84
00:03:33,110 --> 00:03:34,570
So thanks for that.

85
00:03:34,570 --> 00:03:36,990
Just before we dive into
everything, I'm going to try

86
00:03:36,990 --> 00:03:39,825
and give you a really good
demo of kind of what Web

87
00:03:39,825 --> 00:03:42,630
Intents are, how they work
inside Chrome, because Chrome

88
00:03:42,630 --> 00:03:46,310
has got an implementation of the
kind of the experimental

89
00:03:46,310 --> 00:03:48,315
implementation, at
least, of Web

90
00:03:48,315 --> 00:03:49,640
Intents inside the browser.

91
00:03:49,640 --> 00:03:52,880
So I'm just going to produce,
do all this magic production

92
00:03:52,880 --> 00:03:55,570
and switch cameras.

93
00:03:55,570 --> 00:03:56,280
Cool.

94
00:03:56,280 --> 00:03:58,930
So you should be able to see my
screen in front of me now.

95
00:03:58,930 --> 00:04:00,240
This is just a normal
application.

96
00:04:00,240 --> 00:04:01,110
It's called Imagemator.

97
00:04:01,110 --> 00:04:03,060
It's a very simple app.

98
00:04:03,060 --> 00:04:05,200
It's changed quite a bit since
my very first version.

99
00:04:05,200 --> 00:04:08,060
We got some other people in to
make it all look pretty,

100
00:04:08,060 --> 00:04:12,710
because the version prior to
this was all programmer art.

101
00:04:12,710 --> 00:04:16,480
Yeah, you could tell it was
programmer art and stuff.

102
00:04:16,480 --> 00:04:17,620
So this is our application.

103
00:04:17,620 --> 00:04:19,820
All it needs to do is be able
to bring images into this

104
00:04:19,820 --> 00:04:23,830
application and then do some
magic with it once--

105
00:04:23,830 --> 00:04:25,200
I'll just do some general
magic with it.

106
00:04:25,200 --> 00:04:27,225
So let me just show you kind of
in action and then I kind

107
00:04:27,225 --> 00:04:29,600
of want to briefly show
you some code.

108
00:04:29,600 --> 00:04:32,100
It won't be much code because I
think that's the part about

109
00:04:32,100 --> 00:04:33,615
Web Intents, which
is pretty cool.

110
00:04:33,615 --> 00:04:35,720
You can get applications just
to talk to each other with

111
00:04:35,720 --> 00:04:37,240
very little code involved.

112
00:04:37,240 --> 00:04:39,080
So anyway, this is our app.

113
00:04:39,080 --> 00:04:41,026
We're going to pick an image.

114
00:04:41,026 --> 00:04:42,280
There we are.

115
00:04:42,280 --> 00:04:44,590
Now, as you can see, we have
a picker in front of us.

116
00:04:44,590 --> 00:04:47,450
It's a little kind of dialogue
inside Chrome, which, in

117
00:04:47,450 --> 00:04:51,340
theory, can't be spoofed by
any kind of normal web

118
00:04:51,340 --> 00:04:52,530
application.

119
00:04:52,530 --> 00:04:55,060
So the thing that happens here,
is we got a list of

120
00:04:55,060 --> 00:05:00,790
applications that we can use,
capture browser screen, pick

121
00:05:00,790 --> 00:05:02,980
file from Cloud File Picker,
and whole load of other

122
00:05:02,980 --> 00:05:04,110
applications.

123
00:05:04,110 --> 00:05:07,110
These are applications that I've
installed in Chrome kind

124
00:05:07,110 --> 00:05:10,890
of knows, supports the action
of picking images.

125
00:05:10,890 --> 00:05:13,160
We also have some suggestions
in the bottom of the screen,

126
00:05:13,160 --> 00:05:15,710
web page screenshot, and
image, and Haystack.

127
00:05:15,710 --> 00:05:18,670
These aren't installed, but
all this information about

128
00:05:18,670 --> 00:05:20,460
what applications can
do is stored in

129
00:05:20,460 --> 00:05:21,190
the Chrome Web Store.

130
00:05:21,190 --> 00:05:23,800
So we can query the Chrome Web
Store to get a list of

131
00:05:23,800 --> 00:05:25,680
applications that might
be able to help us

132
00:05:25,680 --> 00:05:27,230
fulfill this action.

133
00:05:27,230 --> 00:05:29,670
So anyway, let's have a
look at a quick demo.

134
00:05:29,670 --> 00:05:32,980
So pick from Cloud
File Picker.

135
00:05:32,980 --> 00:05:35,640
Cloud File Picker is just
another application that we

136
00:05:35,640 --> 00:05:37,550
built that integrates
with Google drive.

137
00:05:37,550 --> 00:05:38,860
It's kind of pretty cool.

138
00:05:38,860 --> 00:05:41,720
So it's the normal kind of
one-pick experience, the

139
00:05:41,720 --> 00:05:43,140
single-picker experience.

140
00:05:43,140 --> 00:05:44,250
Let's choose an image.

141
00:05:44,250 --> 00:05:47,100
This is one that people seem
to like of me sometimes.

142
00:05:47,100 --> 00:05:48,480
This is actually a bug.

143
00:05:48,480 --> 00:05:51,150
It should take you back to your
original application.

144
00:05:51,150 --> 00:05:53,950
But as you can see, once we've
switch back, you can see the

145
00:05:53,950 --> 00:05:55,910
image has been brought
back into our app.

146
00:05:55,910 --> 00:05:57,680
One thing, which is in our
application, we can actually

147
00:05:57,680 --> 00:05:58,480
do a couple of things.

148
00:05:58,480 --> 00:06:01,330
We can either save it to the
cloud somewhere, share it

149
00:06:01,330 --> 00:06:02,980
somewhere else, or
we can edit it.

150
00:06:02,980 --> 00:06:04,270
So the demo that we
try and like to

151
00:06:04,270 --> 00:06:06,000
show is Edit in Action.

152
00:06:06,000 --> 00:06:08,790
So this is basically ask the
browser for a list of

153
00:06:08,790 --> 00:06:11,460
applications that can support
image editing.

154
00:06:11,460 --> 00:06:14,290
Not word document editing, not
video editing, just the

155
00:06:14,290 --> 00:06:16,140
ability to edit images.

156
00:06:16,140 --> 00:06:19,200
So we're going to edit in
Mememator, which is another

157
00:06:19,200 --> 00:06:20,170
application I built.

158
00:06:20,170 --> 00:06:23,840
And again, it looks a lot nicer
than it did originally.

159
00:06:23,840 --> 00:06:25,728
So hot.

160
00:06:25,728 --> 00:06:26,940
That's how we go.

161
00:06:26,940 --> 00:06:27,270
Sorry.

162
00:06:27,270 --> 00:06:28,680
Hot.

163
00:06:28,680 --> 00:06:31,890
As you can see, the
image is updated.

164
00:06:31,890 --> 00:06:33,330
There it is.

165
00:06:33,330 --> 00:06:36,690
And scroll down, press
Done Editing.

166
00:06:36,690 --> 00:06:39,500
And what should happen here,
is of the data that's been

167
00:06:39,500 --> 00:06:41,830
edited in one application, has
been brought back into this

168
00:06:41,830 --> 00:06:42,980
application.

169
00:06:42,980 --> 00:06:44,570
So the really cool thing about
this is, is that we've

170
00:06:44,570 --> 00:06:47,180
integrated three or four
different apps, but actually

171
00:06:47,180 --> 00:06:49,040
all we've done is we've asked
the browser for some

172
00:06:49,040 --> 00:06:49,630
functionality.

173
00:06:49,630 --> 00:06:50,890
We haven't actually
had to do deep

174
00:06:50,890 --> 00:06:52,330
integrations with these APIs.

175
00:06:52,330 --> 00:06:55,870
And I just want to show
you the code.

176
00:06:55,870 --> 00:06:58,265
Hopefully, this will work if
I get this just right.

177
00:06:58,265 --> 00:07:03,500

178
00:07:03,500 --> 00:07:06,170
And I'll zoom in a bit
so we can see it.

179
00:07:06,170 --> 00:07:08,110
This is the entirety
of the application.

180
00:07:08,110 --> 00:07:09,990
It's about 40 lines of code.

181
00:07:09,990 --> 00:07:12,920
And as you can see here,
we have got Save

182
00:07:12,920 --> 00:07:14,530
button click Action.

183
00:07:14,530 --> 00:07:17,410
And then once we click the Save,
we fire off an intent.

184
00:07:17,410 --> 00:07:20,360
There's two lines of code to go
off and find applications

185
00:07:20,360 --> 00:07:22,880
that you want to use for common
actions across the web

186
00:07:22,880 --> 00:07:24,180
and to deliver data.

187
00:07:24,180 --> 00:07:27,240
I think personally, it's pretty
powerful, and this is

188
00:07:27,240 --> 00:07:28,240
exactly what we're working on.

189
00:07:28,240 --> 00:07:30,160
These are the types of things
that we are working on inside

190
00:07:30,160 --> 00:07:32,720
Web Intents.

191
00:07:32,720 --> 00:07:35,310
So back to the mainstream.

192
00:07:35,310 --> 00:07:37,640
That was my demo of
the application.

193
00:07:37,640 --> 00:07:38,820
It's kind of interesting.

194
00:07:38,820 --> 00:07:42,090
We've got the ability to hook up
applications, which, at the

195
00:07:42,090 --> 00:07:44,260
moment, from the way that we've
developed apps in the

196
00:07:44,260 --> 00:07:46,090
past, we've never been
able to easily do.

197
00:07:46,090 --> 00:07:46,370
GLENN JONES: No.

198
00:07:46,370 --> 00:07:49,110
I mean if you think about any
other way of doing this like

199
00:07:49,110 --> 00:07:52,270
with Olav on the server, the
amount of code you would need

200
00:07:52,270 --> 00:07:54,370
to actually wire two
applications together using

201
00:07:54,370 --> 00:07:56,050
Olav is really considerable
compared to what

202
00:07:56,050 --> 00:07:56,540
we just looked at.

203
00:07:56,540 --> 00:07:56,910
PAUL KINLAN: Yeah.

204
00:07:56,910 --> 00:07:58,430
Actually, we didn't even
touch on that.

205
00:07:58,430 --> 00:08:01,000
So the thing that's happening
right here is, normally, when

206
00:08:01,000 --> 00:08:02,700
you have two applications, they
talk to each other on the

207
00:08:02,700 --> 00:08:05,860
web at the moment, you kind of
pass the data from your web

208
00:08:05,860 --> 00:08:08,300
app kind of client side
to the server.

209
00:08:08,300 --> 00:08:09,970
The server talks to another
server with all the

210
00:08:09,970 --> 00:08:12,470
authentication stuff going on
in the middle and then goes

211
00:08:12,470 --> 00:08:14,815
from that service application
maybe back in the client app

212
00:08:14,815 --> 00:08:16,030
on the other side.

213
00:08:16,030 --> 00:08:18,190
And at least what we've been
trying to do in Web Intents,

214
00:08:18,190 --> 00:08:21,600
in our case, is let's say, well,
quite often you have the

215
00:08:21,600 --> 00:08:25,040
data in one browser tab and you
want to transition it to

216
00:08:25,040 --> 00:08:26,980
another application in
another browser tab.

217
00:08:26,980 --> 00:08:30,670
Why can't you just deliver the
data kind of from your page to

218
00:08:30,670 --> 00:08:32,280
the service page inside
the browser?

219
00:08:32,280 --> 00:08:34,590
So that's is kind of a really
good point is we're not

220
00:08:34,590 --> 00:08:38,070
basically saying that you are
going to deliver all data by a

221
00:08:38,070 --> 00:08:41,250
kind of client-side only
channels, but like the option,

222
00:08:41,250 --> 00:08:42,876
in theory, is that--

223
00:08:42,876 --> 00:08:43,690
GLENN JONES: Yeah.

224
00:08:43,690 --> 00:08:44,190
A lot more simple.

225
00:08:44,190 --> 00:08:45,160
A lot easier to implement.

226
00:08:45,160 --> 00:08:45,920
PAUL KINLAN: Yeah.

227
00:08:45,920 --> 00:08:48,460
So I have a script of things
that we are going to talk

228
00:08:48,460 --> 00:08:49,230
about today, at least.

229
00:08:49,230 --> 00:08:52,130
So just to kind of go over
some of the things that

230
00:08:52,130 --> 00:08:55,990
happened in the last
two weeks.

231
00:08:55,990 --> 00:08:59,910
We've seen a lot of reports
about RSS integration and Atom

232
00:08:59,910 --> 00:09:02,210
integration inside Chrome.

233
00:09:02,210 --> 00:09:04,270
Just to kind of give everyone
like an overview of what this

234
00:09:04,270 --> 00:09:06,730
actually means and what's
happened is--

235
00:09:06,730 --> 00:09:09,970
Recently, I think it was at the
start of this month about

236
00:09:09,970 --> 00:09:15,100
three weeks ago, when the stable
channel updated, we had

237
00:09:15,100 --> 00:09:17,040
some functionality inside
Chrome, which would basically

238
00:09:17,040 --> 00:09:19,970
say, well, whenever a user
visits an RSS feed, whether

239
00:09:19,970 --> 00:09:20,890
it's the BBC news--

240
00:09:20,890 --> 00:09:21,770
And I'll tell you what.

241
00:09:21,770 --> 00:09:26,770
I'll just actually show
this as a demo now.

242
00:09:26,770 --> 00:09:32,786
So when the user visits say the
BBC, for instance, I had

243
00:09:32,786 --> 00:09:35,270
no idea it was going to
appear on the screen.

244
00:09:35,270 --> 00:09:37,520
It clicks on an RSS feed.

245
00:09:37,520 --> 00:09:40,940
In the past, what's happened
is that in Chrome, in

246
00:09:40,940 --> 00:09:43,860
particular, it's just dumped
to the XML to the screen,

247
00:09:43,860 --> 00:09:46,510
which is a pretty bad experience
for users.

248
00:09:46,510 --> 00:09:50,800
What we've got instead is the
application will fire this

249
00:09:50,800 --> 00:09:51,930
thing called the View Intent.

250
00:09:51,930 --> 00:09:52,940
Let's say that the application
Chrome

251
00:09:52,940 --> 00:09:54,330
will fire a View Intent.

252
00:09:54,330 --> 00:09:58,480
So any RSS feed that you view
and visit, it will pop up this

253
00:09:58,480 --> 00:10:00,080
picker that we see
in front of us.

254
00:10:00,080 --> 00:10:02,390
So in this case, I've got two
applications, one is called

255
00:10:02,390 --> 00:10:06,250
Message Board, which is by
Julian Jenistow in France.

256
00:10:06,250 --> 00:10:10,280
I believe he's in France anyway,
feed intent viewer.

257
00:10:10,280 --> 00:10:11,890
And this is how we view the
Feed Intent viewer.

258
00:10:11,890 --> 00:10:15,510
So we've taken the data from BBC
news feed and presented it

259
00:10:15,510 --> 00:10:16,320
back to Chrome.

260
00:10:16,320 --> 00:10:19,580
So right now, we don't have the
ability to view the source

261
00:10:19,580 --> 00:10:21,000
that we used to have in
Chrome, which a lot of

262
00:10:21,000 --> 00:10:23,270
developers have been
asking for.

263
00:10:23,270 --> 00:10:26,720
The Feed Intent Viewer is
designed and it's made by

264
00:10:26,720 --> 00:10:26,840
Mikhail [INAUDIBLE]

265
00:10:26,840 --> 00:10:28,140
Epstein.

266
00:10:28,140 --> 00:10:32,320
It's basically designed to let
you do what you did in Chrome

267
00:10:32,320 --> 00:10:33,040
originally.

268
00:10:33,040 --> 00:10:35,670
Now, our plan, and we're still
working on this, our rough

269
00:10:35,670 --> 00:10:39,320
plan is to basically say, well,
we want you to at least

270
00:10:39,320 --> 00:10:41,570
be able to use the default from
something that wasn't

271
00:10:41,570 --> 00:10:43,810
from Chrome in the first place
but also still take advantage

272
00:10:43,810 --> 00:10:48,220
of Web Intents via the
picker that we have.

273
00:10:48,220 --> 00:10:50,471
Hey, there's my picture.

274
00:10:50,471 --> 00:10:51,980
GLENN JONES: I mean that's
really interesting, because

275
00:10:51,980 --> 00:10:55,360
the viewer was one of the sort
of things unlike Edit and

276
00:10:55,360 --> 00:10:58,060
Share which, to me, was a little
bit unexplained to

277
00:10:58,060 --> 00:10:58,590
start with.

278
00:10:58,590 --> 00:11:00,880
And this is a really nice
example of how the viewer

279
00:11:00,880 --> 00:11:04,120
actually works in terms of
lousy type of alternative

280
00:11:04,120 --> 00:11:05,210
perspective on something.

281
00:11:05,210 --> 00:11:07,620
And a different way of viewing
it, gives you the choice of

282
00:11:07,620 --> 00:11:08,890
how to view something.

283
00:11:08,890 --> 00:11:10,140
PAUL KINLAN: Yeah.

284
00:11:10,140 --> 00:11:13,040

285
00:11:13,040 --> 00:11:15,350
So just to kind of jump back,
there is actually a couple of

286
00:11:15,350 --> 00:11:16,570
different intents.

287
00:11:16,570 --> 00:11:20,050
So we've kind of come up on
webintents.org with a list of

288
00:11:20,050 --> 00:11:21,800
a kind of common actions
that we think the user

289
00:11:21,800 --> 00:11:23,200
does across the web.

290
00:11:23,200 --> 00:11:26,040
They view things on the web,
which is the View Intent, they

291
00:11:26,040 --> 00:11:29,030
edit data, they share links,
images, videos.

292
00:11:29,030 --> 00:11:31,440
They share a lot of
things on the web.

293
00:11:31,440 --> 00:11:33,400
They pick data in and they save
things back out to the

294
00:11:33,400 --> 00:11:37,090
cloud whether it's Dropbox,
Box.net, or Google Drive.

295
00:11:37,090 --> 00:11:40,370
And so we've got five or six
different types of intents

296
00:11:40,370 --> 00:11:42,200
that cover those actions.

297
00:11:42,200 --> 00:11:44,890
And if we jump back to the
application, you'll see that

298
00:11:44,890 --> 00:11:46,240
this is just a View Intent.

299
00:11:46,240 --> 00:11:47,920
So like you said, it's a
different perspective on the

300
00:11:47,920 --> 00:11:50,780
data that was on behind
the URL at the time.

301
00:11:50,780 --> 00:11:52,410
So we've got a couple of
different applications.

302
00:11:52,410 --> 00:11:54,820
RSS feed readers are a really
nice Chrome extension.

303
00:11:54,820 --> 00:11:56,790
I actually want to talk about
this one a little bit more,

304
00:11:56,790 --> 00:12:01,630
because the guy, Eric, who built
this application, he was

305
00:12:01,630 --> 00:12:04,850
basically one of the first
people to actually integrate

306
00:12:04,850 --> 00:12:05,670
with the View Intent.

307
00:12:05,670 --> 00:12:08,370
And once he had done that, he
landed in Chrome, which is

308
00:12:08,370 --> 00:12:10,130
then available to every
single user of Chrome.

309
00:12:10,130 --> 00:12:11,970
Once it's in stable, it's
available to every

310
00:12:11,970 --> 00:12:13,275
single user of Chrome.

311
00:12:13,275 --> 00:12:16,170
And because we can present the
list of applications that you

312
00:12:16,170 --> 00:12:19,780
can use from the Chrome Web
Store, like the discovery

313
00:12:19,780 --> 00:12:21,520
mechanisms from find and
installed apps when you

314
00:12:21,520 --> 00:12:23,390
haven't got one installed
already.

315
00:12:23,390 --> 00:12:26,240
He got a whole lot of installs,
I think, and he can

316
00:12:26,240 --> 00:12:28,660
tell you himself properly, he
had about 60,000 installs in

317
00:12:28,660 --> 00:12:30,900
the first five or six days.

318
00:12:30,900 --> 00:12:34,355
And he's got, I did a check on
the Chrome Web Store today,

319
00:12:34,355 --> 00:12:37,230
and he's got to 220,000 installs
for his Chrome

320
00:12:37,230 --> 00:12:39,330
extensions of Views Intents.

321
00:12:39,330 --> 00:12:41,180
The feed reader as well is
another popular one that

322
00:12:41,180 --> 00:12:41,480
[? Meihi ?]

323
00:12:41,480 --> 00:12:41,690
made.

324
00:12:41,690 --> 00:12:43,893
You have about, I think,
14,000 after the

325
00:12:43,893 --> 00:12:45,380
first week or two.

326
00:12:45,380 --> 00:12:48,400
So the way I kind of look at, is
that the more that you can

327
00:12:48,400 --> 00:12:50,600
integrate with Chrome, the more
opportunities third-party

328
00:12:50,600 --> 00:12:53,190
developers have to integrate
with the functionality that

329
00:12:53,190 --> 00:12:55,630
was never available
to them before.

330
00:12:55,630 --> 00:13:01,720
So that's basically an overview
of what's kind of

331
00:13:01,720 --> 00:13:03,385
happened with the View
Intent at least.

332
00:13:03,385 --> 00:13:04,590
GLENN JONES: I've
got a question.

333
00:13:04,590 --> 00:13:08,140
So if you were to ever say,
when you view an image

334
00:13:08,140 --> 00:13:10,745
usually, if you just purely
view an image and it just

335
00:13:10,745 --> 00:13:12,590
shows you an image in the corner
of the screen, usually

336
00:13:12,590 --> 00:13:16,060
in there, if that was ever to
opened up in a similar way, we

337
00:13:16,060 --> 00:13:18,470
could build something that maybe
did a nice sort of black

338
00:13:18,470 --> 00:13:21,200
screen, centered it, and maybe
even read some of the metadata

339
00:13:21,200 --> 00:13:23,840
like what camera was used to
take that photograph or

340
00:13:23,840 --> 00:13:24,570
something like that.

341
00:13:24,570 --> 00:13:26,470
And provide a different view
yet again on something that

342
00:13:26,470 --> 00:13:28,840
was very similar in terms
of viewing things.

343
00:13:28,840 --> 00:13:29,220
PAUL KINLAN: Yeah.

344
00:13:29,220 --> 00:13:31,310
I think that's kind of
interesting once you can start

345
00:13:31,310 --> 00:13:33,100
to think about opening up
different types of file

346
00:13:33,100 --> 00:13:35,760
formats and things that people
would just, like you said,

347
00:13:35,760 --> 00:13:37,580
they would just see the white
screen for the rest of the

348
00:13:37,580 --> 00:13:39,550
image, and like the image would
be at the top left.

349
00:13:39,550 --> 00:13:42,370
If you could provide say,
Photoshop.com, for instance,

350
00:13:42,370 --> 00:13:44,680
or the different sites and apps
and services, the ability

351
00:13:44,680 --> 00:13:46,260
to say you know what,
we're going to

352
00:13:46,260 --> 00:13:48,210
handle this data type.

353
00:13:48,210 --> 00:13:50,440
Then I think that's a
powerful kind of app

354
00:13:50,440 --> 00:13:51,570
ecosystem along the way.

355
00:13:51,570 --> 00:13:53,310
You integrate directly with
the functionality of the

356
00:13:53,310 --> 00:13:56,310
browser just to let the user
use those actions.

357
00:13:56,310 --> 00:13:57,800
GLENN JONES: And even something
as simple as an

358
00:13:57,800 --> 00:14:00,080
image, which you think, well,
you just display it.

359
00:14:00,080 --> 00:14:02,260
It has information built into
it like the camera,

360
00:14:02,260 --> 00:14:03,026
where it was taken.

361
00:14:03,026 --> 00:14:05,130
You can even have enough data
information you can put a map

362
00:14:05,130 --> 00:14:06,810
next to it and say this
image was taken here.

363
00:14:06,810 --> 00:14:08,550
PAUL KINLAN: Yeah.

364
00:14:08,550 --> 00:14:11,180
I mean that's some
of the goal.

365
00:14:11,180 --> 00:14:13,970
I think the fair thing to say
at the moment is we've just

366
00:14:13,970 --> 00:14:16,940
started kind of conservatively,
just RSS feeds

367
00:14:16,940 --> 00:14:18,200
and Atom feeds.

368
00:14:18,200 --> 00:14:20,380
We're going to get a whole lot
of feedback because some of

369
00:14:20,380 --> 00:14:23,290
the stuff that we found so far
with just integrating the

370
00:14:23,290 --> 00:14:27,380
ability to view an RSS feed is
it's driven the changes that

371
00:14:27,380 --> 00:14:29,303
we've made to some of the kind
of things that we've made in

372
00:14:29,303 --> 00:14:30,530
the spec recently.

373
00:14:30,530 --> 00:14:32,600
So I'm going to comment on this
as well in a minute and

374
00:14:32,600 --> 00:14:34,820
kind of give you a summary of
what's happened over the W3C

375
00:14:34,820 --> 00:14:36,970
and on the specs about
Web Intents at least.

376
00:14:36,970 --> 00:14:38,330
GLENN JONES: But as soon as you
start doing things like

377
00:14:38,330 --> 00:14:40,710
that, people like me start
thinking about how can we use

378
00:14:40,710 --> 00:14:42,880
this, and what's next thing
that can be done.

379
00:14:42,880 --> 00:14:44,220
Just like that.

380
00:14:44,220 --> 00:14:45,160
PAUL KINLAN: Yeah.

381
00:14:45,160 --> 00:14:46,100
This is a powerful thing.

382
00:14:46,100 --> 00:14:47,620
It's like you can kind
of get these little

383
00:14:47,620 --> 00:14:48,630
hooks into the browser.

384
00:14:48,630 --> 00:14:51,380
I mean, I want like Web Intents
integrated everywhere

385
00:14:51,380 --> 00:14:53,120
across all the browser.

386
00:14:53,120 --> 00:14:55,000
I honestly don't think it's
going to be there just yet.

387
00:14:55,000 --> 00:14:58,120
I mean, if I go my way I would
do it, but I think right now

388
00:14:58,120 --> 00:15:01,400
it's RSS feeds, Atom feeds,
things that people--

389
00:15:01,400 --> 00:15:04,560
We've always had a not great
experience inside Chrome, and

390
00:15:04,560 --> 00:15:06,060
we want let users
use those apps.

391
00:15:06,060 --> 00:15:07,708
So I think it's quite good.

392
00:15:07,708 --> 00:15:10,300
GLENN JONES: And you can see how
developers would like to

393
00:15:10,300 --> 00:15:11,720
see the raw code.

394
00:15:11,720 --> 00:15:13,750
There may be different
ways of exploring it.

395
00:15:13,750 --> 00:15:15,950
We might spin it out and
stuff like that.

396
00:15:15,950 --> 00:15:18,990
But for other people, it might
just presented to be in nice

397
00:15:18,990 --> 00:15:22,246
paragraphs like I would have
in a normal RSS reader.

398
00:15:22,246 --> 00:15:23,140
PAUL KINLAN: Yeah.

399
00:15:23,140 --> 00:15:24,180
So that's pretty cool.

400
00:15:24,180 --> 00:15:26,920
I just want to jump on to some
of the questions of things

401
00:15:26,920 --> 00:15:28,700
that have happened
over the week.

402
00:15:28,700 --> 00:15:30,452
So what's going to happen now is
I mean if you want to come

403
00:15:30,452 --> 00:15:32,280
up with any questions even
if they're really

404
00:15:32,280 --> 00:15:33,290
hard questions, right?

405
00:15:33,290 --> 00:15:35,350
Just ask f it.

406
00:15:35,350 --> 00:15:37,815
I just want to briefly talk
about some of the changes that

407
00:15:37,815 --> 00:15:40,460
have happened in the past week
to the specification.

408
00:15:40,460 --> 00:15:42,830
So the thing that's happened in
the moment is that we don't

409
00:15:42,830 --> 00:15:44,690
want Web Intents to
be Chrome only.

410
00:15:44,690 --> 00:15:46,875
I mean all the code has been
committed to Chrome, and it's

411
00:15:46,875 --> 00:15:49,450
a WebKit, which means that any
WebKit-based browser can take

412
00:15:49,450 --> 00:15:51,490
advantage of Web Intents.

413
00:15:51,490 --> 00:15:53,820
But that's not the great
story, right?

414
00:15:53,820 --> 00:15:54,850
I mean you've got three
hundred million users.

415
00:15:54,850 --> 00:15:57,550
Potentially, you could take
advantage of Chrome.

416
00:15:57,550 --> 00:16:00,620
But the rest of the internet
out there, the billions of

417
00:16:00,620 --> 00:16:03,560
users who use the internet
now should be able to use

418
00:16:03,560 --> 00:16:04,580
applications that they
want to use.

419
00:16:04,580 --> 00:16:06,820
So our goal at the moment
is to try and get this

420
00:16:06,820 --> 00:16:10,140
standardized and integrated
into other browsers.

421
00:16:10,140 --> 00:16:12,330
So what's happening is we have
a group, which is kind of

422
00:16:12,330 --> 00:16:16,980
shared between DAP on the W3C
and the public web apps group.

423
00:16:16,980 --> 00:16:18,540
And then there's also some stuff
going on at the WHATWG

424
00:16:18,540 --> 00:16:21,890
at the same time where we're
basically talking about the

425
00:16:21,890 --> 00:16:25,590
things that we need from an API
to make these applications

426
00:16:25,590 --> 00:16:28,320
interconnected, make it easy
for developers to do.

427
00:16:28,320 --> 00:16:31,730
So some of the things that have
happened recently, and

428
00:16:31,730 --> 00:16:33,600
literally it's like in the past
week, that we've made,

429
00:16:33,600 --> 00:16:37,168
some of these that we've
talked about at least.

430
00:16:37,168 --> 00:16:38,415
I'll give you a little
bit of background.

431
00:16:38,415 --> 00:16:40,300
It's probably best that I give
you some background.

432
00:16:40,300 --> 00:16:44,390
So the code that we had in the
past for talking to an

433
00:16:44,390 --> 00:16:47,755
application inside Web Intents
at least was, you would invoke

434
00:16:47,755 --> 00:16:50,790
an intent, you make an intent
object, give it the action.

435
00:16:50,790 --> 00:16:53,030
So I need to share this image.

436
00:16:53,030 --> 00:16:54,410
Well, I need to share
this thing.

437
00:16:54,410 --> 00:16:55,940
Give it a data type that
thing that you want to

438
00:16:55,940 --> 00:16:56,730
share, so an image.

439
00:16:56,730 --> 00:16:58,090
I need to share an image.

440
00:16:58,090 --> 00:17:00,160
And then you would actually
give the intent object the

441
00:17:00,160 --> 00:17:01,840
data that you wanted to share.

442
00:17:01,840 --> 00:17:04,119
And the way that we thought
about it originally was

443
00:17:04,119 --> 00:17:07,970
actually this data object should
just be the raw data,

444
00:17:07,970 --> 00:17:11,900
should be a BLOB or linked to
the URL link to where I save

445
00:17:11,900 --> 00:17:13,079
the images.

446
00:17:13,079 --> 00:17:17,099
And a lot of the feedback that
we had quite early on at least

447
00:17:17,099 --> 00:17:20,490
and recently, is that it's
not enough information.

448
00:17:20,490 --> 00:17:23,859
If you've got an image, there
might be some imitating code

449
00:17:23,859 --> 00:17:26,670
like meta information
encoded into image.

450
00:17:26,670 --> 00:17:29,700
But the problem that we've
got is, well, the name.

451
00:17:29,700 --> 00:17:30,750
Where's the file come from?

452
00:17:30,750 --> 00:17:33,720
If you're only passing the raw
data, a BLOB, it has no

453
00:17:33,720 --> 00:17:35,210
concept of a file name.

454
00:17:35,210 --> 00:17:37,970
URL might have a file name,
but it might be like a

455
00:17:37,970 --> 00:17:41,350
randomly-generated ID that some
social networking inside

456
00:17:41,350 --> 00:17:43,370
generates for an image, not the
actual physical name of

457
00:17:43,370 --> 00:17:44,830
the image itself.

458
00:17:44,830 --> 00:17:47,640
So we took all this feedback,
you know, people wanted all of

459
00:17:47,640 --> 00:17:48,950
this extra metadata in.

460
00:17:48,950 --> 00:17:50,490
And originally, we did
this thing called

461
00:17:50,490 --> 00:17:52,280
SetExtra and GetExtra.

462
00:17:52,280 --> 00:17:56,730
So you're basically set a key
value per problematically just

463
00:17:56,730 --> 00:17:59,290
by a one-method call, one method
is called to set and

464
00:17:59,290 --> 00:18:01,040
one method is called
to read it.

465
00:18:01,040 --> 00:18:04,180
And you spoke to developers.

466
00:18:04,180 --> 00:18:05,650
They hated it straight
away, right?

467
00:18:05,650 --> 00:18:06,270
GLENN JONES: Yeah.

468
00:18:06,270 --> 00:18:08,630
PAUL KINLAN: It was kind of
analogous to the way that

469
00:18:08,630 --> 00:18:11,210
Android works in a way you set
up an extra data but, it

470
00:18:11,210 --> 00:18:13,730
didn't seem webby and when we
were building an application,

471
00:18:13,730 --> 00:18:16,340
it was like, well, I have to
make 10 calls to set up.

472
00:18:16,340 --> 00:18:18,120
Why can't you patch
a dictionary in?

473
00:18:18,120 --> 00:18:19,430
And then we're thinking, OK.

474
00:18:19,430 --> 00:18:21,070
Well we've got a dictionary,
we could just say this

475
00:18:21,070 --> 00:18:22,870
actually is the dictionary.

476
00:18:22,870 --> 00:18:24,930
And one of the things that we do
at the moment and there's a

477
00:18:24,930 --> 00:18:27,600
current like a thread
on the W3C public

478
00:18:27,600 --> 00:18:29,870
intents list at the moment.

479
00:18:29,870 --> 00:18:32,360
The thread at the moment is
saying, well, why do we need

480
00:18:32,360 --> 00:18:33,050
two objects?

481
00:18:33,050 --> 00:18:36,380
Why do we need the actual data
object and the payload and the

482
00:18:36,380 --> 00:18:37,080
actual object.

483
00:18:37,080 --> 00:18:40,350
Why can't we just have one
object with an extra set of

484
00:18:40,350 --> 00:18:42,890
metadata and the physical
data itself.

485
00:18:42,890 --> 00:18:45,220
So we're kind of talk
about it right now.

486
00:18:45,220 --> 00:18:47,630
We don't necessarily need to
make changes inside Web

487
00:18:47,630 --> 00:18:50,830
Intent's implementation inside
Chrome because the way it

488
00:18:50,830 --> 00:18:53,370
works inside Chrome at least
is that it shares

489
00:18:53,370 --> 00:18:54,670
a JavaScript object.

490
00:18:54,670 --> 00:18:57,350
So any object that you have that
can be serialized by this

491
00:18:57,350 --> 00:18:59,970
structured clone algorithm can
be passed between Windows,

492
00:18:59,970 --> 00:19:00,470
essentially.

493
00:19:00,470 --> 00:19:02,270
GLENN JONES: I mean what you're
talking about makes

494
00:19:02,270 --> 00:19:04,650
complete sense to me, because
quite often when you're

495
00:19:04,650 --> 00:19:07,830
dealing with APIs, you have the
concept of envelopes where

496
00:19:07,830 --> 00:19:10,310
you have like the metadata and
then within that, you have the

497
00:19:10,310 --> 00:19:12,520
object that's being passed.

498
00:19:12,520 --> 00:19:15,880
Often with API, that might be
things like if it's a list of

499
00:19:15,880 --> 00:19:18,320
things, how many items
are there and

500
00:19:18,320 --> 00:19:19,750
how that was achieved.

501
00:19:19,750 --> 00:19:22,860
And this always seems
to be some sort of

502
00:19:22,860 --> 00:19:23,950
envelope that goes on.

503
00:19:23,950 --> 00:19:27,600
It's very rare that just the
data itself is passed across.

504
00:19:27,600 --> 00:19:29,920
So it makes a lot of sense to
me that you would envelope

505
00:19:29,920 --> 00:19:30,850
this somehow.

506
00:19:30,850 --> 00:19:35,560
And although a dictionary is
good, my personal view is

507
00:19:35,560 --> 00:19:38,990
often I already have an object
which is a representation of

508
00:19:38,990 --> 00:19:41,480
the data from wherever I've
collected it from.

509
00:19:41,480 --> 00:19:45,800
So as long as that's
understandable and everybody's

510
00:19:45,800 --> 00:19:47,510
agreed on that as a structure
pass that

511
00:19:47,510 --> 00:19:48,780
backwards and forwards.

512
00:19:48,780 --> 00:19:51,460
PAUL KINLAN: So when you were
passing microformat data--

513
00:19:51,460 --> 00:19:51,820
GLENN JONES: Yeah.

514
00:19:51,820 --> 00:19:52,150
So--

515
00:19:52,150 --> 00:19:52,670
PAUL KINLAN: How
did that work?

516
00:19:52,670 --> 00:19:56,340
GLENN JONES: So strangely,
microformat data, when

517
00:19:56,340 --> 00:20:00,740
microformats was first skimmered
up, they never had a

518
00:20:00,740 --> 00:20:04,430
concept of a JSON structure
for it, which is actually

519
00:20:04,430 --> 00:20:07,180
being rectified when they came
around to look up the

520
00:20:07,180 --> 00:20:08,140
microdata format.

521
00:20:08,140 --> 00:20:10,810
But part of the microdata format
is actually a very

522
00:20:10,810 --> 00:20:13,760
well-defined JSON structure for
everything that the parser

523
00:20:13,760 --> 00:20:14,520
has to bring out.

524
00:20:14,520 --> 00:20:16,510
So I'm thinking of a specific
way, and it's

525
00:20:16,510 --> 00:20:17,830
actually part of the spec.

526
00:20:17,830 --> 00:20:21,310
So for microformat community, I
and a couple of other people

527
00:20:21,310 --> 00:20:26,400
actually wrote a spec for how
you describe parse microformat

528
00:20:26,400 --> 00:20:30,600
in JSON, and it's called ufJSON
or something like that.

529
00:20:30,600 --> 00:20:32,590
So what's actually being passed
in the application I

530
00:20:32,590 --> 00:20:36,630
was using is a ufJSON object.

531
00:20:36,630 --> 00:20:37,780
It itself has an envelope.

532
00:20:37,780 --> 00:20:41,230
It has things like what parser
was that passed it, how long

533
00:20:41,230 --> 00:20:44,590
it took to parse it, the
original URL, and any base

534
00:20:44,590 --> 00:20:45,250
HREF as well.

535
00:20:45,250 --> 00:20:48,960
Because it has to actually
sometimes do some sort of

536
00:20:48,960 --> 00:20:52,700
changes from absolute URLs to
relative to absolute URLs.

537
00:20:52,700 --> 00:20:55,020
So there is little bits of
small metadata there.

538
00:20:55,020 --> 00:20:58,360
And I encapsulated it
in that format.

539
00:20:58,360 --> 00:21:00,250
PAUL KINLAN: I should have spoke
to you a lot more about

540
00:21:00,250 --> 00:21:02,140
this earlier on.

541
00:21:02,140 --> 00:21:02,610
Yeah.

542
00:21:02,610 --> 00:21:04,490
So I think that's the kind of
model that I started to move

543
00:21:04,490 --> 00:21:08,120
to at least anyway where we need
to be a little bit more

544
00:21:08,120 --> 00:21:10,100
prescriptive about the data
formats even though you might

545
00:21:10,100 --> 00:21:13,500
say you're passing an image
/png, there are actually types

546
00:21:13,500 --> 00:21:16,410
of metadata that we want to
pass that you would sit

547
00:21:16,410 --> 00:21:19,590
alongside the actual
raw data itself.

548
00:21:19,590 --> 00:21:23,700
I remember when we first talked
about Web Intents, like

549
00:21:23,700 --> 00:21:24,800
activity streams as well.

550
00:21:24,800 --> 00:21:27,510
They have verbs and objects, and
at the time, it was like

551
00:21:27,510 --> 00:21:29,730
well, actually they're pretty
well-defined objects.

552
00:21:29,730 --> 00:21:33,530
They were defined XML at that
time, because they were meant

553
00:21:33,530 --> 00:21:36,450
to be integrated
in Atom feeds.

554
00:21:36,450 --> 00:21:40,870
The question that came up was
well, can you do that in JSON

555
00:21:40,870 --> 00:21:43,880
And I think they had a method
for representing those objects

556
00:21:43,880 --> 00:21:44,440
in JSON as well.

557
00:21:44,440 --> 00:21:45,300
GLENN JONES: They did.

558
00:21:45,300 --> 00:21:45,600
Yeah.

559
00:21:45,600 --> 00:21:46,500
They moved on moved
on to do that.

560
00:21:46,500 --> 00:21:48,600
Yeah.

561
00:21:48,600 --> 00:21:51,050
PAUL KINLAN: So with microdata,
that's part of the

562
00:21:51,050 --> 00:21:51,530
HTML5 spec?

563
00:21:51,530 --> 00:21:52,310
GLENN JONES: I believe so.

564
00:21:52,310 --> 00:21:52,750
Yes.

565
00:21:52,750 --> 00:21:55,206
It was one of the learnings
that came out of the whole

566
00:21:55,206 --> 00:21:59,595
sort of microformats thing that
if you're going to embed

567
00:21:59,595 --> 00:22:05,080
the parsers into the browsers,
then you have a way of

568
00:22:05,080 --> 00:22:05,435
representation.

569
00:22:05,435 --> 00:22:07,850
PAUL KINLAN: Is that serialized
with a two JSON

570
00:22:07,850 --> 00:22:09,310
method or is that--

571
00:22:09,310 --> 00:22:11,210
GLENN JONES: Now, you're getting
beyond maybe what my

572
00:22:11,210 --> 00:22:13,560
knowledge is.

573
00:22:13,560 --> 00:22:15,890
I looked at that, and that's
something I want to look at

574
00:22:15,890 --> 00:22:17,195
actually next time.

575
00:22:17,195 --> 00:22:17,680
PAUL KINLAN: Yeah.

576
00:22:17,680 --> 00:22:19,300
Because that would be
kind of cool, right?

577
00:22:19,300 --> 00:22:20,900
Because if you could just
literally pass a down element

578
00:22:20,900 --> 00:22:24,190
as your data, understand that
actually well, you can't pass

579
00:22:24,190 --> 00:22:27,330
down elements across but if we
could say is part of the

580
00:22:27,330 --> 00:22:29,670
structure called the algorithm
or the algorithm that takes

581
00:22:29,670 --> 00:22:33,830
data from like client to service
that he will call a

582
00:22:33,830 --> 00:22:36,130
two-JSON method or something
on an object.

583
00:22:36,130 --> 00:22:38,800
And if the HTML element
supported it and then went

584
00:22:38,800 --> 00:22:42,160
through the rules for parsing
that into microdata and just

585
00:22:42,160 --> 00:22:43,450
return the JSON,
that would be--

586
00:22:43,450 --> 00:22:44,050
GLENN JONES: Yeah.

587
00:22:44,050 --> 00:22:48,510
I mean it has to be for pulling
this information out

588
00:22:48,510 --> 00:22:50,230
and it's a JavaScript type
that is built into the

589
00:22:50,230 --> 00:22:53,360
browser, so it has to be JSON,
basically until it comes out.

590
00:22:53,360 --> 00:22:54,900
PAUL KINLAN: That's really kind
of interesting, though

591
00:22:54,900 --> 00:22:55,810
because I can see how--

592
00:22:55,810 --> 00:22:57,100
GLENN JONES: Well, an
object literally.

593
00:22:57,100 --> 00:22:57,610
We don't say JSON.

594
00:22:57,610 --> 00:22:58,380
It's an object literally.

595
00:22:58,380 --> 00:22:58,650
PAUL KINLAN: Yeah.

596
00:22:58,650 --> 00:23:03,740
An object in a way but that's
actually really interesting.

597
00:23:03,740 --> 00:23:07,380
Because one of the things that
I was thinking about was you

598
00:23:07,380 --> 00:23:09,750
could either write a Chrome
extension, for instance or

599
00:23:09,750 --> 00:23:12,420
have it built into the browser
where if you detected these

600
00:23:12,420 --> 00:23:14,480
objects like living inside the
page, is that you could

601
00:23:14,480 --> 00:23:18,670
provide contextually-aware
actions off those objects.

602
00:23:18,670 --> 00:23:20,920
So if you found like a
person it just looked

603
00:23:20,920 --> 00:23:23,150
like a person's address.

604
00:23:23,150 --> 00:23:26,020
GLENN JONES: So I mean the
technique you're talking about

605
00:23:26,020 --> 00:23:27,020
is actually what I did.

606
00:23:27,020 --> 00:23:31,050
Because I built a JavaScript
parser for microformats that

607
00:23:31,050 --> 00:23:33,720
was built for people to
make extensions with.

608
00:23:33,720 --> 00:23:35,930
And it was based off some
original work from

609
00:23:35,930 --> 00:23:36,800
Mozilla ages ago.

610
00:23:36,800 --> 00:23:39,690
But I took it and I stripped
it down, and it's called

611
00:23:39,690 --> 00:23:40,990
microform app shift.

612
00:23:40,990 --> 00:23:44,630
And it's actually the main
Chrome extension that displays

613
00:23:44,630 --> 00:23:46,150
microformats uses this code.

614
00:23:46,150 --> 00:23:48,040
And it does exactly what
you're talking about.

615
00:23:48,040 --> 00:23:51,050
It's got method, which you pass
in the DOM element and it

616
00:23:51,050 --> 00:23:54,510
passes back this ufJSON
structure for you.

617
00:23:54,510 --> 00:23:56,960
PAUL KINLAN: And did you
manage that extension?

618
00:23:56,960 --> 00:23:58,530
GLENN JONES: Someone else has
actually built the extension,

619
00:23:58,530 --> 00:24:00,780
but I built the parse and I
built it in a way so that

620
00:24:00,780 --> 00:24:04,350
people could build extensions
with it.

621
00:24:04,350 --> 00:24:07,330
It's basically a library that I
built for people to put in.

622
00:24:07,330 --> 00:24:09,270
PAUL KINLAN: So does it detect
it in the page or detect it

623
00:24:09,270 --> 00:24:12,360
like in a little tab like a
little button across the top?

624
00:24:12,360 --> 00:24:15,420
GLENN JONES: The library itself,
you basically have to

625
00:24:15,420 --> 00:24:19,120
say give it a DOM element,
and it will

626
00:24:19,120 --> 00:24:20,630
tell you whether this--

627
00:24:20,630 --> 00:24:22,460
It will actually give
you a count as well.

628
00:24:22,460 --> 00:24:24,390
So if you just want to see if
there's something in there.

629
00:24:24,390 --> 00:24:28,350
So most of the extensions are
passing information first look

630
00:24:28,350 --> 00:24:29,510
just for the trigger.

631
00:24:29,510 --> 00:24:30,735
So they'll say, OK.

632
00:24:30,735 --> 00:24:33,340
Has this got one of the classes
that would be a

633
00:24:33,340 --> 00:24:33,915
top-level class.

634
00:24:33,915 --> 00:24:36,776
In which case, now let's parse
a whole document and finds

635
00:24:36,776 --> 00:24:36,970
it's structure.

636
00:24:36,970 --> 00:24:39,610
And that's how most of the
microformats passing

637
00:24:39,610 --> 00:24:40,860
extensions work.

638
00:24:40,860 --> 00:24:44,280

639
00:24:44,280 --> 00:24:45,500
PAUL KINLAN: I've got little
things get in my head.

640
00:24:45,500 --> 00:24:46,570
I kind of got some ideas.

641
00:24:46,570 --> 00:24:48,940
Yeah, I actually wouldn't mind
trying to do something like--

642
00:24:48,940 --> 00:24:50,730
GLENN JONES: And one of the
things I wanted to do as well

643
00:24:50,730 --> 00:24:54,170
as, obviously, the microdata
thing, I think, is not

644
00:24:54,170 --> 00:24:56,650
something that I built a parser
for, because I know the

645
00:24:56,650 --> 00:24:59,250
browser manufacturers and
vendors are going to build

646
00:24:59,250 --> 00:25:00,950
them because it's part
of the HTML5 spec.

647
00:25:00,950 --> 00:25:02,160
At some point, that
will come forward.

648
00:25:02,160 --> 00:25:06,410
But I'd like to also do some
of this stuff for maybe the

649
00:25:06,410 --> 00:25:11,950
Facebook Open Graph data and
newly the Twitter card systems

650
00:25:11,950 --> 00:25:14,000
where, which are both two
different types of metadata

651
00:25:14,000 --> 00:25:17,240
that are now being put into
websites on large scales

652
00:25:17,240 --> 00:25:20,350
because of the SEO benefit and
the ability to get your

653
00:25:20,350 --> 00:25:22,880
content shared into
social systems.

654
00:25:22,880 --> 00:25:25,540
Of course, obviously, with
MicroTech we've also got our

655
00:25:25,540 --> 00:25:27,370
sharing it to Google+.

656
00:25:27,370 --> 00:25:31,118
But some parsers that do similar
things pull up data as

657
00:25:31,118 --> 00:25:33,675
well and make that available.

658
00:25:33,675 --> 00:25:35,190
PAUL KINLAN: I would actually
like to be able to just to

659
00:25:35,190 --> 00:25:40,320
deliver objects that we find
on a web page to any

660
00:25:40,320 --> 00:25:43,710
application that says
it can support it.

661
00:25:43,710 --> 00:25:44,360
Wow.

662
00:25:44,360 --> 00:25:46,240
OK.

663
00:25:46,240 --> 00:25:46,510
Cool.

664
00:25:46,510 --> 00:25:51,040
So jumping back to the subject,
we are getting rid of

665
00:25:51,040 --> 00:25:53,630
the extras, GetExtra,
is extra.

666
00:25:53,630 --> 00:25:54,760
So we getting ride of it.

667
00:25:54,760 --> 00:25:56,160
It's part of kind of
a specification

668
00:25:56,160 --> 00:25:57,270
that's done this process.

669
00:25:57,270 --> 00:25:59,530
So obviously, we need to get
commitment from kind of all

670
00:25:59,530 --> 00:26:01,170
participants in the group.

671
00:26:01,170 --> 00:26:02,420
I think it looks pretty
positive.

672
00:26:02,420 --> 00:26:04,860

673
00:26:04,860 --> 00:26:05,210
Yeah.

674
00:26:05,210 --> 00:26:08,310
So as extras, I was going to
say that the data you pass

675
00:26:08,310 --> 00:26:10,425
along should have all this
extra information in it.

676
00:26:10,425 --> 00:26:12,810
From a documentation point of
view, we need to be really

677
00:26:12,810 --> 00:26:15,370
smart about how we document
the data that should be

678
00:26:15,370 --> 00:26:18,240
embedded like in these data
types that gets passed,

679
00:26:18,240 --> 00:26:22,780
because I get experience on
other systems where one might

680
00:26:22,780 --> 00:26:26,390
expect a title and if a service
doesn't send a title,

681
00:26:26,390 --> 00:26:28,300
then what happens, the client
application and all

682
00:26:28,300 --> 00:26:28,690
that type of stuff.

683
00:26:28,690 --> 00:26:31,480
So I think we can set some
really best practices in

684
00:26:31,480 --> 00:26:33,640
documentation for how this
is going to work.

685
00:26:33,640 --> 00:26:33,880
GLENN JONES: Yeah.

686
00:26:33,880 --> 00:26:37,670
I mean my only point there
would be to, you reuse,

687
00:26:37,670 --> 00:26:39,230
obviously, as much as
possibly out there.

688
00:26:39,230 --> 00:26:42,320
Yeah, and that interestingly
these contacts, you've got

689
00:26:42,320 --> 00:26:44,970
this beautiful thing the vCard
which is then being reused by

690
00:26:44,970 --> 00:26:46,880
Microforms it's hCard.

691
00:26:46,880 --> 00:26:49,460
It's nearly a one-to-one
match across.

692
00:26:49,460 --> 00:26:53,070
So it's always about paving
those cow paths and reusing as

693
00:26:53,070 --> 00:26:53,850
much as you possibly can.

694
00:26:53,850 --> 00:26:55,150
PAUL KINLAN: Yeah.

695
00:26:55,150 --> 00:26:56,850
So this is actually an
interesting point.

696
00:26:56,850 --> 00:26:58,330
But I think the DAP
we're talking

697
00:26:58,330 --> 00:27:00,180
about delivering contacts.

698
00:27:00,180 --> 00:27:04,290
And I think we were talking
about the good and new contact

699
00:27:04,290 --> 00:27:07,250
API but using intents but then
we'd have to describe the

700
00:27:07,250 --> 00:27:08,680
delivery mechanism.

701
00:27:08,680 --> 00:27:11,045
So it's kind of interesting
that we should--

702
00:27:11,045 --> 00:27:16,950
GLENN JONES: So I saw some of
the original discussion on the

703
00:27:16,950 --> 00:27:17,845
mailing list about this.

704
00:27:17,845 --> 00:27:21,990
And it looks like some of the
mechanisms that they are using

705
00:27:21,990 --> 00:27:25,390
are very similar to the popular
contacts work that was

706
00:27:25,390 --> 00:27:28,180
done, which again, was actually
based on some of the

707
00:27:28,180 --> 00:27:30,110
original hCard, vCard work.

708
00:27:30,110 --> 00:27:33,490
So yours get some sort of
layering that's going on.

709
00:27:33,490 --> 00:27:37,090
I think the interesting thing
is to make sure that you as

710
00:27:37,090 --> 00:27:40,460
much as possible base things
on the earliest standard so

711
00:27:40,460 --> 00:27:43,180
you don't have to translate so
much material from one thing

712
00:27:43,180 --> 00:27:45,635
to another.

713
00:27:45,635 --> 00:27:46,280
PAUL KINLAN: Yes.

714
00:27:46,280 --> 00:27:48,780
So Actually, I need to go back
to activity streams as well,

715
00:27:48,780 --> 00:27:52,580
because they had a whole lot of
data formats that they were

716
00:27:52,580 --> 00:27:54,800
automatically well-specified
out like especially

717
00:27:54,800 --> 00:27:57,050
for images as well.

718
00:27:57,050 --> 00:27:58,480
So recent changes to the API.

719
00:27:58,480 --> 00:28:01,050
This hasn't happened yet,
but on the list,

720
00:28:01,050 --> 00:28:02,900
this talk about Origin.

721
00:28:02,900 --> 00:28:05,010
And what they're trying
to say is that--

722
00:28:05,010 --> 00:28:08,040
So Origin is kind of
interesting HTTPS.

723
00:28:08,040 --> 00:28:10,340
You obviously refer and
everything goes through.

724
00:28:10,340 --> 00:28:14,800
When you do an HTTPS like an
HTTPS to HTTPS call at least,

725
00:28:14,800 --> 00:28:17,615
just like a normal web request,
so the referrers was

726
00:28:17,615 --> 00:28:18,000
always lost.

727
00:28:18,000 --> 00:28:20,400
So they start to introduce
this idea of HTTP origin

728
00:28:20,400 --> 00:28:22,705
header so that you could at
least understand the domain

729
00:28:22,705 --> 00:28:25,080
that certain things came from.

730
00:28:25,080 --> 00:28:27,530
And the request that's happened
recently on the Web

731
00:28:27,530 --> 00:28:31,270
Intents mailing list on the W3C
is that can we include the

732
00:28:31,270 --> 00:28:34,150
Origin information in the
payload for the data that's

733
00:28:34,150 --> 00:28:35,720
being transferred between
Web Intents.

734
00:28:35,720 --> 00:28:38,070
GLENN JONES: So I think there is
a really interesting point

735
00:28:38,070 --> 00:28:39,570
there that I don't think
anybody's brought up yet,

736
00:28:39,570 --> 00:28:43,870
which is if you include the
origin, so where the materials

737
00:28:43,870 --> 00:28:46,890
come from, the receiving site
then can do some interesting

738
00:28:46,890 --> 00:28:48,750
things with authentication,
which I think is the main

739
00:28:48,750 --> 00:28:50,630
reason that people are
interested in this.

740
00:28:50,630 --> 00:28:53,570
But it also has a slight darker
mechanism that could

741
00:28:53,570 --> 00:28:56,480
kick in which would be that the
receiving site could say,

742
00:28:56,480 --> 00:28:58,850
actually, I'm only going
to accept data from

743
00:28:58,850 --> 00:29:01,770
certain other sites.

744
00:29:01,770 --> 00:29:04,710
And actually be a blocking
mechanism, which is what we

745
00:29:04,710 --> 00:29:07,310
found with OAuth because
originally there were two ways

746
00:29:07,310 --> 00:29:10,380
of doing it, one which would
have been completely open, and

747
00:29:10,380 --> 00:29:13,050
one OAuth site would have dealt
with another one and

748
00:29:13,050 --> 00:29:13,580
stuff like that.

749
00:29:13,580 --> 00:29:17,580
But it actually ended up with
people running white and black

750
00:29:17,580 --> 00:29:20,020
lists for--

751
00:29:20,020 --> 00:29:21,710
OK, We're going to open up,
and we're going to allow

752
00:29:21,710 --> 00:29:24,736
people to OAuth between our
site maybe contacts or

753
00:29:24,736 --> 00:29:26,420
something like that from
one site to another.

754
00:29:26,420 --> 00:29:29,430
But we're only going to allow
authorized sites.

755
00:29:29,430 --> 00:29:30,080
PAUL KINLAN: Yeah.

756
00:29:30,080 --> 00:29:33,570
I mean that was actually some of
the thing that people were

757
00:29:33,570 --> 00:29:37,010
asking for insight as
part of the spec.

758
00:29:37,010 --> 00:29:39,210
GLENN JONES: And Origins
could give them that.

759
00:29:39,210 --> 00:29:39,580
Because if--

760
00:29:39,580 --> 00:29:40,990
PAUL KINLAN: Yeah.

761
00:29:40,990 --> 00:29:43,900
I generally understood when we
were bursting with the API.

762
00:29:43,900 --> 00:29:45,520
I didn't want client
applications to know about

763
00:29:45,520 --> 00:29:47,476
service applications and service
applications to know

764
00:29:47,476 --> 00:29:49,770
about client application.

765
00:29:49,770 --> 00:29:51,560
At some point, they might be
able to discern information.

766
00:29:51,560 --> 00:29:54,530
So if you passed an image that
was just the URL, and you have

767
00:29:54,530 --> 00:29:58,350
like I don't know, like
image.twitter.com, whatever it

768
00:29:58,350 --> 00:30:00,190
is, there's a good chance that
the image was shared from

769
00:30:00,190 --> 00:30:01,760
Twitter or somewhere else,
but you're never

770
00:30:01,760 --> 00:30:04,660
actually quite too sure.

771
00:30:04,660 --> 00:30:06,300
It's one of those things that
this is the whole point about

772
00:30:06,300 --> 00:30:08,210
specification that's done with
these processes is that we

773
00:30:08,210 --> 00:30:11,220
talk these things out.

774
00:30:11,220 --> 00:30:12,570
I don't know what
the answer is.

775
00:30:12,570 --> 00:30:13,410
I don't think anyone knows.

776
00:30:13,410 --> 00:30:14,930
It was only brought on the
list like two days ago.

777
00:30:14,930 --> 00:30:17,200
GLENN JONES: I think it's a very
prickly subject, because

778
00:30:17,200 --> 00:30:20,540
I can definitely see the
benefits for widening some of

779
00:30:20,540 --> 00:30:21,870
these cases and stuff.

780
00:30:21,870 --> 00:30:25,310
But it might be a reasonably
serious or downside to this,

781
00:30:25,310 --> 00:30:28,370
which takes away some of the
ability of the browser to be

782
00:30:28,370 --> 00:30:31,030
this completely transparent
mediator that sits in the

783
00:30:31,030 --> 00:30:33,710
middle, and isn't sort of a--

784
00:30:33,710 --> 00:30:36,150
You don't have to sort of
commercial linkages that you

785
00:30:36,150 --> 00:30:37,630
get with the AuthAssist.

786
00:30:37,630 --> 00:30:40,400
PAUL KINLAN: Yeah.

787
00:30:40,400 --> 00:30:41,440
I don't quite notice yet.

788
00:30:41,440 --> 00:30:45,980
I mean if Origin was going to be
a factor because you didn't

789
00:30:45,980 --> 00:30:49,110
want to see data from certain
services, I'd rather that was

790
00:30:49,110 --> 00:30:51,320
part of your declaration of what
you could say, you could

791
00:30:51,320 --> 00:30:53,790
handle, so that the browser
could just not show your

792
00:30:53,790 --> 00:30:54,970
application on the list.

793
00:30:54,970 --> 00:30:56,710
Because I just think if you
deliver data to some

794
00:30:56,710 --> 00:31:00,590
application, which is then going
to reject you, it's a

795
00:31:00,590 --> 00:31:02,025
bad user experience, right?

796
00:31:02,025 --> 00:31:02,490
GLENN JONES: Oh, definitely.

797
00:31:02,490 --> 00:31:05,610
PAUL KINLAN: So I think the
answer is we don't quite

798
00:31:05,610 --> 00:31:06,190
notice yet.

799
00:31:06,190 --> 00:31:09,510
We're going to talk it out
and see what happens.

800
00:31:09,510 --> 00:31:11,780
But as always, if you have any
feedback and you have any

801
00:31:11,780 --> 00:31:14,400
particularly strong opinions
about kind of whether, for

802
00:31:14,400 --> 00:31:16,850
instance, Origin should happen
or whether the way we're going

803
00:31:16,850 --> 00:31:21,120
to deal with extra metadata,
please just get in the public

804
00:31:21,120 --> 00:31:23,770
Web Intents list on the W3C.

805
00:31:23,770 --> 00:31:27,140
Or if you're trying to work out
how to implement various

806
00:31:27,140 --> 00:31:29,230
parts of the API, we've
also got Google

807
00:31:29,230 --> 00:31:30,280
groups, discussion groups.

808
00:31:30,280 --> 00:31:32,356
I encourage you to,
I think it's

809
00:31:32,356 --> 00:31:34,030
called Web Intents Discuss.

810
00:31:34,030 --> 00:31:37,260
I encourage everyone to go and
view those pages at least

811
00:31:37,260 --> 00:31:41,400
anyway fire us some emails,
email me PaulKinlan.google.com

812
00:31:41,400 --> 00:31:43,860
if you have any questions that
you want to get answers to

813
00:31:43,860 --> 00:31:45,590
that you don't want to
put on your list.

814
00:31:45,590 --> 00:31:47,920
We try and get everything in the
open, but if you want to

815
00:31:47,920 --> 00:31:49,530
talk to me, that's
fine as well.

816
00:31:49,530 --> 00:31:51,900
That's cool.

817
00:31:51,900 --> 00:31:54,840
So let me jump back.

818
00:31:54,840 --> 00:31:57,942
I think we actually covered
quite a lot of ground.

819
00:31:57,942 --> 00:31:59,930
I've actually run out of the
things I was supposed to go

820
00:31:59,930 --> 00:32:02,480
over at some point.

821
00:32:02,480 --> 00:32:02,760
Yeah.

822
00:32:02,760 --> 00:32:07,950
I mean the interesting thing I
find about Web Intents is that

823
00:32:07,950 --> 00:32:10,100
for me, at least, I've learned
a lot about the specification

824
00:32:10,100 --> 00:32:12,590
and standardization process.

825
00:32:12,590 --> 00:32:13,430
It's been pretty good.

826
00:32:13,430 --> 00:32:16,030
Other than that, everyone has
been kind of open in talking

827
00:32:16,030 --> 00:32:17,560
about the things
that they want.

828
00:32:17,560 --> 00:32:20,310
We have on the device group at
least, people wanting to

829
00:32:20,310 --> 00:32:23,420
integrate with devices outside
of your machine.

830
00:32:23,420 --> 00:32:27,345
I did a podcast for SitePoint
last week, and they basically

831
00:32:27,345 --> 00:32:28,990
said, what's the most
exciting thing.

832
00:32:28,990 --> 00:32:31,150
I've learned so much.

833
00:32:31,150 --> 00:32:34,690
We can integrate devices outside
of your machine.

834
00:32:34,690 --> 00:32:39,710
So the idea is like Web Intents,
the scope is very

835
00:32:39,710 --> 00:32:42,616
much firmly in connecting web
applications to other web

836
00:32:42,616 --> 00:32:43,042
applications.

837
00:32:43,042 --> 00:32:43,470
GLENN JONES: Yeah.

838
00:32:43,470 --> 00:32:46,890
We saw how distant the design
push when we were talking

839
00:32:46,890 --> 00:32:48,670
about the different use cases.

840
00:32:48,670 --> 00:32:51,730
And it sort of stymied off at
the beginning of the day when

841
00:32:51,730 --> 00:32:54,240
we were trying to explain to
a lot the UX designers who

842
00:32:54,240 --> 00:32:56,970
turned up to the event all the
different possible ways it

843
00:32:56,970 --> 00:32:57,806
could be used.

844
00:32:57,806 --> 00:33:01,450
That they focused initially on
the whole share bit and the

845
00:33:01,450 --> 00:33:04,260
share buttons, because that's
a really common use case.

846
00:33:04,260 --> 00:33:07,000
But as the day went on, people
became more and more

847
00:33:07,000 --> 00:33:09,370
interested in the idea of
sharing more complex data

848
00:33:09,370 --> 00:33:12,780
between applications and less
interested in the more obvious

849
00:33:12,780 --> 00:33:15,540
sort of sharing in the Intents
in the beginning, which I

850
00:33:15,540 --> 00:33:18,130
found really interesting that
sort of shift as people start

851
00:33:18,130 --> 00:33:19,945
to see the broader picture.

852
00:33:19,945 --> 00:33:23,210
PAUL KINLAN: I always think
the other intents are more

853
00:33:23,210 --> 00:33:24,180
interesting than share.

854
00:33:24,180 --> 00:33:27,420
I mean share is the one that
everyone just says we just

855
00:33:27,420 --> 00:33:29,855
need to sort some way of getting
rid of all of these

856
00:33:29,855 --> 00:33:31,000
buttons, all of these different
options inside

857
00:33:31,000 --> 00:33:34,220
pages, and is Web Intents
going to do that.

858
00:33:34,220 --> 00:33:34,980
I think yes, you can.

859
00:33:34,980 --> 00:33:37,610
I think there's a whole lot of
stuff that has to be solved

860
00:33:37,610 --> 00:33:40,740
around branding, which we talked
about this design push

861
00:33:40,740 --> 00:33:43,930
around branding and kind of let
users understand that the

862
00:33:43,930 --> 00:33:45,410
button that they're going to
click on is going to let them

863
00:33:45,410 --> 00:33:47,890
share to their preferred
network.

864
00:33:47,890 --> 00:33:49,690
Social reinforcement, that was
actually one of the areas that

865
00:33:49,690 --> 00:33:52,170
you talked about quite a lot
was social reinforcement.

866
00:33:52,170 --> 00:33:54,440
The fact that you see that your
friends have done certain

867
00:33:54,440 --> 00:33:57,680
actions on the page is actually
quite influential.

868
00:33:57,680 --> 00:34:01,590
And Web Intents doesn't solve
that, it doesn't say that

869
00:34:01,590 --> 00:34:05,760
well, you'd rather click
on this type of thing.

870
00:34:05,760 --> 00:34:08,610
GLENN JONES: I think if you
look at the share and what

871
00:34:08,610 --> 00:34:13,280
you're going through some of the
plus and minus points of

872
00:34:13,280 --> 00:34:16,230
in terms of moving over to Web
Intents there is a definite

873
00:34:16,230 --> 00:34:19,110
case for doing it, but the
difference between the benefit

874
00:34:19,110 --> 00:34:22,100
you get from a share, I think,
from looking at the benefit

875
00:34:22,100 --> 00:34:24,739
you'll get from some of these
edit-type functionality.

876
00:34:24,739 --> 00:34:26,719
You were just sharing about
moving data from one

877
00:34:26,719 --> 00:34:29,340
application to the editor and
bringing it back again.

878
00:34:29,340 --> 00:34:31,219
Then the benefit is
really massive.

879
00:34:31,219 --> 00:34:33,370
It's quite hard to achieve
it any other way.

880
00:34:33,370 --> 00:34:35,750
Whereas, at the moment, we have
something that sort of

881
00:34:35,750 --> 00:34:38,739
works with the shares of
everybody doesn't like it.

882
00:34:38,739 --> 00:34:42,620
It's not quite what we want and
stuff, but it's sort of

883
00:34:42,620 --> 00:34:46,719
billions of interactions every
year using those bonds.

884
00:34:46,719 --> 00:34:48,080
But with the edit,
that's actually a

885
00:34:48,080 --> 00:34:49,150
completely new game.

886
00:34:49,150 --> 00:34:50,840
And I think, so that's
where it is.

887
00:34:50,840 --> 00:34:52,449
I think there is a difference
between

888
00:34:52,449 --> 00:34:53,389
your perceived benefit.

889
00:34:53,389 --> 00:34:55,840
You can actually see the benefit
we implemented than

890
00:34:55,840 --> 00:34:56,850
the more edit ones.

891
00:34:56,850 --> 00:34:58,430
PAUL KINLAN: Yeah.

892
00:34:58,430 --> 00:35:01,550
I've been honestly surprised
about the uptake of the shared

893
00:35:01,550 --> 00:35:03,420
view and RSS feeds.

894
00:35:03,420 --> 00:35:05,500
I think that's got a
lot of potential.

895
00:35:05,500 --> 00:35:07,000
I'm always talking to people,
and say, what is the most

896
00:35:07,000 --> 00:35:09,240
popular or the best intent.

897
00:35:09,240 --> 00:35:10,580
It's like naming one of
you're kinds, right?

898
00:35:10,580 --> 00:35:12,920
It's like you're my
favorite son.

899
00:35:12,920 --> 00:35:15,630
But it's like the idea behind
it was like well, actually I

900
00:35:15,630 --> 00:35:18,030
think share is the one that
everyone is going to see to

901
00:35:18,030 --> 00:35:18,870
think about.

902
00:35:18,870 --> 00:35:20,750
Actually, things like
edit, pick and save.

903
00:35:20,750 --> 00:35:23,950
The cycle of taking data from
one app, manipulating it, then

904
00:35:23,950 --> 00:35:26,480
sending it back to like Dropbox
or these types of

905
00:35:26,480 --> 00:35:28,520
services is actually
really powerful.

906
00:35:28,520 --> 00:35:30,110
And that's the one that
will be kind of--

907
00:35:30,110 --> 00:35:33,550
Those three will be the ones
that will really be take off.

908
00:35:33,550 --> 00:35:35,240
Obviously, we have to do a
whole lot of work to get

909
00:35:35,240 --> 00:35:36,730
partners, and services,
and everything to

910
00:35:36,730 --> 00:35:37,900
integrate into that.

911
00:35:37,900 --> 00:35:40,510
But when you look at the client,
the browser as the

912
00:35:40,510 --> 00:35:43,060
client, then you only
need services to

913
00:35:43,060 --> 00:35:45,530
fulfill one side of it.

914
00:35:45,530 --> 00:35:48,480
And I think that's where the
view, especially view in RSS

915
00:35:48,480 --> 00:35:51,430
and view in Atom feeds they've
been really popular so far is

916
00:35:51,430 --> 00:35:54,400
that actually you only have to
tell the server like it's

917
00:35:54,400 --> 00:35:56,570
doing great with the browser
rather than integrate with

918
00:35:56,570 --> 00:35:58,250
other applications.

919
00:35:58,250 --> 00:35:59,860
At some point in the future,
people will start to say,

920
00:35:59,860 --> 00:36:04,070
well, we're going to fire a view
feed intent ourselves a

921
00:36:04,070 --> 00:36:06,176
lot rather than have the browser
do it automatically

922
00:36:06,176 --> 00:36:08,030
and all those type of things.

923
00:36:08,030 --> 00:36:09,230
And then those apps will
start to build up.

924
00:36:09,230 --> 00:36:11,020
So you will get more clients
and services, and client

925
00:36:11,020 --> 00:36:13,090
services in clients and
it will grow out.

926
00:36:13,090 --> 00:36:15,860
I think it will be
kind of cool.

927
00:36:15,860 --> 00:36:16,250
Yeah.

928
00:36:16,250 --> 00:36:18,300
I've been kind of just going
on all over the place.

929
00:36:18,300 --> 00:36:21,060
I actually want to
show one thing.

930
00:36:21,060 --> 00:36:24,990
Let me just flip back
to the screen share.

931
00:36:24,990 --> 00:36:27,030
One other piece of information
before we get into questions.

932
00:36:27,030 --> 00:36:28,890
We've got seven questions
to go through.

933
00:36:28,890 --> 00:36:30,295
One of them was a
little bit spam.

934
00:36:30,295 --> 00:36:32,760
Someone tried to in-script
inject on the page.

935
00:36:32,760 --> 00:36:34,460
There it is.

936
00:36:34,460 --> 00:36:35,360
He's deleted.

937
00:36:35,360 --> 00:36:36,120
I hope it didn't work.

938
00:36:36,120 --> 00:36:38,940
I'm pretty sure it
didn't work.

939
00:36:38,940 --> 00:36:41,690
But the thing that happened
recently is Greg Billock one

940
00:36:41,690 --> 00:36:45,680
of our engineers over in Los
Angeles, fixed a bug that I've

941
00:36:45,680 --> 00:36:47,980
had with Web Intents for a long
time, which is that you

942
00:36:47,980 --> 00:36:50,880
can never invoke Web Intent
from a browser action.

943
00:36:50,880 --> 00:36:52,240
And for those who don't know
about Chrome, at least, a

944
00:36:52,240 --> 00:36:55,360
browser action is this
little thing here.

945
00:36:55,360 --> 00:36:58,410
It's at the top right of the
screen, content for the aware

946
00:36:58,410 --> 00:36:59,250
action, essentially.

947
00:36:59,250 --> 00:37:00,710
So I've got a couple.

948
00:37:00,710 --> 00:37:02,880
I made a few.

949
00:37:02,880 --> 00:37:05,460
It's now RSS Feed One, which
is the RSS feed reader, an

950
00:37:05,460 --> 00:37:07,360
extension that Eric wrote.

951
00:37:07,360 --> 00:37:08,180
This is share, right?

952
00:37:08,180 --> 00:37:10,450
This is like a share button,
just an extension.

953
00:37:10,450 --> 00:37:11,560
It's not integrated, right?

954
00:37:11,560 --> 00:37:13,620
It's just an extension
I built with Chrome.

955
00:37:13,620 --> 00:37:16,630
But as you can see, we can fire
the intent, so we could

956
00:37:16,630 --> 00:37:20,615
say, I'll have to check with
Google+ because it's not a

957
00:37:20,615 --> 00:37:21,050
public account.

958
00:37:21,050 --> 00:37:22,880
It's my Web Intents account
which no one ever uses.

959
00:37:22,880 --> 00:37:24,210
So no one will ever
see the demo.

960
00:37:24,210 --> 00:37:28,590

961
00:37:28,590 --> 00:37:30,625
Well, there we go pass the
moderator link and the page we

962
00:37:30,625 --> 00:37:33,660
just shared.

963
00:37:33,660 --> 00:37:40,880
Questions, please from Web
Intents live on air.

964
00:37:40,880 --> 00:37:44,500
So if you see this now, it's
history being made.

965
00:37:44,500 --> 00:37:47,320
We just shared up that part from
the browser, but that's

966
00:37:47,320 --> 00:37:50,090
because Greg implemented this
fix, which allows you to do

967
00:37:50,090 --> 00:37:50,940
these types of things.

968
00:37:50,940 --> 00:37:52,370
GLENN JONES: Is it the same sort
of stuff where it's just

969
00:37:52,370 --> 00:37:53,612
the context menu as well.

970
00:37:53,612 --> 00:37:54,110
You can use--

971
00:37:54,110 --> 00:37:56,260
PAUL KINLAN: So actually this
is an extension I wrote.

972
00:37:56,260 --> 00:38:01,840
This is like the image you can
share like link to images not

973
00:38:01,840 --> 00:38:03,986
actually sharing the raw history
sharing the link to

974
00:38:03,986 --> 00:38:04,630
the image data.

975
00:38:04,630 --> 00:38:05,750
GLENN JONES: Which
is really nice.

976
00:38:05,750 --> 00:38:09,590
Because you could imagine things
like video as well and

977
00:38:09,590 --> 00:38:11,486
all sorts of different
types of media that

978
00:38:11,486 --> 00:38:12,180
could be on the page.

979
00:38:12,180 --> 00:38:13,660
PAUL KINLAN: Yes.

980
00:38:13,660 --> 00:38:18,950
So it can do videos, audio
files, share links, when it

981
00:38:18,950 --> 00:38:20,430
knows it's sharing a
link, not an image.

982
00:38:20,430 --> 00:38:22,930

983
00:38:22,930 --> 00:38:24,090
Oh, there's another
one as well.

984
00:38:24,090 --> 00:38:26,306
Share a link to an image
and link share link.

985
00:38:26,306 --> 00:38:28,200
So I think it's pretty cool.

986
00:38:28,200 --> 00:38:31,130
It opens up quite
a lot of stuff.

987
00:38:31,130 --> 00:38:31,460
Yeah.

988
00:38:31,460 --> 00:38:33,950
It can do videos, RSS
feed, context menu.

989
00:38:33,950 --> 00:38:37,470
Obviously, it can do RSS feeds
because it's a link.

990
00:38:37,470 --> 00:38:39,580
GLENN JONES: It gets to this
point where you can actually

991
00:38:39,580 --> 00:38:43,140
start to share elements of the
page, not just the whole page

992
00:38:43,140 --> 00:38:44,460
itself with context menu.

993
00:38:44,460 --> 00:38:45,820
PAUL KINLAN: And it doesn't have
to actually be built into

994
00:38:45,820 --> 00:38:48,570
the browser it can have an
extension, which so clearly.

995
00:38:48,570 --> 00:38:50,650
GLENN JONES: I could imagine
if you can swipe something

996
00:38:50,650 --> 00:38:52,593
like a piece of text, it doesn't
mean you can have an

997
00:38:52,593 --> 00:38:54,855
equivalent like a share
to a quoting type.

998
00:38:54,855 --> 00:38:56,790
PAUL KINLAN: I mean,
exactly right.

999
00:38:56,790 --> 00:38:59,900
You shared a tumbler as a quote
rather than as a link.

1000
00:38:59,900 --> 00:39:01,370
Those t of things would
be pretty cool.

1001
00:39:01,370 --> 00:39:03,370
So actually, that's why I wanted
to speak with the guys

1002
00:39:03,370 --> 00:39:06,200
who did the microform extension,
because what I was

1003
00:39:06,200 --> 00:39:08,050
thinking of is if you could
detect things on the page

1004
00:39:08,050 --> 00:39:10,303
where there's a person, you
could do a right click context

1005
00:39:10,303 --> 00:39:12,750
to ware menu and then
say, share this to

1006
00:39:12,750 --> 00:39:13,860
your address book.

1007
00:39:13,860 --> 00:39:16,450
Or share this to-- there's
different types of actions.

1008
00:39:16,450 --> 00:39:18,100
That would be really cool.

1009
00:39:18,100 --> 00:39:18,220
OK.

1010
00:39:18,220 --> 00:39:19,280
I'll get in contact.

1011
00:39:19,280 --> 00:39:23,140
So if you're watching this,
I'll go after you.

1012
00:39:23,140 --> 00:39:25,000
So anyway, we've got five
minutes left and we're only

1013
00:39:25,000 --> 00:39:28,480
supposed to be here
for 45 minutes.

1014
00:39:28,480 --> 00:39:29,190
Questions.

1015
00:39:29,190 --> 00:39:30,642
He asked if I know it.

1016
00:39:30,642 --> 00:39:34,080
It seems like a lot of stuff
from anon somewhere.

1017
00:39:34,080 --> 00:39:36,930
seems like a lot of stuff that
pretty much deals on Web

1018
00:39:36,930 --> 00:39:38,780
Intents, first becoming
a standard.

1019
00:39:38,780 --> 00:39:40,460
Could you outline the rough
process of what needs to

1020
00:39:40,460 --> 00:39:43,323
happen before it's accepted,
what state once Web Intents is

1021
00:39:43,323 --> 00:39:46,420
up, and any contribution
feedback we can help to

1022
00:39:46,420 --> 00:39:48,460
accelerate it's approval.

1023
00:39:48,460 --> 00:39:48,830
Wow.

1024
00:39:48,830 --> 00:39:52,040
I So yeah, the process is
pretty interesting.

1025
00:39:52,040 --> 00:39:54,220
We are part of the W3C
process right now.

1026
00:39:54,220 --> 00:39:57,740
We're first public working
draft, which is different when

1027
00:39:57,740 --> 00:39:58,500
editors draft.

1028
00:39:58,500 --> 00:40:00,410
An editor's draft is pretty
much, I think any member can

1029
00:40:00,410 --> 00:40:01,750
make an editor's draft.

1030
00:40:01,750 --> 00:40:03,870
Then it needs to get accepted,
I believe, at least by one

1031
00:40:03,870 --> 00:40:07,605
group that goes to a first
public working draft.

1032
00:40:07,605 --> 00:40:09,960
You then work on it.

1033
00:40:09,960 --> 00:40:10,860
It's a specification.

1034
00:40:10,860 --> 00:40:13,130
It's not standard at that point,
but you're kind of

1035
00:40:13,130 --> 00:40:14,350
working towards that process.

1036
00:40:14,350 --> 00:40:16,526
So we're still at that first
public working draft.

1037
00:40:16,526 --> 00:40:18,110
I think we've got a couple
of months to iron

1038
00:40:18,110 --> 00:40:18,330
all the stuff out.

1039
00:40:18,330 --> 00:40:21,850
And then we have I believe a
corporate consensus later on

1040
00:40:21,850 --> 00:40:24,580
and then a whole lot
of other stuff.

1041
00:40:24,580 --> 00:40:25,840
Just to put it bluntly,
we're at the very

1042
00:40:25,840 --> 00:40:27,510
first, the second stage.

1043
00:40:27,510 --> 00:40:29,000
The very first stage is
just get on there.

1044
00:40:29,000 --> 00:40:30,790
The second stage is where
we are right now.

1045
00:40:30,790 --> 00:40:31,990
GLENN JONES: There's been
a lot of refinement.

1046
00:40:31,990 --> 00:40:32,560
Hasn't it?

1047
00:40:32,560 --> 00:40:33,240
PAUL KINLAN: Yeah.

1048
00:40:33,240 --> 00:40:34,280
There's a lot of refinement.

1049
00:40:34,280 --> 00:40:37,570
So the general process is
feedback that either I capture

1050
00:40:37,570 --> 00:40:39,320
from the Web and kind of
a general sentiment.

1051
00:40:39,320 --> 00:40:42,920
I try and deliver it to the
public intents group, a public

1052
00:40:42,920 --> 00:40:45,180
Web Intents group at
least on the W3C.

1053
00:40:45,180 --> 00:40:47,850
Or we, and I encourage everyone
who kind of want to

1054
00:40:47,850 --> 00:40:51,430
see the API change for a
specific reason or even just

1055
00:40:51,430 --> 00:40:53,630
to say that we support this
kind of way of working all

1056
00:40:53,630 --> 00:40:55,683
those types of things, use
cases and a whole loat of

1057
00:40:55,683 --> 00:41:00,640
other stuff, is to go on the
public Web Intents list on the

1058
00:41:00,640 --> 00:41:02,630
W3C and then just give
us your feedback.

1059
00:41:02,630 --> 00:41:06,210
Because it's like if we
developed this API in complete

1060
00:41:06,210 --> 00:41:09,573
isolation, we might find it
doesn't serve a ninth of some

1061
00:41:09,573 --> 00:41:10,710
of the things that we want.

1062
00:41:10,710 --> 00:41:12,120
A ninth of the developers
don't use it.

1063
00:41:12,120 --> 00:41:14,260
And if they don't use it, we
don't get users, which means

1064
00:41:14,260 --> 00:41:15,850
we don't get any one
benefit from this.

1065
00:41:15,850 --> 00:41:18,380
GLENN JONES: The most useful
thing I've always found to

1066
00:41:18,380 --> 00:41:18,740
have input.

1067
00:41:18,740 --> 00:41:20,680
Because it's quite difficult to
get involved with the spec

1068
00:41:20,680 --> 00:41:23,370
element of it because of the
way it works is to actually

1069
00:41:23,370 --> 00:41:26,200
talk about use cases that you
have specific things.

1070
00:41:26,200 --> 00:41:28,600
And if you can't find out a way
of doing it using what's

1071
00:41:28,600 --> 00:41:30,530
already been said, to
ask the question.

1072
00:41:30,530 --> 00:41:32,390
I have this use case,
I want to do this.

1073
00:41:32,390 --> 00:41:33,690
How would I do it like this?

1074
00:41:33,690 --> 00:41:36,110
Because that actually provides
the developers with a really

1075
00:41:36,110 --> 00:41:39,200
interesting sort of hook
to think about things.

1076
00:41:39,200 --> 00:41:39,630
PAUL KINLAN: Yeah.

1077
00:41:39,630 --> 00:41:40,530
That's what happens, right?

1078
00:41:40,530 --> 00:41:42,540
That's what's happening with the
Origin talk at the moment

1079
00:41:42,540 --> 00:41:44,600
is there a very specific use
case that someone wants to

1080
00:41:44,600 --> 00:41:47,830
solve, which honestly we can't
solve right now in Intents the

1081
00:41:47,830 --> 00:41:49,610
way the specification
is designed.

1082
00:41:49,610 --> 00:41:54,040
So it's like do we either accept
it, reject it, or some

1083
00:41:54,040 --> 00:41:55,040
kind of where in between.

1084
00:41:55,040 --> 00:41:56,860
And that's the whole process
is right now.

1085
00:41:56,860 --> 00:41:58,800
It's like we're at this
stage where we're just

1086
00:41:58,800 --> 00:42:00,250
talking about it.

1087
00:42:00,250 --> 00:42:04,880
The idea of Web Intents being it
needs to be a standard for

1088
00:42:04,880 --> 00:42:09,130
people to implement it, I think
it depends on usage

1089
00:42:09,130 --> 00:42:11,000
inside the browser, different
usage of services.

1090
00:42:11,000 --> 00:42:13,480
Because services kind of adopt
it once it's in one browser.

1091
00:42:13,480 --> 00:42:14,620
But we don't want it to
be a one browser.

1092
00:42:14,620 --> 00:42:17,180
We want it to be across multiple
browsers and that's a

1093
00:42:17,180 --> 00:42:19,370
whole heap of extra work
that needs to go on in

1094
00:42:19,370 --> 00:42:22,380
conversations that happened with
all the browser vendors.

1095
00:42:22,380 --> 00:42:24,850
The thing I would say is that it
is going into WebKit, which

1096
00:42:24,850 --> 00:42:27,480
means that if you're a browser
vendor who implants WebKit or

1097
00:42:27,480 --> 00:42:30,360
imports a WebKit, as long as
you can take this ports

1098
00:42:30,360 --> 00:42:33,130
across, you could, in the
theory, turn on Web Intents

1099
00:42:33,130 --> 00:42:34,270
whether you choose to or not.

1100
00:42:34,270 --> 00:42:35,635
You just have to implement
all the rest of the

1101
00:42:35,635 --> 00:42:37,740
logic behind it.

1102
00:42:37,740 --> 00:42:41,310
So yeah, that's kind of
roughly where we are.

1103
00:42:41,310 --> 00:42:42,060
Next question.

1104
00:42:42,060 --> 00:42:46,190
So Patrick Lord.

1105
00:42:46,190 --> 00:42:48,370
I know that name.

1106
00:42:48,370 --> 00:42:49,950
If Web Intents are meant to
replace shared buttons among

1107
00:42:49,950 --> 00:42:52,970
other things, would there be a
way to know if you've already

1108
00:42:52,970 --> 00:42:55,670
shared something?

1109
00:42:55,670 --> 00:42:58,000
For example, if I plus one
something, the plus one button

1110
00:42:58,000 --> 00:42:58,990
shows up red.

1111
00:42:58,990 --> 00:43:01,830
Are there plans in Web Intents
to support that?

1112
00:43:01,830 --> 00:43:04,630
So I kind of answered that
before where we didn't have--

1113
00:43:04,630 --> 00:43:07,385
Web Intents doesn't kind of do
that social proof and remind

1114
00:43:07,385 --> 00:43:08,670
and other things that
you've done.

1115
00:43:08,670 --> 00:43:11,690
It's not designed to actually
say well, you know what,

1116
00:43:11,690 --> 00:43:13,070
you've shared this
link before.

1117
00:43:13,070 --> 00:43:15,030
You might not want to share
it again and all

1118
00:43:15,030 --> 00:43:16,380
those types of things.

1119
00:43:16,380 --> 00:43:21,280
The thing I would say and your
opinion is completely valid

1120
00:43:21,280 --> 00:43:24,910
and appreciated, is that I think
there are the server,

1121
00:43:24,910 --> 00:43:28,660
services and add this on this
recently, where add this with

1122
00:43:28,660 --> 00:43:31,580
integrated with Web Intents
as well as the services.

1123
00:43:31,580 --> 00:43:34,070
But they still provide that
aggregation and social proof.

1124
00:43:34,070 --> 00:43:37,300
So it's still a widget that does
kind of all the work for

1125
00:43:37,300 --> 00:43:40,710
account on what's happening on
the social web, for instance.

1126
00:43:40,710 --> 00:43:42,530
But that's their service.

1127
00:43:42,530 --> 00:43:44,840
They provide a whole lot of
services outside of the just

1128
00:43:44,840 --> 00:43:46,710
share and people think they're
sharing services.

1129
00:43:46,710 --> 00:43:48,740
It's like they're not just that,
they're analytics, using

1130
00:43:48,740 --> 00:43:52,690
management metrics and all
those types of things.

1131
00:43:52,690 --> 00:43:53,943
I personally think that's
where that's going to

1132
00:43:53,943 --> 00:43:54,260
live and still is.

1133
00:43:54,260 --> 00:43:56,130
GLENN JONES: I think there is
an answer to this particular

1134
00:43:56,130 --> 00:43:58,540
question in that there's two
ways this could happen.

1135
00:43:58,540 --> 00:44:00,000
So when this [INAUDIBLE]

1136
00:44:00,000 --> 00:44:03,220
goes off, you're actually within
Web Intents [INAUDIBLE]

1137
00:44:03,220 --> 00:44:05,010
it's just not giving
the return.

1138
00:44:05,010 --> 00:44:08,300
There should be like a success
return back to the site.

1139
00:44:08,300 --> 00:44:11,140
And at that point, you as
the site can recall that

1140
00:44:11,140 --> 00:44:13,040
information that that's
being done.

1141
00:44:13,040 --> 00:44:15,290
And then mark that button,
because the button is actually

1142
00:44:15,290 --> 00:44:16,490
controlled by you.

1143
00:44:16,490 --> 00:44:20,010
So you kick it off, you design
it, it's got your images or

1144
00:44:20,010 --> 00:44:22,980
text in it, and hook in the
intents by using the

1145
00:44:22,980 --> 00:44:25,630
JavaScript onClick or whatever
you're going to use.

1146
00:44:25,630 --> 00:44:28,600
So you could do it that way or
a slightly worse way would be

1147
00:44:28,600 --> 00:44:29,830
you don't get the
success just to

1148
00:44:29,830 --> 00:44:31,590
actually recall from anywhere.

1149
00:44:31,590 --> 00:44:32,760
Just recall to click.

1150
00:44:32,760 --> 00:44:35,040
That doesn't say that it's
actually successfully been

1151
00:44:35,040 --> 00:44:36,360
done, but at least
you know that's

1152
00:44:36,360 --> 00:44:37,000
someone has clicked there.

1153
00:44:37,000 --> 00:44:39,515
So I think there is mechanisms
to do it.

1154
00:44:39,515 --> 00:44:40,600
PAUL KINLAN: Yeah.

1155
00:44:40,600 --> 00:44:41,170
I think there is.

1156
00:44:41,170 --> 00:44:42,190
And I think there will
be services that

1157
00:44:42,190 --> 00:44:43,620
pop up that do it.

1158
00:44:43,620 --> 00:44:46,080
I think, at least, are good
example of their entering Web

1159
00:44:46,080 --> 00:44:49,430
Intents because it's like built
into the platform, but

1160
00:44:49,430 --> 00:44:54,830
at the same time sharing isn't
their main, but they'll tell

1161
00:44:54,830 --> 00:44:55,620
you what their main
business is.

1162
00:44:55,620 --> 00:44:58,340
But it's like it's the rest of
what they offer is the thing

1163
00:44:58,340 --> 00:45:01,850
that they do, analytics,
metrics, all of

1164
00:45:01,850 --> 00:45:02,760
those types of things.

1165
00:45:02,760 --> 00:45:05,950
Just the facility to share
is one very small aspect.

1166
00:45:05,950 --> 00:45:15,300
It's a kind of interest actually
this type of new +1

1167
00:45:15,300 --> 00:45:17,970
something, you've shared this,
I think that's very specific

1168
00:45:17,970 --> 00:45:19,790
just to the share intent.

1169
00:45:19,790 --> 00:45:23,770
I've never seen maybe there is,
maybe there isn't safe,

1170
00:45:23,770 --> 00:45:25,070
you've already saved this.

1171
00:45:25,070 --> 00:45:25,290
Great.

1172
00:45:25,290 --> 00:45:27,320
But You might want to save it
again to a different service

1173
00:45:27,320 --> 00:45:27,813
all that type of stuff.

1174
00:45:27,813 --> 00:45:30,560
So I can't imagine some other
intent using this type of--

1175
00:45:30,560 --> 00:45:30,760
GLENN JONES: No.

1176
00:45:30,760 --> 00:45:32,090
Because they don't use
the same sort.

1177
00:45:32,090 --> 00:45:35,045
When we talked earlier about
social proof, that's a bit

1178
00:45:35,045 --> 00:45:36,440
like the where you get the like
the little icons of the

1179
00:45:36,440 --> 00:45:37,863
people who have already
done this in

1180
00:45:37,863 --> 00:45:39,210
part in social network.

1181
00:45:39,210 --> 00:45:41,510
It's not basically an
encouragement or a number that

1182
00:45:41,510 --> 00:45:43,159
tells you x number of people
have done this.

1183
00:45:43,159 --> 00:45:45,150
It's a way of encouraging
you to do it.

1184
00:45:45,150 --> 00:45:45,890
And you're right.

1185
00:45:45,890 --> 00:45:50,542
At the moment, I've only ever
seen it used in the terms of

1186
00:45:50,542 --> 00:45:53,430
the share-type implementations
or the Likes and stuff like

1187
00:45:53,430 --> 00:45:55,746
that, which are a very
similar thing.

1188
00:45:55,746 --> 00:45:57,690
PAUL KINLAN: We're actually
really running out of time.

1189
00:45:57,690 --> 00:46:00,470
So I'm really sorry
about this.

1190
00:46:00,470 --> 00:46:02,770
So how will the UX work for
Chrome packaged apps?

1191
00:46:02,770 --> 00:46:06,140
Will this selected external app
open inside the app itself

1192
00:46:06,140 --> 00:46:09,920
or hand folks over to a separate
browser window, and

1193
00:46:09,920 --> 00:46:11,170
is app not as magical?

1194
00:46:11,170 --> 00:46:14,420

1195
00:46:14,420 --> 00:46:17,420
or will there be a way
to send that intent

1196
00:46:17,420 --> 00:46:18,740
on to packaged apps?

1197
00:46:18,740 --> 00:46:19,250
So yeah.

1198
00:46:19,250 --> 00:46:21,690
We got this thing called
Explicit Intents, b which

1199
00:46:21,690 --> 00:46:24,520
allow you to deliver data
to a known application.

1200
00:46:24,520 --> 00:46:26,575
I know you've got a whole load
of question about suggestions,

1201
00:46:26,575 --> 00:46:28,918
which I don't believe we've
implanted just yet.

1202
00:46:28,918 --> 00:46:29,810
GLENN JONES: We'll leave
that for the day.

1203
00:46:29,810 --> 00:46:31,148
PAUL KINLAN: Yes.

1204
00:46:31,148 --> 00:46:34,570
But explicit intent they tend
to deliver data from one app

1205
00:46:34,570 --> 00:46:38,880
to another directly if
you know about it.

1206
00:46:38,880 --> 00:46:41,080
The way it's going to work in
packaged apps, I mean, the way

1207
00:46:41,080 --> 00:46:42,240
it actually works in
Chrome now is it

1208
00:46:42,240 --> 00:46:43,620
always opens a new tab.

1209
00:46:43,620 --> 00:46:46,290
If it's a package app, the new
style packaged app is showed

1210
00:46:46,290 --> 00:46:48,536
up in a brand new instance of
the application, because you

1211
00:46:48,536 --> 00:46:49,980
won't have any browser Chrome.

1212
00:46:49,980 --> 00:46:54,230
So yes is the answer.

1213
00:46:54,230 --> 00:46:56,870
Is there a shim or a polyfill
for Web Intents?

1214
00:46:56,870 --> 00:46:57,900
I think the answer is no.

1215
00:46:57,900 --> 00:46:59,470
How could we collaborate
to make one?

1216
00:46:59,470 --> 00:47:01,170
There is one, webintents.org/w
ebintents.min.js.

1217
00:47:01,170 --> 00:47:04,850

1218
00:47:04,850 --> 00:47:07,360
It tries to emulate Web
Intents, the API.

1219
00:47:07,360 --> 00:47:08,060
It needs update.

1220
00:47:08,060 --> 00:47:09,990
It needs some local Firefox.

1221
00:47:09,990 --> 00:47:12,640
I had to turn on Security
Policy, which broke in

1222
00:47:12,640 --> 00:47:15,280
Firefox, but still worked
in Chrome and WebKit.

1223
00:47:15,280 --> 00:47:17,930
The interesting thing is the
Web Intents shim actually

1224
00:47:17,930 --> 00:47:21,440
worked on Android, iPhone,
Opera as well.

1225
00:47:21,440 --> 00:47:25,010
So there is a shim, Github
account, github.com/paulk

1226
00:47:25,010 --> 00:47:26,260
inlan/webintents.

1227
00:47:26,260 --> 00:47:28,780

1228
00:47:28,780 --> 00:47:30,040
I would love your support.

1229
00:47:30,040 --> 00:47:31,880
If you can offer any support
for building out the

1230
00:47:31,880 --> 00:47:33,660
shim, please do.

1231
00:47:33,660 --> 00:47:37,580
I'm really looking forward
to getting some.

1232
00:47:37,580 --> 00:47:41,060
And this is the last question
before I'll get kicked off.

1233
00:47:41,060 --> 00:47:43,310
Is most development around Web
Intents focused on the Chrome

1234
00:47:43,310 --> 00:47:47,260
extension or the cross browser
pure JS implementation?

1235
00:47:47,260 --> 00:47:49,990
Can I happily work and use Web
Intents from Firefox and with

1236
00:47:49,990 --> 00:47:51,470
Chrome browser at the moment?

1237
00:47:51,470 --> 00:47:52,660
It's both.

1238
00:47:52,660 --> 00:47:55,280
We can offer a good experience
inside Chrome right now and

1239
00:47:55,280 --> 00:47:58,510
kind of prototype and rapidly
develop things that aren't

1240
00:47:58,510 --> 00:48:01,520
purely available in
the open web.

1241
00:48:01,520 --> 00:48:02,290
We've landed the intent tag.

1242
00:48:02,290 --> 00:48:04,750
The intent tag actually exists
in the Web Intents source

1243
00:48:04,750 --> 00:48:06,840
space, it's just not enabled.

1244
00:48:06,840 --> 00:48:08,000
You can't run it inside there.

1245
00:48:08,000 --> 00:48:10,440
If we introduce these things,
and we get a hold of

1246
00:48:10,440 --> 00:48:13,220
developers building on the
public open web, then it's

1247
00:48:13,220 --> 00:48:15,160
harder to take back
those things.

1248
00:48:15,160 --> 00:48:17,390
You can still take back those
changes, but it's harder.

1249
00:48:17,390 --> 00:48:19,780
So inside, there's a relatively
closed ecosystem as

1250
00:48:19,780 --> 00:48:21,160
opposed inside the Chrome--

1251
00:48:21,160 --> 00:48:22,990
GLENN JONES: Can you switch on
the dev flag at the moment,

1252
00:48:22,990 --> 00:48:24,290
the intent tag?

1253
00:48:24,290 --> 00:48:25,540
PAUL KINLAN: Not the
intent tag, no.

1254
00:48:25,540 --> 00:48:28,460
It's a compile-type flag.

1255
00:48:28,460 --> 00:48:29,430
There's a whole lot of
things we have to

1256
00:48:29,430 --> 00:48:30,080
work out around that.

1257
00:48:30,080 --> 00:48:31,210
So that's not why it's
not available

1258
00:48:31,210 --> 00:48:33,000
just there, just yet.

1259
00:48:33,000 --> 00:48:35,860
To counteract that, for other
browsers, we do have the shim.

1260
00:48:35,860 --> 00:48:37,720
Like I said, we need as much
help as possible to kind of

1261
00:48:37,720 --> 00:48:39,130
keep that up to date.

1262
00:48:39,130 --> 00:48:43,790
So please forward to my
repository, follow me as well,

1263
00:48:43,790 --> 00:48:45,420
and we'll go from there.

1264
00:48:45,420 --> 00:48:48,900
So that's it.

1265
00:48:48,900 --> 00:48:50,420
I believe that is it.

1266
00:48:50,420 --> 00:48:52,610
I would like to thank you
very much for watching.

1267
00:48:52,610 --> 00:48:54,040
I'd like to thank Glenn
for participating.

1268
00:48:54,040 --> 00:48:56,000
I know this is very
last minute.

1269
00:48:56,000 --> 00:48:58,190
He came along for a chat and
said, you know what?

1270
00:48:58,190 --> 00:48:59,130
We're going to go on
air in a minute.

1271
00:48:59,130 --> 00:48:59,390
Do you want to join in.

1272
00:48:59,390 --> 00:48:59,980
GLENN JONES: That's fine.

1273
00:48:59,980 --> 00:49:01,605
We had our chat on air.

1274
00:49:01,605 --> 00:49:03,680
PAUL KINLAN: And so that's
pretty cool.

1275
00:49:03,680 --> 00:49:04,130
So yes.

1276
00:49:04,130 --> 00:49:04,850
Thank you very much.

1277
00:49:04,850 --> 00:49:07,230
I will be back again in two
weeks, but I'll be in America

1278
00:49:07,230 --> 00:49:08,820
next time rather than London.

1279
00:49:08,820 --> 00:49:11,360
So thank you and good bye.

1280
00:49:11,360 --> 00:49:12,610
GLENN JONES: Thank you.

1281
00:49:12,610 --> 00:49:21,700

