WEBVTT

1
00:00:00.000 --> 00:00:26.288

2
00:00:26.288 --> 00:00:28.530
MALE SPEAKER: Shanghai
GDG is a very

3
00:00:28.530 --> 00:00:30.600
interesting developer community.

4
00:00:30.600 --> 00:00:31.430
FEMALE SPEAKER: I'm
glad somebody

5
00:00:31.430 --> 00:00:32.460
has asked this question.

6
00:00:32.460 --> 00:00:33.800
MALE SPEAKER: This is where
the magic happens.

7
00:00:33.800 --> 00:00:35.072
FEMALE SPEAKER: This
is primarily a

8
00:00:35.072 --> 00:00:35.660
question-and-answer show.

9
00:00:35.660 --> 00:00:38.050
So if any of you out there would
like to ask questions--

10
00:00:38.050 --> 00:00:48.163

11
00:00:48.163 --> 00:00:49.040
PETE LEPAGE: All right.

12
00:00:49.040 --> 00:00:49.870
Well, welcome.

13
00:00:49.870 --> 00:00:50.960
Hey.

14
00:00:50.960 --> 00:00:55.770
So I'm Pete LePage and welcome
to the first of a series of

15
00:00:55.770 --> 00:00:58.230
Chrome Mobile Hangouts.

16
00:00:58.230 --> 00:00:59.440
With me here, we've got Boris.

17
00:00:59.440 --> 00:01:00.560
I'll let you introduce
yourself.

18
00:01:00.560 --> 00:01:02.080
BORIS SMUS: Hey, I'm Boris.

19
00:01:02.080 --> 00:01:05.160
We're both from Chrome Developer
Relations, so mostly

20
00:01:05.160 --> 00:01:06.340
working on mobile these days.

21
00:01:06.340 --> 00:01:07.280
PETE LEPAGE: Yeah.

22
00:01:07.280 --> 00:01:12.650
So back at Google I/O, Chrome
for Android and Chrome for iOS

23
00:01:12.650 --> 00:01:14.140
became available.

24
00:01:14.140 --> 00:01:17.620
And we're really excited about
both of those, because it

25
00:01:17.620 --> 00:01:21.840
really brings a great browser
to the mobile environments.

26
00:01:21.840 --> 00:01:24.730
So today, we want to talk about
a couple of things that

27
00:01:24.730 --> 00:01:27.690
we think is pretty
interesting.

28
00:01:27.690 --> 00:01:30.000
Boris is going to start off
talking a little bit about

29
00:01:30.000 --> 00:01:31.470
high DPI stuff.

30
00:01:31.470 --> 00:01:36.640
So if you've been building web
applications or websites, and

31
00:01:36.640 --> 00:01:41.480
you've used them on either one
of the new MacBooks that have

32
00:01:41.480 --> 00:01:46.400
Retina display or on a
iPad3, you've seen

33
00:01:46.400 --> 00:01:47.730
the high DPI stuff.

34
00:01:47.730 --> 00:01:50.320
And the web looks a little bit
different if you're using one

35
00:01:50.320 --> 00:01:53.400
of those devices than
something else.

36
00:01:53.400 --> 00:01:55.440
And then I'm going to talk a
little bit about some of the

37
00:01:55.440 --> 00:02:00.010
debugging tools that you can use
on Chrome for Android when

38
00:02:00.010 --> 00:02:02.290
building these sites.

39
00:02:02.290 --> 00:02:03.090
And then we'll take
some of your

40
00:02:03.090 --> 00:02:05.500
questions through the moderator.

41
00:02:05.500 --> 00:02:07.240
So Boris, I'll pass
it over to you.

42
00:02:07.240 --> 00:02:09.690
You just had an article
about high DPI--

43
00:02:09.690 --> 00:02:10.870
BORIS SMUS: We published
an article this

44
00:02:10.870 --> 00:02:13.450
morning, "HTML5 Rocks".

45
00:02:13.450 --> 00:02:15.380
Many thanks to Alex who
stayed up late in

46
00:02:15.380 --> 00:02:17.440
Sydney to get that out.

47
00:02:17.440 --> 00:02:21.870
So I just want to sort of
be more specific here.

48
00:02:21.870 --> 00:02:25.400
The high DPI problem doesn't
just apply to iPads and

49
00:02:25.400 --> 00:02:29.330
MacBook Pros with the
new Retina displays.

50
00:02:29.330 --> 00:02:32.010
It's actually a general
problem on the web.

51
00:02:32.010 --> 00:02:35.640
There's a lot of devices that
now have device pixel ratios

52
00:02:35.640 --> 00:02:37.420
of greater than one.

53
00:02:37.420 --> 00:02:38.720
I'll talk a little bit
more about what

54
00:02:38.720 --> 00:02:39.880
that means in a second.

55
00:02:39.880 --> 00:02:42.070
But it's an Android issue.

56
00:02:42.070 --> 00:02:44.310
It's a Windows Phone 8 issue.

57
00:02:44.310 --> 00:02:47.500
And it's an iPhone issue
and iPad issue.

58
00:02:47.500 --> 00:02:50.770
So this high DPI question needs
to be solved generally

59
00:02:50.770 --> 00:02:53.620
on the web and is being
worked on generally.

60
00:02:53.620 --> 00:02:56.800
So there's this big thing about
Retina displays, but

61
00:02:56.800 --> 00:02:57.780
that's just branding.

62
00:02:57.780 --> 00:02:58.070
Right?

63
00:02:58.070 --> 00:02:59.090
PETE LEPAGE: Ah, OK.

64
00:02:59.090 --> 00:03:03.420
And it's also more than just,
OK, say, I've got this high

65
00:03:03.420 --> 00:03:07.760
DPI image or a regular, but
there's also something about

66
00:03:07.760 --> 00:03:10.900
choosing images based on screen
size too in there.

67
00:03:10.900 --> 00:03:11.420
BORIS SMUS: Yeah.

68
00:03:11.420 --> 00:03:13.040
It gets a little complicated,
actually.

69
00:03:13.040 --> 00:03:15.710

70
00:03:15.710 --> 00:03:18.490
Well, basically what you want to
do is you want to serve the

71
00:03:18.490 --> 00:03:21.590
best quality image as
quickly as possible.

72
00:03:21.590 --> 00:03:24.405
But the thing is what quality
means sort of depends.

73
00:03:24.405 --> 00:03:25.780
Right?

74
00:03:25.780 --> 00:03:28.770
You have like just pure
resolution, like crispness of

75
00:03:28.770 --> 00:03:29.800
the pixels.

76
00:03:29.800 --> 00:03:33.180
And then you have things like
for a small display, you want

77
00:03:33.180 --> 00:03:36.160
to show up maybe a different
image than for large display.

78
00:03:36.160 --> 00:03:40.490
Like say you have Obama speaking
at some conference or

79
00:03:40.490 --> 00:03:42.810
something like that, maybe if
you have a large screen,

80
00:03:42.810 --> 00:03:44.220
you'll show the pedestal,
you'll show

81
00:03:44.220 --> 00:03:45.800
Obama's face as well.

82
00:03:45.800 --> 00:03:47.840
But on a small screen, you
might just show his face,

83
00:03:47.840 --> 00:03:48.890
because there's not
much real estate.

84
00:03:48.890 --> 00:03:49.550
PETE LEPAGE: Yeah.

85
00:03:49.550 --> 00:03:52.220
I think in your article that
was just published--

86
00:03:52.220 --> 00:03:54.060
and we can put the
link up for that.

87
00:03:54.060 --> 00:03:56.810
But in that article, if you
scroll down, you actually have

88
00:03:56.810 --> 00:03:59.690
a really good visual description
of that, where in

89
00:03:59.690 --> 00:04:04.090
the foreground, you've got like
person and all of the

90
00:04:04.090 --> 00:04:06.160
background image, like where
they're standing, where

91
00:04:06.160 --> 00:04:07.400
they're talking.

92
00:04:07.400 --> 00:04:09.750
But on a small screen
display, that person

93
00:04:09.750 --> 00:04:11.560
just gets lost, right?

94
00:04:11.560 --> 00:04:14.300
And you don't want to
show all of that.

95
00:04:14.300 --> 00:04:14.730
BORIS SMUS: Right.

96
00:04:14.730 --> 00:04:16.360
I actually don't have
that in the article.

97
00:04:16.360 --> 00:04:19.400
But the article more focuses
on just the resolution.

98
00:04:19.400 --> 00:04:20.640
PETE LEPAGE: Oh, OK.

99
00:04:20.640 --> 00:04:21.399
I might be thinking of a--

100
00:04:21.399 --> 00:04:21.970
BORIS SMUS: That was
something else.

101
00:04:21.970 --> 00:04:22.840
PETE LEPAGE: --different
article.

102
00:04:22.840 --> 00:04:23.280
BORIS SMUS: Yeah.

103
00:04:23.280 --> 00:04:25.840
Another article, I'm
sure, had that.

104
00:04:25.840 --> 00:04:27.250
I know the exact image,
actually,

105
00:04:27.250 --> 00:04:28.680
you're talking about.

106
00:04:28.680 --> 00:04:34.920
But anyway, the way this whole
resolution aspect works, if

107
00:04:34.920 --> 00:04:41.920
you ignore the art direction
of bits, it's sort of

108
00:04:41.920 --> 00:04:45.230
complicated on the web, because
there's so many

109
00:04:45.230 --> 00:04:48.000
different kinds of browsers
out there and so many

110
00:04:48.000 --> 00:04:49.220
different devices.

111
00:04:49.220 --> 00:04:53.430
Like on iOS, for example, you
just have 1x and 2x displays.

112
00:04:53.430 --> 00:04:54.130
PETE LEPAGE: OK.

113
00:04:54.130 --> 00:04:56.960
So when you're talking
about 1x and 2x,

114
00:04:56.960 --> 00:04:57.970
what does that mean?

115
00:04:57.970 --> 00:04:58.460
Can you--

116
00:04:58.460 --> 00:04:59.260
BORIS SMUS: Sure.

117
00:04:59.260 --> 00:05:02.730
So basically a 1x image--

118
00:05:02.730 --> 00:05:04.330
well, let's talk about
displays first.

119
00:05:04.330 --> 00:05:08.220
A 1x display has
pixel density.

120
00:05:08.220 --> 00:05:10.630
That's whatever the display's
pixel density is.

121
00:05:10.630 --> 00:05:11.110
PETE LEPAGE: OK.

122
00:05:11.110 --> 00:05:11.680
So if I've got--

123
00:05:11.680 --> 00:05:15.700
BORIS SMUS: For an iPhone, the
pixel density of the iPhone

124
00:05:15.700 --> 00:05:23.150
3G, the pre-4 one, is
like 163, actually.

125
00:05:23.150 --> 00:05:24.980
PETE LEPAGE: So that's
the pixel density.

126
00:05:24.980 --> 00:05:28.400
So like in one inch, there's
about 163 pixels.

127
00:05:28.400 --> 00:05:30.210
BORIS SMUS: Exactly 163.

128
00:05:30.210 --> 00:05:34.170
Well, about on average.

129
00:05:34.170 --> 00:05:38.890
So with a 2x display, there's
twice as many pixels in the

130
00:05:38.890 --> 00:05:39.660
same space.

131
00:05:39.660 --> 00:05:42.330
PETE LEPAGE: So roughly,
there's like 320

132
00:05:42.330 --> 00:05:42.590
pixels in an inch.

133
00:05:42.590 --> 00:05:44.090
BORIS SMUS: 326.

134
00:05:44.090 --> 00:05:48.160
So that's the 2x display
of a iPhone.

135
00:05:48.160 --> 00:05:52.260
Of course, the actual number of
pixels depends on what the

136
00:05:52.260 --> 00:05:54.020
initial 1x was.

137
00:05:54.020 --> 00:05:56.790
So like an iPad is slightly
less dense.

138
00:05:56.790 --> 00:06:00.920
A MacBook Pro is even
less dense.

139
00:06:00.920 --> 00:06:02.905
But the 2x equivalents
are doubled.

140
00:06:02.905 --> 00:06:03.940
PETE LEPAGE: OK.

141
00:06:03.940 --> 00:06:04.510
All right.

142
00:06:04.510 --> 00:06:06.450
BORIS SMUS: So that's the
way that that works.

143
00:06:06.450 --> 00:06:11.030
It makes it really simple
for Apple developers

144
00:06:11.030 --> 00:06:13.050
to solve this problem.

145
00:06:13.050 --> 00:06:15.990
Android also has a
similar concept.

146
00:06:15.990 --> 00:06:20.250
But because of the variable
display densities,

147
00:06:20.250 --> 00:06:21.950
there's no 2x notion.

148
00:06:21.950 --> 00:06:24.385
So you sort of need to cover
the whole gamut of

149
00:06:24.385 --> 00:06:24.890
possibilities.

150
00:06:24.890 --> 00:06:28.500
PETE LEPAGE: So does that mean
that like it might be 1.5, or

151
00:06:28.500 --> 00:06:30.155
1.3, or 1.--

152
00:06:30.155 --> 00:06:30.840
BORIS SMUS: Exactly.

153
00:06:30.840 --> 00:06:33.250
PETE LEPAGE: It could be
anywhere in that number.

154
00:06:33.250 --> 00:06:34.300
BORIS SMUS: Yeah.

155
00:06:34.300 --> 00:06:37.720
I mean we're probably going to
start seeing greater than 2x

156
00:06:37.720 --> 00:06:41.850
as well going forward from--
well, maybe not from Apple.

157
00:06:41.850 --> 00:06:43.120
I can't speculate there.

158
00:06:43.120 --> 00:06:48.310
But it's certainly likely to
increase up to the point where

159
00:06:48.310 --> 00:06:50.040
you can't see any
pixels anymore.

160
00:06:50.040 --> 00:06:51.020
PETE LEPAGE: That would
be really cool.

161
00:06:51.020 --> 00:06:51.970
That would be really neat.

162
00:06:51.970 --> 00:06:53.220
BORIS SMUS: We're getting
close already.

163
00:06:53.220 --> 00:06:56.430

164
00:06:56.430 --> 00:07:00.460
You have to look really
hard to find them.

165
00:07:00.460 --> 00:07:02.610
So that's sort of the story.

166
00:07:02.610 --> 00:07:05.520
Android solves the problem by
letting you provide like four

167
00:07:05.520 --> 00:07:07.220
different images.

168
00:07:07.220 --> 00:07:12.030
So you have a very small,
medium, biggish, and extra,

169
00:07:12.030 --> 00:07:12.480
extra large--

170
00:07:12.480 --> 00:07:15.030
PETE LEPAGE: Now this is if
you're doing an Android native

171
00:07:15.030 --> 00:07:15.865
application.

172
00:07:15.865 --> 00:07:18.273
So that doesn't really apply
for web developers.

173
00:07:18.273 --> 00:07:19.340
BORIS SMUS: No.

174
00:07:19.340 --> 00:07:24.250
I'm trying to set
the stage here.

175
00:07:24.250 --> 00:07:27.030
And on the web, the whole
problem reduces

176
00:07:27.030 --> 00:07:31.050
to CSS scaled pixels.

177
00:07:31.050 --> 00:07:35.410
So the way that works is
essentially the spec provides

178
00:07:35.410 --> 00:07:36.820
an angular size.

179
00:07:36.820 --> 00:07:41.020
The spec defines pixels
to be an angular unit.

180
00:07:41.020 --> 00:07:42.830
It's a little confusing.

181
00:07:42.830 --> 00:07:43.920
But you should read
the article.

182
00:07:43.920 --> 00:07:46.000
I think it explains
it pretty well.

183
00:07:46.000 --> 00:07:49.420
The basic idea though is a
pixel is a certain angle.

184
00:07:49.420 --> 00:07:51.935
So depending on how
close or how far--

185
00:07:51.935 --> 00:07:52.750
PETE LEPAGE: Oh.

186
00:07:52.750 --> 00:07:55.210
When I read it, I was trying to
figure out, OK, an angle to

187
00:07:55.210 --> 00:07:56.310
me is sort of this way.

188
00:07:56.310 --> 00:07:59.050
But it's more the angle
this way coming out of

189
00:07:59.050 --> 00:08:00.110
the screen at you.

190
00:08:00.110 --> 00:08:01.705
BORIS SMUS: No, it's your
viewing angle actually, not

191
00:08:01.705 --> 00:08:02.720
the screen.

192
00:08:02.720 --> 00:08:05.910
So if the screen is in front of
me, then I have a certain

193
00:08:05.910 --> 00:08:06.620
viewing angle.

194
00:08:06.620 --> 00:08:09.570
And what this means is basically
the pixels' physical

195
00:08:09.570 --> 00:08:14.560
size depends on how far the
screen is from me, So this is

196
00:08:14.560 --> 00:08:16.502
the spec definition.

197
00:08:16.502 --> 00:08:20.320
PETE LEPAGE: Now, this gets kind
of confusing and a pain

198
00:08:20.320 --> 00:08:21.790
for developers.

199
00:08:21.790 --> 00:08:23.410
BORIS SMUS: Sort of.

200
00:08:23.410 --> 00:08:25.330
I think in practice,
it's a lot simpler.

201
00:08:25.330 --> 00:08:25.960
PETE LEPAGE: Good.

202
00:08:25.960 --> 00:08:29.220
BORIS SMUS: So the way this
works, the specs sets this

203
00:08:29.220 --> 00:08:30.740
angular pixel.

204
00:08:30.740 --> 00:08:36.260
And then a browser vendor can
assign the device pixel ratio,

205
00:08:36.260 --> 00:08:40.659
which scales virtual pixels
into this physical pixel.

206
00:08:40.659 --> 00:08:44.340
So essentially, what device
pixel ratio does is it scales

207
00:08:44.340 --> 00:08:47.800
every CSS pixel to the
physical size.

208
00:08:47.800 --> 00:08:50.520
And at that point, you basically
don't even need to

209
00:08:50.520 --> 00:08:53.040
know what the spec says.

210
00:08:53.040 --> 00:08:56.350
PETE LEPAGE: I like that because
this is sounding more

211
00:08:56.350 --> 00:08:57.980
complex than I think
it should be.

212
00:08:57.980 --> 00:08:58.675
BORIS SMUS: Right.

213
00:08:58.675 --> 00:09:01.910
But with device pixel ratio, you
kind of abstract yourself

214
00:09:01.910 --> 00:09:04.810
from the gory details of the
spec, which I go into if

215
00:09:04.810 --> 00:09:05.580
you're interested.

216
00:09:05.580 --> 00:09:07.730
Take a look at the article.

217
00:09:07.730 --> 00:09:10.630
There's even a little diagram
to illustrate that.

218
00:09:10.630 --> 00:09:17.550
But yeah, basically, the
pixels are scaled.

219
00:09:17.550 --> 00:09:20.080
But you still have
the problem of--

220
00:09:20.080 --> 00:09:22.190
essentially, if you're scaling
pixels, then your images are

221
00:09:22.190 --> 00:09:24.040
being scaled.

222
00:09:24.040 --> 00:09:27.570
And if you scale images to be
large, then suddenly you have

223
00:09:27.570 --> 00:09:28.980
really crappy-looking--

224
00:09:28.980 --> 00:09:30.010
PETE LEPAGE: Lower quality.

225
00:09:30.010 --> 00:09:31.800
BORIS SMUS: --lower
quality images.

226
00:09:31.800 --> 00:09:35.530
So the question then is
how do you serve the

227
00:09:35.530 --> 00:09:39.070
right size of image?

228
00:09:39.070 --> 00:09:41.960
And there's many ways.

229
00:09:41.960 --> 00:09:44.340
I mean, one solution is you
just serve high DPI images

230
00:09:44.340 --> 00:09:45.060
everywhere.

231
00:09:45.060 --> 00:09:49.640
PETE LEPAGE: And that's
fantastic for anybody who's on

232
00:09:49.640 --> 00:09:53.460
a high-speed, dedicated internet
connection who

233
00:09:53.460 --> 00:09:56.650
doesn't care about their
bandwidth, which is probably

234
00:09:56.650 --> 00:09:58.070
not everybody.

235
00:09:58.070 --> 00:09:59.740
In fact, I'd guarantee
it's not everybody.

236
00:09:59.740 --> 00:10:02.130
BORIS SMUS: Especially on
Mobile, things are really--

237
00:10:02.130 --> 00:10:03.920
well, you have slow speeds.

238
00:10:03.920 --> 00:10:08.100
You have very high latency,
generally, from 3G

239
00:10:08.100 --> 00:10:10.370
connections, even
4G connections.

240
00:10:10.370 --> 00:10:13.320
Essentially, latency isn't
really changing, because it's

241
00:10:13.320 --> 00:10:15.145
constrained by distance
from cell tower.

242
00:10:15.145 --> 00:10:15.840
PETE LEPAGE: Right.

243
00:10:15.840 --> 00:10:18.123
So the further I am from the
cell tower, the longer it's

244
00:10:18.123 --> 00:10:19.750
going to take for the radio
signal to come.

245
00:10:19.750 --> 00:10:23.030
So it doesn't matter how fast
I can get everything, it's

246
00:10:23.030 --> 00:10:25.466
still going to take a little
bit of time for the--

247
00:10:25.466 --> 00:10:28.150
BORIS SMUS: So there's all
these sort of different

248
00:10:28.150 --> 00:10:31.330
constraints in mobile.

249
00:10:31.330 --> 00:10:33.740
So anyway, there's multiple
solutions.

250
00:10:33.740 --> 00:10:35.550
You can do this in JavaScript.

251
00:10:35.550 --> 00:10:39.750
And there's a whole spreadsheet
that someone put

252
00:10:39.750 --> 00:10:42.245
together of all the
JavaScript--

253
00:10:42.245 --> 00:10:43.266
PETE LEPAGE: Libraries.

254
00:10:43.266 --> 00:10:48.640
BORIS SMUS: --Image solutions,
OK high DPI image solutions.

255
00:10:48.640 --> 00:10:51.920
And there's like at least 30.

256
00:10:51.920 --> 00:10:54.370
So it's pretty impressive.

257
00:10:54.370 --> 00:10:56.550
There's also CSS approaches.

258
00:10:56.550 --> 00:11:01.280
So with CSS media queries, what
you can do now is you can

259
00:11:01.280 --> 00:11:03.320
select the proper image.

260
00:11:03.320 --> 00:11:04.920
Well, essentially what you
do is you set a media

261
00:11:04.920 --> 00:11:07.576
query based on the--

262
00:11:07.576 --> 00:11:08.390
PETE LEPAGE: It's the
device pixel.

263
00:11:08.390 --> 00:11:09.380
BORIS SMUS: Device DPI.

264
00:11:09.380 --> 00:11:11.110
PETE LEPAGE: Device
DPI or pixel--

265
00:11:11.110 --> 00:11:12.050
BORIS SMUS: Device
pixel ratio.

266
00:11:12.050 --> 00:11:12.790
PETE LEPAGE: OK.

267
00:11:12.790 --> 00:11:17.870
So like at the top, I'd say,
hey, here's my CSS, and I

268
00:11:17.870 --> 00:11:19.290
specify media query in there.

269
00:11:19.290 --> 00:11:24.550
And I said device pixel ratio
of between 1.0 and 1.5.

270
00:11:24.550 --> 00:11:28.360
And I might do another one
for 1.5 to bigger.

271
00:11:28.360 --> 00:11:30.430
And that would give
me the high ones.

272
00:11:30.430 --> 00:11:31.190
BORIS SMUS: Exactly.

273
00:11:31.190 --> 00:11:34.400
PETE LEPAGE: Now, that's only
going to do images if they're

274
00:11:34.400 --> 00:11:38.310
in a background, for my style
sheet, or if they're maybe

275
00:11:38.310 --> 00:11:40.240
specified as a background
on a div or

276
00:11:40.240 --> 00:11:41.010
something like that, right?

277
00:11:41.010 --> 00:11:41.750
BORIS SMUS: Exactly.

278
00:11:41.750 --> 00:11:47.390
So with media queries, you're
constrained to CSS properties

279
00:11:47.390 --> 00:11:48.770
and not content images.

280
00:11:48.770 --> 00:11:51.350
So you can't set the image
source with a media query.

281
00:11:51.350 --> 00:11:51.780
PETE LEPAGE: OK.

282
00:11:51.780 --> 00:11:55.400
So I can't use that for,
say, hey, I want to

283
00:11:55.400 --> 00:11:56.350
put an image here.

284
00:11:56.350 --> 00:11:59.390
And this is my image of
a newspaper article or

285
00:11:59.390 --> 00:12:00.310
something like that.

286
00:12:00.310 --> 00:12:01.770
BORIS SMUS: You sort of can.

287
00:12:01.770 --> 00:12:06.360
I mean, you can just create a
div, set the background image,

288
00:12:06.360 --> 00:12:08.800
and pretend it was
a content image.

289
00:12:08.800 --> 00:12:10.410
And like you can even say--

290
00:12:10.410 --> 00:12:13.120
PETE LEPAGE: Then I would have
to generate that CSS every

291
00:12:13.120 --> 00:12:16.565
time, depending on if the
image is dynamic.

292
00:12:16.565 --> 00:12:18.880
So I'm thinking like
a news website or

293
00:12:18.880 --> 00:12:19.600
something like that.

294
00:12:19.600 --> 00:12:22.210
If the image is dynamic, I'm
going to have to do that.

295
00:12:22.210 --> 00:12:26.810
BORIS SMUS: You can still
do that with JavaScript.

296
00:12:26.810 --> 00:12:27.400
It's not a problem.

297
00:12:27.400 --> 00:12:28.655
PETE LEPAGE: Oh yeah,
that's a fair point.

298
00:12:28.655 --> 00:12:30.005
That's a good point.

299
00:12:30.005 --> 00:12:32.800
BORIS SMUS: I mean, you can
set the background images

300
00:12:32.800 --> 00:12:34.200
dynamically.

301
00:12:34.200 --> 00:12:36.660
Anyway, so there's
JavaScript, CSS.

302
00:12:36.660 --> 00:12:38.090
You can do this on
a server as well.

303
00:12:38.090 --> 00:12:40.860

304
00:12:40.860 --> 00:12:44.000
So just using the user agent,
which is all we have on the

305
00:12:44.000 --> 00:12:48.545
server, unfortunately, you
simply just serve the high DPI

306
00:12:48.545 --> 00:12:49.160
image if necessary.

307
00:12:49.160 --> 00:12:49.860
PETE LEPAGE: Right.

308
00:12:49.860 --> 00:12:54.960
So you could say, oh, this
particular device, I know is a

309
00:12:54.960 --> 00:12:58.710
high DPI device, so I want to
serve the high DPI image.

310
00:12:58.710 --> 00:13:02.250
Now, that's going to
work great for a

311
00:13:02.250 --> 00:13:03.660
known set of devices.

312
00:13:03.660 --> 00:13:08.170
But like, say, for example, some
brand new company goes

313
00:13:08.170 --> 00:13:11.590
and ships the new, coolest
tablet ever.

314
00:13:11.590 --> 00:13:14.590
And it's got a device
pixel ratio of four.

315
00:13:14.590 --> 00:13:16.755
On day one, I'm probably
screwed.

316
00:13:16.755 --> 00:13:18.340
BORIS SMUS: Well, you're not
screwed in the sense of--

317
00:13:18.340 --> 00:13:20.650
PETE LEPAGE: If I use the
server side, and I

318
00:13:20.650 --> 00:13:21.340
don't know about it.

319
00:13:21.340 --> 00:13:24.150
BORIS SMUS: Sure.

320
00:13:24.150 --> 00:13:26.540
If you're using the server side
and doing like a robust

321
00:13:26.540 --> 00:13:29.140
solution, you're probably using
a device database, like

322
00:13:29.140 --> 00:13:31.100
[INAUDIBLE] or--

323
00:13:31.100 --> 00:13:32.030
what's the other one--

324
00:13:32.030 --> 00:13:34.140
Device Atlas, one of those.

325
00:13:34.140 --> 00:13:37.490
So there, you would just
update your database.

326
00:13:37.490 --> 00:13:39.810
And hopefully, they
would be able to--

327
00:13:39.810 --> 00:13:41.390
PETE LEPAGE: They'll
provide that info.

328
00:13:41.390 --> 00:13:44.280
BORIS SMUS: But you know, that's
sort of theoretical.

329
00:13:44.280 --> 00:13:46.080
There's definitely drawbacks.

330
00:13:46.080 --> 00:13:48.970
And you'll need a custom
server solution

331
00:13:48.970 --> 00:13:51.050
to do this, et cetera.

332
00:13:51.050 --> 00:13:54.320
So the real solution to this
problem is to use things that

333
00:13:54.320 --> 00:13:55.600
are built into the browser.

334
00:13:55.600 --> 00:13:57.695
PETE LEPAGE: That's pretty
much always a

335
00:13:57.695 --> 00:13:58.520
safe thing to do.

336
00:13:58.520 --> 00:13:59.540
BORIS SMUS: Because
there's drawbacks

337
00:13:59.540 --> 00:14:01.690
to every other approach.

338
00:14:01.690 --> 00:14:04.480
And of course, the drawback here
is it's not implemented

339
00:14:04.480 --> 00:14:05.796
everywhere.

340
00:14:05.796 --> 00:14:06.380
PETE LEPAGE: OK.

341
00:14:06.380 --> 00:14:08.630
These are specs that
are still sort of--

342
00:14:08.630 --> 00:14:09.570
[INTERPOSING VOICES].

343
00:14:09.570 --> 00:14:12.430
PETE LEPAGE: Would you call
them release candidate?

344
00:14:12.430 --> 00:14:14.840
Or are we still sort of--

345
00:14:14.840 --> 00:14:17.090
BORIS SMUS: It's hard to
speculate about that.

346
00:14:17.090 --> 00:14:23.830
I mean, they're both specs that
are somewhat in progress.

347
00:14:23.830 --> 00:14:28.950
But certainly, we will have some
image selection, image

348
00:14:28.950 --> 00:14:33.900
set approach for both content
images, like setting image

349
00:14:33.900 --> 00:14:36.670
source, and for background
images.

350
00:14:36.670 --> 00:14:38.460
So the way with background
images right now,

351
00:14:38.460 --> 00:14:40.460
it's with image set.

352
00:14:40.460 --> 00:14:44.250
And I talk about it in some
detail in my article.

353
00:14:44.250 --> 00:14:47.290
But essentially, what you're
saying is you specify multiple

354
00:14:47.290 --> 00:14:51.310
images, and you say what
the [? x-ity ?]

355
00:14:51.310 --> 00:14:53.910
is, like 1x, 1.5x, et cetera.

356
00:14:53.910 --> 00:14:56.980
PETE LEPAGE: So the device
pixel ratio, you

357
00:14:56.980 --> 00:14:58.940
say one point whatever.

358
00:14:58.940 --> 00:15:01.590
BORIS SMUS: So you provide
multiple of these images.

359
00:15:01.590 --> 00:15:04.690
And then the browser selects
which one to load for you.

360
00:15:04.690 --> 00:15:06.990
PETE LEPAGE: So the browser is
smart enough to go, oh OK, we

361
00:15:06.990 --> 00:15:07.965
want to grab this.

362
00:15:07.965 --> 00:15:09.570
BORIS SMUS: And it's
more of a guide.

363
00:15:09.570 --> 00:15:13.440
So one of the drawbacks with
CSS using media queries is

364
00:15:13.440 --> 00:15:17.650
your device pixel ratio may be
two, but you may be on a very

365
00:15:17.650 --> 00:15:19.490
slow link, for example.

366
00:15:19.490 --> 00:15:22.260
Then you're downloading a huge
image on like your EDGE

367
00:15:22.260 --> 00:15:26.140
connection, and that's a
bad user experience.

368
00:15:26.140 --> 00:15:28.565
So if the browser can make
that call for you--

369
00:15:28.565 --> 00:15:30.630
PETE LEPAGE: We definitely want
the browser to do that.

370
00:15:30.630 --> 00:15:32.360
BORIS SMUS: We want
to do that.

371
00:15:32.360 --> 00:15:38.690
So I think that's the main
benefit of building it

372
00:15:38.690 --> 00:15:40.700
directly into the browser.

373
00:15:40.700 --> 00:15:43.170
So it's image set for CSS.

374
00:15:43.170 --> 00:15:44.630
PETE LEPAGE: So that's
image set.

375
00:15:44.630 --> 00:15:49.890
So I would say image colon and
then like provide a set?

376
00:15:49.890 --> 00:15:50.900
I guess it's in the article.

377
00:15:50.900 --> 00:15:51.780
BORIS SMUS: It's
in the article.

378
00:15:51.780 --> 00:15:54.100
But it's essentially a
custom CSS function.

379
00:15:54.100 --> 00:15:57.150
with its own syntax,
et cetera.

380
00:15:57.150 --> 00:16:01.850
And right now, it's in WebKit
only, so prefix with the dash

381
00:16:01.850 --> 00:16:03.200
WebKit prefix.

382
00:16:03.200 --> 00:16:11.070
And it's available in Safari
6 and Chrome, I think.

383
00:16:11.070 --> 00:16:11.850
[INAUDIBLE]

384
00:16:11.850 --> 00:16:14.030
the Canary.

385
00:16:14.030 --> 00:16:18.120
PETE LEPAGE: So it's not
available, say, on Chrome for

386
00:16:18.120 --> 00:16:19.030
Android yet?

387
00:16:19.030 --> 00:16:19.580
BORIS SMUS: Not yet.

388
00:16:19.580 --> 00:16:20.640
PETE LEPAGE: OK.

389
00:16:20.640 --> 00:16:21.590
But something that--

390
00:16:21.590 --> 00:16:22.170
BORIS SMUS: But it will be.

391
00:16:22.170 --> 00:16:24.190
PETE LEPAGE: --we hope to see
coming in the near future.

392
00:16:24.190 --> 00:16:26.770
BORIS SMUS: And I believe
it may be--

393
00:16:26.770 --> 00:16:29.420
well, it's likely to be in the
next versions of both Chrome

394
00:16:29.420 --> 00:16:32.790
for Android and probably
Mobile Safari as well.

395
00:16:32.790 --> 00:16:33.510
PETE LEPAGE: OK.

396
00:16:33.510 --> 00:16:35.890
So we should keep an
eye out for that.

397
00:16:35.890 --> 00:16:38.420
Hopefully, it'll be in
the next version.

398
00:16:38.420 --> 00:16:40.360
BORIS SMUS: And of course, for
content images, we have a

399
00:16:40.360 --> 00:16:42.790
similar thing called
source set.

400
00:16:42.790 --> 00:16:45.280
So you have image source, and
you have image source set.

401
00:16:45.280 --> 00:16:47.340
PETE LEPAGE: So I'd say image
source, and then I;d provide

402
00:16:47.340 --> 00:16:51.440
the normal one so that legacy
browers or normal browsers

403
00:16:51.440 --> 00:16:52.250
will just pick that up.

404
00:16:52.250 --> 00:16:53.315
But then I'd say source set--

405
00:16:53.315 --> 00:16:54.130
BORIS SMUS: Source set.

406
00:16:54.130 --> 00:16:54.390
Yeah.

407
00:16:54.390 --> 00:16:56.960
PETE LEPAGE: --and that's still
an attribute within the

408
00:16:56.960 --> 00:16:57.970
image element, right?

409
00:16:57.970 --> 00:16:59.140
BORIS SMUS: Exactly.

410
00:16:59.140 --> 00:17:05.890
So it's sort of a little more
complex than image set, the

411
00:17:05.890 --> 00:17:07.310
CSS version.

412
00:17:07.310 --> 00:17:11.540
And you can specify additional
things like width and height

413
00:17:11.540 --> 00:17:13.280
of the view port.

414
00:17:13.280 --> 00:17:16.920
So again, this gets a little
more complicated.

415
00:17:16.920 --> 00:17:22.510
And in my personal opinion, both
image set and source set

416
00:17:22.510 --> 00:17:23.869
should have the same syntax.

417
00:17:23.869 --> 00:17:26.170
They currently don't.

418
00:17:26.170 --> 00:17:28.210
The other thing to know is
a source set is it's not

419
00:17:28.210 --> 00:17:29.280
available anywhere.

420
00:17:29.280 --> 00:17:30.630
There's no implementation.

421
00:17:30.630 --> 00:17:31.430
PETE LEPAGE: Ah.

422
00:17:31.430 --> 00:17:31.720
All right.

423
00:17:31.720 --> 00:17:34.990
So it's cool, but we
can't use it yet.

424
00:17:34.990 --> 00:17:38.090
BORIS SMUS: It's cool, and we
can use it with a polyfill

425
00:17:38.090 --> 00:17:39.470
that I wrote.

426
00:17:39.470 --> 00:17:41.670
But it's not available
in any browser.

427
00:17:41.670 --> 00:17:47.960
So I would say it's far less
mature than image set and

428
00:17:47.960 --> 00:17:49.740
likely to change more as well.

429
00:17:49.740 --> 00:17:51.300
PETE LEPAGE: So the
link to your

430
00:17:51.300 --> 00:17:53.380
polyfill is in that article.

431
00:17:53.380 --> 00:17:56.140
So if people, go have a look at
that article, they can get

432
00:17:56.140 --> 00:17:56.865
that link, correct?

433
00:17:56.865 --> 00:17:59.050
BORIS SMUS: Correct.

434
00:17:59.050 --> 00:18:02.590
So anyway, take a look
at the article.

435
00:18:02.590 --> 00:18:03.330
Try the polyfill.

436
00:18:03.330 --> 00:18:04.580
Let me know what you think.

437
00:18:04.580 --> 00:18:07.180

438
00:18:07.180 --> 00:18:08.770
PETE LEPAGE: So what
would you say--

439
00:18:08.770 --> 00:18:11.180
I want to go, I want to make
my website work best now.

440
00:18:11.180 --> 00:18:15.220
What's the best thing I can
do to make sure that I'm

441
00:18:15.220 --> 00:18:16.740
providing the best experience?

442
00:18:16.740 --> 00:18:20.120
BORIS SMUS: The best thing you
can do now sort of depends on

443
00:18:20.120 --> 00:18:23.550
what your target is, who your
clients are, et cetera.

444
00:18:23.550 --> 00:18:27.330
If you're targeting legacy
browsers, you probably want to

445
00:18:27.330 --> 00:18:30.520
use something less ambitious
than image set and source set,

446
00:18:30.520 --> 00:18:32.780
because you're just going to
end up having to polyfill

447
00:18:32.780 --> 00:18:35.040
everything right.

448
00:18:35.040 --> 00:18:39.180
So if you're doing that, fall
back to JavaScript, see if

449
00:18:39.180 --> 00:18:45.200
media queries are supported, do
something less ambitious.

450
00:18:45.200 --> 00:18:46.600
However, if you're on
the bleeding edge--

451
00:18:46.600 --> 00:18:48.695
PETE LEPAGE: If you want to be
sort of on the cutting edge--

452
00:18:48.695 --> 00:18:50.550
BORIS SMUS: --you should
probably be using image set

453
00:18:50.550 --> 00:18:51.800
and source set.

454
00:18:51.800 --> 00:18:54.552

455
00:18:54.552 --> 00:18:58.390
Definitely image set, maybe
not source set.

456
00:18:58.390 --> 00:18:59.950
PETE LEPAGE: Cool.

457
00:18:59.950 --> 00:19:00.280
All right.

458
00:19:00.280 --> 00:19:03.060
Well, hopefully that's
a good intro to this.

459
00:19:03.060 --> 00:19:05.650
This is something, I think,
it's a little bit

460
00:19:05.650 --> 00:19:06.740
complex right now.

461
00:19:06.740 --> 00:19:12.610
It's a little bit more fun than
it should be, and fun is

462
00:19:12.610 --> 00:19:17.600
a subjective thing, but will
become easier in the future.

463
00:19:17.600 --> 00:19:20.340
This is something that I think
a lot of browser vendors are

464
00:19:20.340 --> 00:19:21.480
looking at and trying
to figure out.

465
00:19:21.480 --> 00:19:24.590
Because we really want to make
sure that it's easy for you.

466
00:19:24.590 --> 00:19:28.140
And as developers, it should
be mostly transparent.

467
00:19:28.140 --> 00:19:30.450
It should be something that you
go, all right, here's my

468
00:19:30.450 --> 00:19:33.790
image, and maybe I need
a high DPI or low.

469
00:19:33.790 --> 00:19:36.160
Actually, you know one that you
didn't mention, I can't

470
00:19:36.160 --> 00:19:37.440
remember if you mentioned
it in your

471
00:19:37.440 --> 00:19:39.510
article, but image formats.

472
00:19:39.510 --> 00:19:44.450
There are some image formats
that provides that.

473
00:19:44.450 --> 00:19:47.115
But it doesn't stop downloading
once it hits the--

474
00:19:47.115 --> 00:19:48.170
BORIS SMUS: Right.

475
00:19:48.170 --> 00:19:51.230
So one of the things I
discussed, as you mentioned,

476
00:19:51.230 --> 00:19:54.330
are the progressive
image formats.

477
00:19:54.330 --> 00:19:58.400
So if you remember in the old
days when GIFs were very

478
00:19:58.400 --> 00:20:00.190
popular on the internet,
you can see

479
00:20:00.190 --> 00:20:01.240
this progressive loading.

480
00:20:01.240 --> 00:20:04.627
So first, you get kind of a
pixelly thing and then it

481
00:20:04.627 --> 00:20:10.770
would refine itself instead
of the cascade of loading.

482
00:20:10.770 --> 00:20:14.590
So most image formats actually
have this ability.

483
00:20:14.590 --> 00:20:17.200
And a lot of the time, if you
encode it that way, it's

484
00:20:17.200 --> 00:20:18.880
actually smaller.

485
00:20:18.880 --> 00:20:20.490
In some cases, it's larger.

486
00:20:20.490 --> 00:20:21.990
So I talk about that.

487
00:20:21.990 --> 00:20:27.300
But you might think that, hey,
you can just do this and then

488
00:20:27.300 --> 00:20:31.850
cut off the connection once
you know that getting more

489
00:20:31.850 --> 00:20:35.760
data isn't going to improve
the quality of the image.

490
00:20:35.760 --> 00:20:38.170
The thing with that is,
especially on mobile, you

491
00:20:38.170 --> 00:20:41.000
don't really want to
kill connections.

492
00:20:41.000 --> 00:20:42.890
The reason you don't want to
kill connections is because

493
00:20:42.890 --> 00:20:45.280
now you need to respawn
a new connection.

494
00:20:45.280 --> 00:20:48.730
And that incurs latency
overhead, which can be like a

495
00:20:48.730 --> 00:20:51.380
whole second in many cases.

496
00:20:51.380 --> 00:20:56.670
So one workaround could be
to use HTTP Range, which

497
00:20:56.670 --> 00:21:00.780
essentially says get me this
chunk in some image.

498
00:21:00.780 --> 00:21:02.750
So what you might do is you
might get the head of an

499
00:21:02.750 --> 00:21:06.920
image, see the size, estimate
how much data you need, get

500
00:21:06.920 --> 00:21:08.770
the range, and then
you don't actually

501
00:21:08.770 --> 00:21:10.850
have to kill the request.

502
00:21:10.850 --> 00:21:13.310
But the trouble is nobody
supports Range

503
00:21:13.310 --> 00:21:15.780
on the server basically.

504
00:21:15.780 --> 00:21:19.325
So anyway, more details,
check out the article.

505
00:21:19.325 --> 00:21:20.720
PETE LEPAGE: It's
a great article.

506
00:21:20.720 --> 00:21:21.800
It's really worthwhile.

507
00:21:21.800 --> 00:21:23.240
There's a lot of great images.

508
00:21:23.240 --> 00:21:24.482
BORIS SMUS: Thanks Pete.

509
00:21:24.482 --> 00:21:26.130
PETE LEPAGE: I liked it.

510
00:21:26.130 --> 00:21:29.390
BORIS SMUS: Anyway, let's talk
about some debugging stuff.

511
00:21:29.390 --> 00:21:29.616
PETE LEPAGE: Cool.

512
00:21:29.616 --> 00:21:29.790
All right.

513
00:21:29.790 --> 00:21:32.420
Well, I'm going to grab my
laptop here, because I want to

514
00:21:32.420 --> 00:21:37.110
talk about some of the debugging
tools that Chrome

515
00:21:37.110 --> 00:21:41.260
has to offer as you're building
websites and web

516
00:21:41.260 --> 00:21:42.110
applications.

517
00:21:42.110 --> 00:21:44.080
So I'm just going to
bring up Chrome.

518
00:21:44.080 --> 00:21:48.320
And I want to show you a couple
of the emulation tools

519
00:21:48.320 --> 00:21:49.550
that are available to you.

520
00:21:49.550 --> 00:21:53.510
And then I'll jump into some
of the debugging tools.

521
00:21:53.510 --> 00:21:55.100
So I've got Chrome up.

522
00:21:55.100 --> 00:21:57.700
I'm running Chrome
Beta on this.

523
00:21:57.700 --> 00:22:01.660
But in addition to Chrome Beta,
this is also available

524
00:22:01.660 --> 00:22:04.520
on Chrome Stable, it's also
available on Chrome Dev, and

525
00:22:04.520 --> 00:22:05.770
there's a couple other ones.

526
00:22:05.770 --> 00:22:10.930

527
00:22:10.930 --> 00:22:14.640
I'm going to take a sec here.

528
00:22:14.640 --> 00:22:16.000
Apparently, we're getting
some flickers.

529
00:22:16.000 --> 00:22:20.735
So let's try and see if I can
unflicker a little bit.

530
00:22:20.735 --> 00:22:25.420

531
00:22:25.420 --> 00:22:26.670
All right.

532
00:22:26.670 --> 00:22:32.180

533
00:22:32.180 --> 00:22:33.875
So do you want to talk about--

534
00:22:33.875 --> 00:22:34.710
BORIS SMUS: Sure.

535
00:22:34.710 --> 00:22:38.470
So basically, there's multiple
kinds of approaches you could

536
00:22:38.470 --> 00:22:40.800
take to debugging.

537
00:22:40.800 --> 00:22:45.100
The simplest probably, if you're
developing a mobile app

538
00:22:45.100 --> 00:22:48.260
and don't really want to deal
with your Android device

539
00:22:48.260 --> 00:22:52.570
plugged in via USB and doing a
remote debugging, the other

540
00:22:52.570 --> 00:22:58.520
approach is to emulate some
mobile features that are

541
00:22:58.520 --> 00:23:03.630
available in Chrome for Android
but do it directly on

542
00:23:03.630 --> 00:23:05.160
your desktop Chrome.

543
00:23:05.160 --> 00:23:08.660
So in the dev tools, as Pete
started saying, there's a

544
00:23:08.660 --> 00:23:13.630
bunch of these pretty nifty
features that let you

545
00:23:13.630 --> 00:23:18.020
essentially constrain your
Chrome browser in ways that

546
00:23:18.020 --> 00:23:20.130
are similar to the constraints
that you'll

547
00:23:20.130 --> 00:23:21.015
find on mobile devices.

548
00:23:21.015 --> 00:23:21.740
PETE LEPAGE: All right.

549
00:23:21.740 --> 00:23:24.360
So we've got this up.

550
00:23:24.360 --> 00:23:28.710
So I'm going to bring up
the Chrome dev tools.

551
00:23:28.710 --> 00:23:32.570
So I just brought them up
on my new tab page.

552
00:23:32.570 --> 00:23:33.490
But if you click--

553
00:23:33.490 --> 00:23:36.060
BORIS SMUS: Maybe you could
bump the size up.

554
00:23:36.060 --> 00:23:36.740
Command Plus.

555
00:23:36.740 --> 00:23:37.990
PETE LEPAGE: Command Plus.

556
00:23:37.990 --> 00:23:38.560
There we go.

557
00:23:38.560 --> 00:23:41.220
Yeah.

558
00:23:41.220 --> 00:23:44.510
So I clicked on the settings guy
here, and that brings up

559
00:23:44.510 --> 00:23:45.130
my settings.

560
00:23:45.130 --> 00:23:47.770
Now, things look a little bit
weird right now because I

561
00:23:47.770 --> 00:23:48.690
bumped the size up.

562
00:23:48.690 --> 00:23:51.070
But there's a couple of things
that pop up here that are

563
00:23:51.070 --> 00:23:51.740
really interesting.

564
00:23:51.740 --> 00:23:54.060
Let me come down a little
bit in size.

565
00:23:54.060 --> 00:23:57.380
So the first one is Override
User Agent, Override Device

566
00:23:57.380 --> 00:23:59.720
Metrics, and Emulate
Touch Events.

567
00:23:59.720 --> 00:24:02.950
So by going and turning on the
Override User Agent, I can go

568
00:24:02.950 --> 00:24:05.900
in, and I can choose from
different user agents.

569
00:24:05.900 --> 00:24:11.030
So I can specify, hey, I want to
emulate a Galaxy Nexus, or

570
00:24:11.030 --> 00:24:12.470
an iPhone, or an iPad.

571
00:24:12.470 --> 00:24:16.760
So if I choose the emulate the
Galaxy Nexus, sure enough, it

572
00:24:16.760 --> 00:24:19.600
goes and sets my user agent
string to be the right user

573
00:24:19.600 --> 00:24:20.620
agent string.

574
00:24:20.620 --> 00:24:24.190
But it also goes and turns on
this Override Device Metrics

575
00:24:24.190 --> 00:24:28.430
and sets my screen resolution
for 720 by 1280.

576
00:24:28.430 --> 00:24:32.580
So it actually says, hey,
this is what my

577
00:24:32.580 --> 00:24:34.250
screen resolution is.

578
00:24:34.250 --> 00:24:42.480
So now, if I go down here, and
I open up google.com, sure

579
00:24:42.480 --> 00:24:47.580
enough, I get the experience
as I would see

580
00:24:47.580 --> 00:24:49.150
it on a mobile device.

581
00:24:49.150 --> 00:24:52.900
BORIS SMUS: So it's both the
user agent and the device size

582
00:24:52.900 --> 00:24:53.295
constraints.

583
00:24:53.295 --> 00:24:54.330
PETE LEPAGE: Exactly.

584
00:24:54.330 --> 00:24:58.030
So as far as Google is
concerned, I'm reporting as

585
00:24:58.030 --> 00:25:03.740
this device, and as well, I'm
also getting the right screen

586
00:25:03.740 --> 00:25:04.440
resolution.

587
00:25:04.440 --> 00:25:07.530
So I'm kind of faking
out this.

588
00:25:07.530 --> 00:25:11.430
Now, there's a couple of things
that I do lose here

589
00:25:11.430 --> 00:25:12.390
that we don't get.

590
00:25:12.390 --> 00:25:14.240
One of things we talked
about earlier was the

591
00:25:14.240 --> 00:25:15.490
device pixel ratio.

592
00:25:15.490 --> 00:25:18.400

593
00:25:18.400 --> 00:25:22.550
If there's any kind of device
pixel ratio that's beyond the

594
00:25:22.550 --> 00:25:24.690
normal, I'm not going
to get that.

595
00:25:24.690 --> 00:25:26.520
BORIS SMUS: That's actually
on the horizon.

596
00:25:26.520 --> 00:25:30.170
So it may be coming soon,
definitely talked to some

597
00:25:30.170 --> 00:25:31.250
people about it.

598
00:25:31.250 --> 00:25:32.640
It seems like a very
useful feature.

599
00:25:32.640 --> 00:25:33.140
PETE LEPAGE: Yeah.

600
00:25:33.140 --> 00:25:36.800
It's something we definitely
asked for, and we've gone in

601
00:25:36.800 --> 00:25:39.190
and said, hey, we think this
is really important.

602
00:25:39.190 --> 00:25:41.680
I had checked this morning to
see if it was in Canary or

603
00:25:41.680 --> 00:25:43.450
Chromium, and it wasn't
there yet.

604
00:25:43.450 --> 00:25:43.920
BORIS SMUS: Not yet.

605
00:25:43.920 --> 00:25:46.390
PETE LEPAGE: So fingers crossed
that we'll get that

606
00:25:46.390 --> 00:25:46.870
kind of soon.

607
00:25:46.870 --> 00:25:48.500
Because that would
be really useful.

608
00:25:48.500 --> 00:25:52.010
It's one of those things
that I think will help.

609
00:25:52.010 --> 00:25:56.840
Now, one thing that sort of
caught me a couple of times, I

610
00:25:56.840 --> 00:26:00.690
go to start using this, this
may catch you, so in this

611
00:26:00.690 --> 00:26:04.030
particular environment, my
screen is set up for 1080

612
00:26:04.030 --> 00:26:05.860
pixels high.

613
00:26:05.860 --> 00:26:08.460
And you'll notice that when, I'm
just going to bring this

614
00:26:08.460 --> 00:26:10.660
up again so that we
can see this--

615
00:26:10.660 --> 00:26:11.480
that wasn't what I wanted.

616
00:26:11.480 --> 00:26:14.140
Here we go.

617
00:26:14.140 --> 00:26:15.260
There we go.

618
00:26:15.260 --> 00:26:17.110
So I'm going to bring this up.

619
00:26:17.110 --> 00:26:19.600
Notice my screen resolution
is set for 1280.

620
00:26:19.600 --> 00:26:23.060
So it's a little bit bigger
than my screen.

621
00:26:23.060 --> 00:26:30.261
So the browser creates that
space down below.

622
00:26:30.261 --> 00:26:33.260
Now, what's happening, say,
for example, I want to see

623
00:26:33.260 --> 00:26:33.800
this whole thing.

624
00:26:33.800 --> 00:26:35.690
I want to get rid of this.

625
00:26:35.690 --> 00:26:38.715
If I go close this right
now, I actually--

626
00:26:38.715 --> 00:26:40.495
oh, it looks like
we fixed this.

627
00:26:40.495 --> 00:26:41.070
No, we didn't.

628
00:26:41.070 --> 00:26:42.430
BORIS SMUS: It reverted back.

629
00:26:42.430 --> 00:26:42.960
PETE LEPAGE: Yeah.

630
00:26:42.960 --> 00:26:44.120
It reverted back.

631
00:26:44.120 --> 00:26:47.280
So now, what's happened
is my screen size

632
00:26:47.280 --> 00:26:48.620
goes back to normal.

633
00:26:48.620 --> 00:26:50.835
BORIS SMUS: So you need to have
dev tools open for the

634
00:26:50.835 --> 00:26:51.555
[? screen ?] size effect.

635
00:26:51.555 --> 00:26:55.050
PETE LEPAGE: So this dev tools
need to stay open if you want

636
00:26:55.050 --> 00:26:55.570
to do that.

637
00:26:55.570 --> 00:26:57.620
Now, there's two things
you can do there.

638
00:26:57.620 --> 00:27:00.070
You can just sort of go and
shrink these guys really,

639
00:27:00.070 --> 00:27:01.420
really, really tiny.

640
00:27:01.420 --> 00:27:05.640
Or the other one you can do is
just undock them and move them

641
00:27:05.640 --> 00:27:06.950
sort of over here.

642
00:27:06.950 --> 00:27:09.290
And that's probably the easier
thing to do, because now you

643
00:27:09.290 --> 00:27:10.280
can actually go and--

644
00:27:10.280 --> 00:27:12.210
BORIS SMUS: There's actually
a third thing

645
00:27:12.210 --> 00:27:14.455
you can do in Canary.

646
00:27:14.455 --> 00:27:16.410
PETE LEPAGE: All right.

647
00:27:16.410 --> 00:27:17.660
Let me bring up Canary.

648
00:27:17.660 --> 00:27:19.720

649
00:27:19.720 --> 00:27:23.170
I think I had some fun with
Canary this morning in that It

650
00:27:23.170 --> 00:27:25.270
wouldn't bring up the--

651
00:27:25.270 --> 00:27:26.510
yeah, it won't bring up my--

652
00:27:26.510 --> 00:27:27.770
BORIS SMUS: Oh, don't
worry about that.

653
00:27:27.770 --> 00:27:31.213
But if you click on that
thing for a while and

654
00:27:31.213 --> 00:27:32.180
then go like that.

655
00:27:32.180 --> 00:27:33.050
Boom.

656
00:27:33.050 --> 00:27:33.650
Dock to right.

657
00:27:33.650 --> 00:27:34.810
PETE LEPAGE: Nice.

658
00:27:34.810 --> 00:27:36.430
BORIS SMUS: So that's a
pretty cool feature.

659
00:27:36.430 --> 00:27:38.130
PETE LEPAGE: So that's something
we can probably

660
00:27:38.130 --> 00:27:40.350
expect to see in a future
version of Chrome.

661
00:27:40.350 --> 00:27:40.960
BORIS SMUS: Yeah.

662
00:27:40.960 --> 00:27:42.720
I think it's probably
in Beta by now.

663
00:27:42.720 --> 00:27:43.620
I'm not sure.

664
00:27:43.620 --> 00:27:47.084
PETE LEPAGE: Well,
let's find out.

665
00:27:47.084 --> 00:27:47.920
BORIS SMUS: Is this Beta?

666
00:27:47.920 --> 00:27:49.780
PETE LEPAGE: This is Beta.

667
00:27:49.780 --> 00:27:52.230
So it is not in Beta yet.

668
00:27:52.230 --> 00:27:53.730
So maybe it's in Dev.

669
00:27:53.730 --> 00:27:55.070
BORIS SMUS: Yeah, could be.

670
00:27:55.070 --> 00:27:56.640
It'll trickle down eventually.

671
00:27:56.640 --> 00:27:57.800
It's a very useful feature.

672
00:27:57.800 --> 00:27:58.940
PETE LEPAGE: It really is.

673
00:27:58.940 --> 00:28:03.410
It's one of those things to
be able to go and do this.

674
00:28:03.410 --> 00:28:07.550
So not only do you get your user
agent override so that

675
00:28:07.550 --> 00:28:10.100
you can go and specify, if you
do want to specify a specific

676
00:28:10.100 --> 00:28:11.610
user agent, you can do that.

677
00:28:11.610 --> 00:28:16.710
Because right now, they
only have Android 4.0.

678
00:28:16.710 --> 00:28:20.000
And do you remember,
is this the Android

679
00:28:20.000 --> 00:28:21.380
browser user agent?

680
00:28:21.380 --> 00:28:22.630
Or is this the--

681
00:28:22.630 --> 00:28:24.990

682
00:28:24.990 --> 00:28:25.550
let's see--

683
00:28:25.550 --> 00:28:25.940
BORIS SMUS: Good question.

684
00:28:25.940 --> 00:28:29.240
I think it's the Android
browser user agent.

685
00:28:29.240 --> 00:28:30.160
PETE LEPAGE: Yeah.

686
00:28:30.160 --> 00:28:31.630
That looks like the
Android browser.

687
00:28:31.630 --> 00:28:34.660
BORIS SMUS: There's no Chrome
in that string.

688
00:28:34.660 --> 00:28:38.010
I think there's an open request
to get Chrome user

689
00:28:38.010 --> 00:28:42.030
agents in there, Chrome for
Android and Chrome for iOS,

690
00:28:42.030 --> 00:28:44.180
but not quite yet.

691
00:28:44.180 --> 00:28:45.000
PETE LEPAGE: It's
not there yet.

692
00:28:45.000 --> 00:28:47.245
BORIS SMUS: Either way, as you
were saying, you can and paste

693
00:28:47.245 --> 00:28:48.150
in anything you like.

694
00:28:48.150 --> 00:28:50.010
You can even paste into
Googlebot if you want to see

695
00:28:50.010 --> 00:28:51.236
how Googlebot [INAUDIBLE].

696
00:28:51.236 --> 00:28:51.960
PETE LEPAGE: Oh yeah.

697
00:28:51.960 --> 00:28:54.050
That's a good point too.

698
00:28:54.050 --> 00:28:56.940
So if you want to go look up the
user agent strings, if you

699
00:28:56.940 --> 00:29:01.930
just look up Chrome Mobile UA
string, just Google that,

700
00:29:01.930 --> 00:29:03.720
you'll come across the
documentation.

701
00:29:03.720 --> 00:29:07.550
BORIS SMUS: You should get
to the developer site.

702
00:29:07.550 --> 00:29:13.040
PETE LEPAGE: So let me just
bring these guys up again.

703
00:29:13.040 --> 00:29:16.770
So the other one that you can do
is emulate touch events so

704
00:29:16.770 --> 00:29:20.690
that if I want to go and turn on
touch events, and I'll pop

705
00:29:20.690 --> 00:29:23.530
over here and go back
to google.com--

706
00:29:23.530 --> 00:29:25.100
helps if I spell it right.

707
00:29:25.100 --> 00:29:28.140
You'd think I'd be
able to do that.

708
00:29:28.140 --> 00:29:31.260
I can sort of simulate
the touch events.

709
00:29:31.260 --> 00:29:33.290
Now, they're not true
touch events.

710
00:29:33.290 --> 00:29:36.595
But they're plenty close.

711
00:29:36.595 --> 00:29:39.930
BORIS SMUS: I think they're true
touch events, like you

712
00:29:39.930 --> 00:29:43.710
get the same touch start, touch
move, and touch end as

713
00:29:43.710 --> 00:29:44.930
you would in a normal event.

714
00:29:44.930 --> 00:29:45.650
PETE LEPAGE: So good point.

715
00:29:45.650 --> 00:29:49.220
BORIS SMUS: So a lot of sites
that are designed for mobile,

716
00:29:49.220 --> 00:29:52.940
like this one, might not respond
to clicks directly,

717
00:29:52.940 --> 00:29:53.910
because they assume that--

718
00:29:53.910 --> 00:29:54.480
PETE LEPAGE: Oh yeah.

719
00:29:54.480 --> 00:29:56.470
They're not expecting
a click event.

720
00:29:56.470 --> 00:29:58.600
They're expecting only
the touch event.

721
00:29:58.600 --> 00:30:00.370
BORIS SMUS: It might be that
there's a mobile user agent,

722
00:30:00.370 --> 00:30:03.440
and they just say, OK,
there's only touches.

723
00:30:03.440 --> 00:30:04.890
So it's useful in that case.

724
00:30:04.890 --> 00:30:06.340
But of course, it's
not multi-touch.

725
00:30:06.340 --> 00:30:06.680
PETE LEPAGE: Right.

726
00:30:06.680 --> 00:30:10.400
So I can't go and do any
multi-touch kind of stuff

727
00:30:10.400 --> 00:30:11.390
unfortunately.

728
00:30:11.390 --> 00:30:12.300
All right.

729
00:30:12.300 --> 00:30:18.380
So that's the emulation stuff
that you've got within Chrome.

730
00:30:18.380 --> 00:30:21.710
The other one that's available
is Chrome remote debugging.

731
00:30:21.710 --> 00:30:26.500
And with the Chrome remote
debugging, there's a video and

732
00:30:26.500 --> 00:30:28.520
lots of good documentation
on that.

733
00:30:28.520 --> 00:30:34.980
But on my phone, I'm just going
to go and open up Chrome

734
00:30:34.980 --> 00:30:36.960
so that I've got something
that we can go

735
00:30:36.960 --> 00:30:38.210
have a look at here.

736
00:30:38.210 --> 00:30:41.810

737
00:30:41.810 --> 00:30:45.870
Now, before you do this, you
need to have ADB installed.

738
00:30:45.870 --> 00:30:49.150
Now, ADB is the Android
Debugger.

739
00:30:49.150 --> 00:30:51.290
And it allows you to do
some port forwarding

740
00:30:51.290 --> 00:30:52.740
and things like that.

741
00:30:52.740 --> 00:30:55.540
Once you've got ADB installed,
which is not all that hard--

742
00:30:55.540 --> 00:30:58.520
it's a pretty easy process
to step through--

743
00:30:58.520 --> 00:31:01.960
you need to plug your phone
into your laptop via USB.

744
00:31:01.960 --> 00:31:06.210
And you need to turn on two
things on your phone.

745
00:31:06.210 --> 00:31:10.590
In the settings menu
for the phone, you

746
00:31:10.590 --> 00:31:12.560
need to enable debugging.

747
00:31:12.560 --> 00:31:15.560
So go into the debugging
settings, turn that on.

748
00:31:15.560 --> 00:31:18.740
And then the second piece that
you need to do is within

749
00:31:18.740 --> 00:31:22.430
Chrome, you need to turn on
the remote debugging.

750
00:31:22.430 --> 00:31:25.290
So I've done that
on this device.

751
00:31:25.290 --> 00:31:28.660
And now I need to start
the debugging stuff.

752
00:31:28.660 --> 00:31:29.290
BORIS SMUS: Yeah.

753
00:31:29.290 --> 00:31:33.190
So generally, the stuff on the
device persists, at least the

754
00:31:33.190 --> 00:31:34.820
system-wide debugging does.

755
00:31:34.820 --> 00:31:38.500
The Chrome one sometimes turns
off for some reason.

756
00:31:38.500 --> 00:31:40.290
So you might have
to turn that on.

757
00:31:40.290 --> 00:31:42.940
But there's a bit of like
one time setup.

758
00:31:42.940 --> 00:31:44.880
Hopefully, you won't need
to do it all the time.

759
00:31:44.880 --> 00:31:47.570
PETE LEPAGE: Once that setup's
done, it's pretty easy.

760
00:31:47.570 --> 00:31:54.110
I've actually created a little
script to make my debugging a

761
00:31:54.110 --> 00:31:56.680
little bit easier, because I
don't like to remember ADB

762
00:31:56.680 --> 00:31:59.850
forward TCP colon 922--

763
00:31:59.850 --> 00:32:01.760
It's just more than I
like to remember.

764
00:32:01.760 --> 00:32:05.710
So I just got a little script
that I can do, clank, debug.

765
00:32:05.710 --> 00:32:07.270
So that starts my
clank debugger.

766
00:32:07.270 --> 00:32:13.010
BORIS SMUS: So what that
actually does is this Chrome

767
00:32:13.010 --> 00:32:16.910
for Android runs a server,
basically.

768
00:32:16.910 --> 00:32:19.840
And it runs the Chrome
dev tools protocol.

769
00:32:19.840 --> 00:32:22.130
And what this does, it
sets up the port.

770
00:32:22.130 --> 00:32:25.880
It opens the port here
to make that

771
00:32:25.880 --> 00:32:28.030
connectable from your desktop.

772
00:32:28.030 --> 00:32:32.180
PETE LEPAGE: So now, through
the USB, I've opened a TCP

773
00:32:32.180 --> 00:32:35.015
port to the server on here.

774
00:32:35.015 --> 00:32:38.530
BORIS SMUS: It's actually a
little more complicated.

775
00:32:38.530 --> 00:32:39.030
You'll see.

776
00:32:39.030 --> 00:32:40.085
Anyway, we should
open this up.

777
00:32:40.085 --> 00:32:41.840
PETE LEPAGE: So now,
I've opened it up.

778
00:32:41.840 --> 00:32:44.700
And sure enough, I see my list
of inspectable pages.

779
00:32:44.700 --> 00:32:45.690
I can click on this.

780
00:32:45.690 --> 00:32:48.320
BORIS SMUS: So you'll see it
actually went to a front end

781
00:32:48.320 --> 00:32:49.880
that's on the web.

782
00:32:49.880 --> 00:32:52.055
The URL here is chromedevtoolsfr

783
00:32:52.055 --> 00:32:53.305
ontend.appspot.com.

784
00:32:53.305 --> 00:32:54.860

785
00:32:54.860 --> 00:32:58.460
So it actually serves the
front end from there and

786
00:32:58.460 --> 00:33:01.770
points it to here.

787
00:33:01.770 --> 00:33:03.150
So a bit of indirection.

788
00:33:03.150 --> 00:33:04.320
PETE LEPAGE: We've got a little
bit of funky stuff.

789
00:33:04.320 --> 00:33:05.740
BORIS SMUS: But it works
really well.

790
00:33:05.740 --> 00:33:06.500
So it's awesome.

791
00:33:06.500 --> 00:33:09.880
PETE LEPAGE: So now, as I start
looking at the content

792
00:33:09.880 --> 00:33:13.570
that's on here, I can actually
start expanding these out and

793
00:33:13.570 --> 00:33:18.130
seeing what's going on in
my particular page.

794
00:33:18.130 --> 00:33:21.190
So I can expand this out, and
say, hey, there's divs.

795
00:33:21.190 --> 00:33:22.370
There's an iframe.

796
00:33:22.370 --> 00:33:28.540
And as I start expanding these
out, you can see that

797
00:33:28.540 --> 00:33:32.030
different parts of the page
start to get highlighted.

798
00:33:32.030 --> 00:33:34.140
BORIS SMUS: So you have full
control basically.

799
00:33:34.140 --> 00:33:34.870
PETE LEPAGE: Exactly.

800
00:33:34.870 --> 00:33:38.370
It's just like debugging
on my desktop.

801
00:33:38.370 --> 00:33:40.290
Like if I'm debugging,
I can go in.

802
00:33:40.290 --> 00:33:43.560
I could be like, oh, hey, I can
change everything live.

803
00:33:43.560 --> 00:33:47.610
I've got all the same
capabilities that I would have

804
00:33:47.610 --> 00:33:50.290
if I were debugging Chrome
on my desktop.

805
00:33:50.290 --> 00:33:53.680
I can set CSS styles.

806
00:33:53.680 --> 00:33:56.000
I can set attributes,
remove attributes.

807
00:33:56.000 --> 00:33:58.810
I can add and remove elements,
all the stuff that I'm used to

808
00:33:58.810 --> 00:34:00.110
being able to do.

809
00:34:00.110 --> 00:34:03.180
In fact, I can even go in and
use some of the auditing and

810
00:34:03.180 --> 00:34:07.220
profiling tools to be able to
understand exactly where

811
00:34:07.220 --> 00:34:08.393
everything is.

812
00:34:08.393 --> 00:34:10.350
BORIS SMUS: It's especially
important for mobile.

813
00:34:10.350 --> 00:34:11.429
PETE LEPAGE: Exactly.

814
00:34:11.429 --> 00:34:17.949
To understand how your network
requests are coming in, it's

815
00:34:17.949 --> 00:34:19.290
actually something really
interesting.

816
00:34:19.290 --> 00:34:22.750
One of the projects I was
working on, we found a bug

817
00:34:22.750 --> 00:34:25.250
that only happened when you
are connected on 3G.

818
00:34:25.250 --> 00:34:26.500
So we were testing this.

819
00:34:26.500 --> 00:34:29.429
We were always on Wi-Fi,
because that's--

820
00:34:29.429 --> 00:34:32.719
generally if you can go
on a fast connection.

821
00:34:32.719 --> 00:34:33.340
We're great.

822
00:34:33.340 --> 00:34:36.150
And we were like,
all right, yeah.

823
00:34:36.150 --> 00:34:38.840
And a couple of hours before we
were supposed to ship this

824
00:34:38.840 --> 00:34:44.110
thing, I was doing my last like
sanity checks and went,

825
00:34:44.110 --> 00:34:47.770
oh crap, it doesn't work
with Wi-Fi turned off.

826
00:34:47.770 --> 00:34:50.210
And so sure enough, it was just
this little thing where

827
00:34:50.210 --> 00:34:53.520
something wasn't coming in quite
fast enough, and it was

828
00:34:53.520 --> 00:34:55.130
just sitting there forever.

829
00:34:55.130 --> 00:34:57.320
And so we made a couple
of minor corrections.

830
00:34:57.320 --> 00:34:59.380
But it was one of
those things.

831
00:34:59.380 --> 00:35:02.850
So being able to go in and see
the profiling tools, the

832
00:35:02.850 --> 00:35:08.240
timeline for how requests get
made is a really useful tool

833
00:35:08.240 --> 00:35:09.070
to be able to have.

834
00:35:09.070 --> 00:35:09.810
BORIS SMUS: Right.

835
00:35:09.810 --> 00:35:11.325
So actually, that will
be network, right?

836
00:35:11.325 --> 00:35:12.040
PETE LEPAGE: Right.

837
00:35:12.040 --> 00:35:13.470
Yeah.

838
00:35:13.470 --> 00:35:14.735
There's network.

839
00:35:14.735 --> 00:35:16.560
BORIS SMUS: Timeline is
also very useful.

840
00:35:16.560 --> 00:35:19.900
PETE LEPAGE: So if I reload
this page, sure enough,

841
00:35:19.900 --> 00:35:23.260
there's all the resources that
are getting loaded for this

842
00:35:23.260 --> 00:35:25.290
particular image.

843
00:35:25.290 --> 00:35:27.070
And I can see how
long this took.

844
00:35:27.070 --> 00:35:32.570
So like the page DOM content
loaded was fired here

845
00:35:32.570 --> 00:35:34.080
at this blue line.

846
00:35:34.080 --> 00:35:37.190
And here at this red line,
the load event was fired.

847
00:35:37.190 --> 00:35:38.820
BORIS SMUS: That's awesome.

848
00:35:38.820 --> 00:35:39.450
Super useful.

849
00:35:39.450 --> 00:35:40.350
PETE LEPAGE: Very useful.

850
00:35:40.350 --> 00:35:40.810
BORIS SMUS: Yeah.

851
00:35:40.810 --> 00:35:44.960
So this is running milestone
18 of Chrome.

852
00:35:44.960 --> 00:35:48.530
And it's on par with m18.

853
00:35:48.530 --> 00:35:51.060
But now Chrome has moved
a little forward.

854
00:35:51.060 --> 00:35:51.790
PETE LEPAGE: Yeah.

855
00:35:51.790 --> 00:35:55.520
So I'm running Chrome Beta
on this machine.

856
00:35:55.520 --> 00:35:57.350
And Chrome Beta is 21.

857
00:35:57.350 --> 00:36:02.590
So Stable will be 20.

858
00:36:02.590 --> 00:36:02.870
All right.

859
00:36:02.870 --> 00:36:05.640
So with that, why don't me pop
over and take a couple of the

860
00:36:05.640 --> 00:36:08.490
questions from the
moderator queue?

861
00:36:08.490 --> 00:36:09.765
BORIS SMUS: Sounds good.

862
00:36:09.765 --> 00:36:12.520

863
00:36:12.520 --> 00:36:17.060
PETE LEPAGE: I'll grab
the first one.

864
00:36:17.060 --> 00:36:19.310
So the first question-- let me
just reload this, make sure

865
00:36:19.310 --> 00:36:20.560
we've got the latest stuff.

866
00:36:20.560 --> 00:36:23.820

867
00:36:23.820 --> 00:36:26.490
What's your opinion on using
mobile framework such as

868
00:36:26.490 --> 00:36:28.296
jQuery Mobile?

869
00:36:28.296 --> 00:36:29.460
BORIS SMUS: Good question.

870
00:36:29.460 --> 00:36:31.260
PETE LEPAGE: It is
a good question.

871
00:36:31.260 --> 00:36:37.930
So I think, my opinion, using
stuff like that has its place.

872
00:36:37.930 --> 00:36:40.860
And I've used jQuery Mobile
for a couple projects.

873
00:36:40.860 --> 00:36:44.480
I thought it was a neat sort
of place to start and

874
00:36:44.480 --> 00:36:46.390
experiment with.

875
00:36:46.390 --> 00:36:50.350
It doesn't necessarily work
for every single project.

876
00:36:50.350 --> 00:36:56.280
And it does provide a few
headaches here and there, if

877
00:36:56.280 --> 00:36:59.540
you want to do things that
jQuery Mobile doesn't support

878
00:36:59.540 --> 00:37:01.610
or sort of falls outside
the box.

879
00:37:01.610 --> 00:37:02.665
What's your view on it?

880
00:37:02.665 --> 00:37:04.730
BORIS SMUS: I kind of agree.

881
00:37:04.730 --> 00:37:09.490
I think it's great for sort of
these apps that are very

882
00:37:09.490 --> 00:37:10.940
content-centric.

883
00:37:10.940 --> 00:37:15.300
So you have like hierarchical
sets of views that are all

884
00:37:15.300 --> 00:37:17.190
kind of similar and
maybe text heavy.

885
00:37:17.190 --> 00:37:18.570
PETE LEPAGE: I want to
go look something up.

886
00:37:18.570 --> 00:37:20.110
I want to flow through
something,

887
00:37:20.110 --> 00:37:20.900
something like that.

888
00:37:20.900 --> 00:37:24.760
BORIS SMUS: And you can break
out of the mold with plug-ins

889
00:37:24.760 --> 00:37:26.420
that have a plug-in framework.

890
00:37:26.420 --> 00:37:29.620
So if you want to do something
a little bit outside of that

891
00:37:29.620 --> 00:37:30.950
framework, it's fine.

892
00:37:30.950 --> 00:37:35.520
But if you're doing like a
complex app with its own kind

893
00:37:35.520 --> 00:37:39.550
of UI, maybe there's some
drawing app or something where

894
00:37:39.550 --> 00:37:42.460
it's a lot of interaction that's
not really common to

895
00:37:42.460 --> 00:37:45.020
the sorts of apps that it's
designed for, I would say

896
00:37:45.020 --> 00:37:48.530
don't use it and like look
to something else.

897
00:37:48.530 --> 00:37:53.590
Maybe look to a framework like
Sencha or something like that.

898
00:37:53.590 --> 00:37:55.090
Or roll your own.

899
00:37:55.090 --> 00:38:00.590
Because ultimately, you might
need to go there.

900
00:38:00.590 --> 00:38:04.172
PETE LEPAGE: Do you want to read
off the next question?

901
00:38:04.172 --> 00:38:07.670
BORIS SMUS: OK, let's see.

902
00:38:07.670 --> 00:38:10.880
Any way to launch Chrome
after clicking links

903
00:38:10.880 --> 00:38:12.780
in any apps on iPad?

904
00:38:12.780 --> 00:38:16.020
It launches Safari even
after updating Gmail?

905
00:38:16.020 --> 00:38:16.290
Right.

906
00:38:16.290 --> 00:38:21.270
So basically, you can--

907
00:38:21.270 --> 00:38:25.520
as an iOS app developer, you
can write an app that will

908
00:38:25.520 --> 00:38:28.140
check if Chrome is installed
and launch

909
00:38:28.140 --> 00:38:30.780
Chrome instead of Safari.

910
00:38:30.780 --> 00:38:34.620
That said, it's up to the app
developer and not the user.

911
00:38:34.620 --> 00:38:39.120
So if I, the user, say if I
want Chrome to be launched

912
00:38:39.120 --> 00:38:42.760
every time any link opens,
I'm out of luck.

913
00:38:42.760 --> 00:38:45.220
iOS doesn't provide that
sort of flexibility.

914
00:38:45.220 --> 00:38:52.410
So about Gmail specifically,
they have their own agendas.

915
00:38:52.410 --> 00:38:54.280
PETE LEPAGE: They
may hopefully.

916
00:38:54.280 --> 00:38:55.210
That's actually a good point.

917
00:38:55.210 --> 00:38:58.400
We'll go send an email
to the Gmail team.

918
00:38:58.400 --> 00:39:04.340
But I know that the Google+
team just updated their

919
00:39:04.340 --> 00:39:09.690
Google+ app.

920
00:39:09.690 --> 00:39:15.020
If Chrome is installed, it'll
open links in Chrome on iOS if

921
00:39:15.020 --> 00:39:17.170
it's installed.

922
00:39:17.170 --> 00:39:21.190
So it's going to be a matter
of getting developers to go

923
00:39:21.190 --> 00:39:23.570
and start doing that.

924
00:39:23.570 --> 00:39:29.020
If you have an app or use an
app, go ask your developer to

925
00:39:29.020 --> 00:39:29.770
enable that feature.

926
00:39:29.770 --> 00:39:31.540
That will be a really
nice thing to have.

927
00:39:31.540 --> 00:39:31.940
BORIS SMUS: Yeah.

928
00:39:31.940 --> 00:39:32.970
Totally.

929
00:39:32.970 --> 00:39:33.230
All right.

930
00:39:33.230 --> 00:39:33.830
Next question?

931
00:39:33.830 --> 00:39:34.560
PETE LEPAGE: Yeah.

932
00:39:34.560 --> 00:39:34.830
Next question.

933
00:39:34.830 --> 00:39:35.830
BORIS SMUS: All right.

934
00:39:35.830 --> 00:39:41.080
So there's a question about
using a master key to secure

935
00:39:41.080 --> 00:39:44.142
saved passwords in
Chrome for PC.

936
00:39:44.142 --> 00:39:47.240

937
00:39:47.240 --> 00:39:51.240
So I think this is something
about key chaining, probably--

938
00:39:51.240 --> 00:39:53.290
PETE LEPAGE: What's the
specific question say?

939
00:39:53.290 --> 00:39:55.630
BORIS SMUS: What about a master
key to secure the saved

940
00:39:55.630 --> 00:39:57.110
passwords in Chrome for PC?

941
00:39:57.110 --> 00:40:00.060
PETE LEPAGE: Huh.

942
00:40:00.060 --> 00:40:01.390
So I would say maybe if--

943
00:40:01.390 --> 00:40:04.950
I am not sure I quite understand
the question, but

944
00:40:04.950 --> 00:40:07.210
if you can go provide a little
bit more detail in there,

945
00:40:07.210 --> 00:40:11.560
we'll take a look at that this
afternoon and try and put an

946
00:40:11.560 --> 00:40:14.890
answer in there if we
can understand that.

947
00:40:14.890 --> 00:40:16.280
BORIS SMUS: There
was one more.

948
00:40:16.280 --> 00:40:16.630
PETE LEPAGE: All right.

949
00:40:16.630 --> 00:40:17.380
One more question.

950
00:40:17.380 --> 00:40:19.100
I think we'll take this as
our last question and

951
00:40:19.100 --> 00:40:21.385
then wrap it up.

952
00:40:21.385 --> 00:40:23.300
BORIS SMUS: So workarounds
to--

953
00:40:23.300 --> 00:40:25.610
this is not really
Mobile-related, but I think we

954
00:40:25.610 --> 00:40:27.290
can probably talk a
little bit about.

955
00:40:27.290 --> 00:40:29.710
Workarounds to execute
dynamically generated scripts

956
00:40:29.710 --> 00:40:33.180
in iframes in Manifest 2.

957
00:40:33.180 --> 00:40:36.945
So this is an app or
extension question.

958
00:40:36.945 --> 00:40:40.900
PETE LEPAGE: So I think with
that, the one piece that I

959
00:40:40.900 --> 00:40:44.160
would say to go have a look at
is the sandboxed iframe stuff.

960
00:40:44.160 --> 00:40:47.120
Because with sandbox iframes--

961
00:40:47.120 --> 00:40:48.940
with Manifest version
2, they implement

962
00:40:48.940 --> 00:40:50.380
Content Security Policy.

963
00:40:50.380 --> 00:40:54.440
Content Security Policy is a
piece that helps to protect

964
00:40:54.440 --> 00:40:57.740
you from cross-site scripting
and other security

965
00:40:57.740 --> 00:40:59.160
vulnerabilities.

966
00:40:59.160 --> 00:41:02.360
And it restricts some of the
things that can happen.

967
00:41:02.360 --> 00:41:07.650
With a sandboxed iframe, you
can do a lot of not so safe

968
00:41:07.650 --> 00:41:10.330
stuff, but it's sandboxed
and can't get outside

969
00:41:10.330 --> 00:41:11.430
that sandbox generally.

970
00:41:11.430 --> 00:41:13.460
BORIS SMUS: So you can do eval
in a sandboxed iframe?

971
00:41:13.460 --> 00:41:15.970
PETE LEPAGE: You know, I can't
remember the exact list of

972
00:41:15.970 --> 00:41:18.550
things, but I think you may
be able to do that.

973
00:41:18.550 --> 00:41:22.460
So it's worth having a look
at the sandboxed iframe.

974
00:41:22.460 --> 00:41:25.810
And the sandboxed iframe is
actually a larger piece that

975
00:41:25.810 --> 00:41:29.650
doesn't just fit into Chrome
apps and extensions, but it's

976
00:41:29.650 --> 00:41:32.380
something that's coming
to the web in general.

977
00:41:32.380 --> 00:41:33.330
BORIS SMUS: Right.

978
00:41:33.330 --> 00:41:36.450
And if you're doing it on the
web in general, you can also

979
00:41:36.450 --> 00:41:38.590
set your own custom Content
Security Policy.

980
00:41:38.590 --> 00:41:39.320
PETE LEPAGE: Absolutely.

981
00:41:39.320 --> 00:41:41.410
And you can modify
that as well.

982
00:41:41.410 --> 00:41:44.540
BORIS SMUS: So I guess Manifest
2 sort of suggests

983
00:41:44.540 --> 00:41:47.232
that you're doing it in Chrome
apps or extensions.

984
00:41:47.232 --> 00:41:48.690
PETE LEPAGE: Good point.

985
00:41:48.690 --> 00:41:49.410
BORIS SMUS: All right.

986
00:41:49.410 --> 00:41:51.330
I think that's all
the time we have.

987
00:41:51.330 --> 00:41:53.660
So thanks guys for joining us.

988
00:41:53.660 --> 00:41:54.530
PETE LEPAGE: Thank
you very much.

989
00:41:54.530 --> 00:41:57.290
And we'll be doing these
more regularly.

990
00:41:57.290 --> 00:41:59.630
We'd love to hear
your feedback.

991
00:41:59.630 --> 00:42:02.560
Let us know either through
the comments or

992
00:42:02.560 --> 00:42:03.520
anything like that.

993
00:42:03.520 --> 00:42:05.030
So with that, thanks
very much.

994
00:42:05.030 --> 00:42:06.635
And we'll chat soon.

995
00:42:06.635 --> 00:42:07.885
Bye bye.

996
00:42:07.885 --> 00:42:35.400

